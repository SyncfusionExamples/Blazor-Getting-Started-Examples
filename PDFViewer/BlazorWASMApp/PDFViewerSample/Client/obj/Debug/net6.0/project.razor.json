{"SerializedFilePath":"F:\\Code\\Blazor-Getting-Started-Examples\\PDFViewer\\BlazorWASMApp\\PDFViewerSample\\Client\\obj\\Debug\\net6.0\\project.razor.json","FilePath":"F:\\Code\\Blazor-Getting-Started-Examples\\PDFViewer\\BlazorWASMApp\\PDFViewerSample\\Client\\PDFViewerSample.Client.csproj","Configuration":{"ConfigurationName":"Default","LanguageVersion":"6.0","Extensions":[]},"ProjectWorkspaceState":{"TagHelpers":[{"HashCode":-2141491575,"Kind":"Components.Component","Name":"PDFViewerSample.Client.Pages.FetchData","AssemblyName":"PDFViewerSample.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FetchData"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"PDFViewerSample.Client.Pages.FetchData"}},{"HashCode":-768941712,"Kind":"Components.Component","Name":"PDFViewerSample.Client.Pages.FetchData","AssemblyName":"PDFViewerSample.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PDFViewerSample.Client.Pages.FetchData"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"PDFViewerSample.Client.Pages.FetchData","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1708729577,"Kind":"Components.Component","Name":"PDFViewerSample.Client.Pages.Counter","AssemblyName":"PDFViewerSample.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Counter"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"PDFViewerSample.Client.Pages.Counter"}},{"HashCode":-559367960,"Kind":"Components.Component","Name":"PDFViewerSample.Client.Pages.Counter","AssemblyName":"PDFViewerSample.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PDFViewerSample.Client.Pages.Counter"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"PDFViewerSample.Client.Pages.Counter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":807242277,"Kind":"Components.Component","Name":"PDFViewerSample.Client.Pages.Index","AssemblyName":"PDFViewerSample.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Index"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"PDFViewerSample.Client.Pages.Index"}},{"HashCode":-772468972,"Kind":"Components.Component","Name":"PDFViewerSample.Client.Pages.Index","AssemblyName":"PDFViewerSample.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PDFViewerSample.Client.Pages.Index"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"PDFViewerSample.Client.Pages.Index","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-860579123,"Kind":"Components.Component","Name":"PDFViewerSample.Client.Shared.MainLayout","AssemblyName":"PDFViewerSample.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MainLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Body","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"PDFViewerSample.Client.Shared.MainLayout"}},{"HashCode":-889871026,"Kind":"Components.Component","Name":"PDFViewerSample.Client.Shared.MainLayout","AssemblyName":"PDFViewerSample.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PDFViewerSample.Client.Shared.MainLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Body","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"PDFViewerSample.Client.Shared.MainLayout","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1758492853,"Kind":"Components.ChildContent","Name":"PDFViewerSample.Client.Shared.MainLayout.Body","AssemblyName":"PDFViewerSample.Client","Documentation":"\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"MainLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"PDFViewerSample.Client.Shared.MainLayout.Body","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1160017817,"Kind":"Components.ChildContent","Name":"PDFViewerSample.Client.Shared.MainLayout.Body","AssemblyName":"PDFViewerSample.Client","Documentation":"\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"PDFViewerSample.Client.Shared.MainLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"PDFViewerSample.Client.Shared.MainLayout.Body","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1076454081,"Kind":"Components.Component","Name":"PDFViewerSample.Client.Shared.NavMenu","AssemblyName":"PDFViewerSample.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavMenu"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"PDFViewerSample.Client.Shared.NavMenu"}},{"HashCode":668502690,"Kind":"Components.Component","Name":"PDFViewerSample.Client.Shared.NavMenu","AssemblyName":"PDFViewerSample.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PDFViewerSample.Client.Shared.NavMenu"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"PDFViewerSample.Client.Shared.NavMenu","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":459848620,"Kind":"Components.Component","Name":"PDFViewerSample.Client.Shared.SurveyPrompt","AssemblyName":"PDFViewerSample.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SurveyPrompt"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"PDFViewerSample.Client.Shared.SurveyPrompt"}},{"HashCode":-1523015308,"Kind":"Components.Component","Name":"PDFViewerSample.Client.Shared.SurveyPrompt","AssemblyName":"PDFViewerSample.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PDFViewerSample.Client.Shared.SurveyPrompt"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"PDFViewerSample.Client.Shared.SurveyPrompt","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":972816803,"Kind":"Components.Component","Name":"PDFViewerSample.Client.App","AssemblyName":"PDFViewerSample.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"App"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"PDFViewerSample.Client.App"}},{"HashCode":1093504972,"Kind":"Components.Component","Name":"PDFViewerSample.Client.App","AssemblyName":"PDFViewerSample.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PDFViewerSample.Client.App"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"PDFViewerSample.Client.App","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-939804279,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"OnSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm"}},{"HashCode":707216181,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"OnSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-408043690,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1704917829,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1420558410,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox"}},{"HashCode":-1650507943,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":704578197,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Microsoft.AspNetCore.Components.Forms.InputDateType","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the type of HTML input to be rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.GenericTyped":"True"}},{"HashCode":1915447523,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Microsoft.AspNetCore.Components.Forms.InputDateType","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the type of HTML input to be rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":328771901,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputFile","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputFile"}},{"HashCode":-177543775,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputFile","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputFile","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":935534115,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.GenericTyped":"True"}},{"HashCode":31892784,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":532414311,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","Components.GenericTyped":"True"}},{"HashCode":-1975191459,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1239896056,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Components.GenericTyped":"True"}},{"HashCode":1248723515,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-5688087,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputRadioGroup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-647344956,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-978423627,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.GenericTyped":"True"}},{"HashCode":1777691999,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1130157769,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-662414230,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-400466067,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText"}},{"HashCode":-624435841,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1526645893,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea"}},{"HashCode":1278722841,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":49922468,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Components.GenericTyped":"True"}},{"HashCode":1343924420,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1355226858,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary"}},{"HashCode":-1802879813,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1281797782,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            After navigating from one page to another, sets focus to an element\n            matching a CSS selector. This can be used to build an accessible\n            navigation system compatible with screen readers.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FocusOnNavigate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"\n            <summary>\n            Gets or sets the route data. This can be obtained from an enclosing\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a CSS selector describing the element to be focused after\n            navigation between pages.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selector"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"}},{"HashCode":-1640124240,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            After navigating from one page to another, sets focus to an element\n            matching a CSS selector. This can be used to build an accessible\n            navigation system compatible with screen readers.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"\n            <summary>\n            Gets or sets the route data. This can be obtained from an enclosing\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a CSS selector describing the element to be focused after\n            navigation between pages.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selector"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1462781705,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActiveClass"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink"}},{"HashCode":1481322604,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActiveClass"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-386477367,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"NavLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":720148254,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1120317366,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeadContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent"}},{"HashCode":-764133860,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.HeadContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1567531839,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HeadContent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1208072112,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.HeadContent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1593959033,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadOutlet","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeadOutlet"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadOutlet"}},{"HashCode":-34130624,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadOutlet","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.HeadOutlet"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadOutlet","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1765254677,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.PageTitle","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PageTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle"}},{"HashCode":1265492983,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.PageTitle","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.PageTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":206629272,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PageTitle"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2057572728,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.PageTitle"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1524847289,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Captures errors thrown from its child content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ErrorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Exception>","Documentation":"\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ErrorContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaximumErrorCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The maximum number of errors that can be handled. If more errors are received,\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaximumErrorCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}},{"HashCode":-1295008868,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Captures errors thrown from its child content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ErrorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Exception>","Documentation":"\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ErrorContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaximumErrorCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The maximum number of errors that can be handled. If more errors are received,\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaximumErrorCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1991737880,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ErrorBoundary"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1669670115,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1533554184,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorContent","ParentTag":"ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ErrorContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-941639418,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorContent","ParentTag":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ErrorContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2100606566,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Provides functionality for rendering a virtualized list of items.\n            </summary>\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Documentation":"\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemSize","TypeName":"System.Single","Documentation":"\n            <summary>\n            Gets the size of each item in pixels. Defaults to 50px.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSize"}},{"Kind":"Components.Component","Name":"ItemsProvider","TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Documentation":"\n            <summary>\n            Gets or sets the function providing items to the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemsProvider","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<TItem>","Documentation":"\n            <summary>\n            Gets or sets the fixed item source.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets a value that determines how many additional items will be rendered\n            before and after the visible region. This help to reduce the frequency of rendering\n            during scrolling. However, higher values mean that more elements will be present\n            in the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OverscanCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","Components.GenericTyped":"True"}},{"HashCode":-349097859,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Provides functionality for rendering a virtualized list of items.\n            </summary>\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Documentation":"\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemSize","TypeName":"System.Single","Documentation":"\n            <summary>\n            Gets the size of each item in pixels. Defaults to 50px.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSize"}},{"Kind":"Components.Component","Name":"ItemsProvider","TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Documentation":"\n            <summary>\n            Gets or sets the function providing items to the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemsProvider","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<TItem>","Documentation":"\n            <summary>\n            Gets or sets the fixed item source.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets a value that determines how many additional items will be rendered\n            before and after the visible region. This help to reduce the frequency of rendering\n            during scrolling. However, higher values mean that more elements will be present\n            in the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OverscanCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1013193740,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1003924632,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":153524432,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1557674147,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1302905679,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Placeholder' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":945222623,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Placeholder' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1570376398,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataAnnotationsValidator"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"}},{"HashCode":-1317134907,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":100075476,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            The value to be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsFixed"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Components.GenericTyped":"True"}},{"HashCode":2058523097,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            The value to be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsFixed"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":909141050,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-700243708,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.CascadingValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1980174088,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.DynamicComponent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that renders another component dynamically according to its\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DynamicComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the type of the component to be rendered. The supplied type must\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Parameters","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a dictionary of parameters to be passed to the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Parameters"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.DynamicComponent"}},{"HashCode":-1268363715,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.DynamicComponent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that renders another component dynamically according to its\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.DynamicComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the type of the component to be rendered. The supplied type must\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Parameters","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a dictionary of parameters to be passed to the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Parameters"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.DynamicComponent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":47192083,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Layout"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView"}},{"HashCode":171641290,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Layout"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1879651112,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LayoutView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1403492109,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.LayoutView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1044827811,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultLayout"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.RouteView"}},{"HashCode":-1365215869,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultLayout"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.RouteView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":646472149,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AppAssembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAssemblies"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotFound","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Found","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Navigating","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Navigating","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnNavigateAsync","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>","Documentation":"\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnNavigateAsync","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PreferExactMatches","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\n            over wildcards.\n            <para>This property is obsolete and configuring it does nothing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PreferExactMatches"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router"}},{"HashCode":-701282789,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AppAssembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAssemblies"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotFound","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Found","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Navigating","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Navigating","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnNavigateAsync","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>","Documentation":"\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnNavigateAsync","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PreferExactMatches","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\n            over wildcards.\n            <para>This property is obsolete and configuring it does nothing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PreferExactMatches"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-806325141,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Router"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1984749400,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":377068835,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Found' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-879377312,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Found' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1895447004,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Navigating","ParentTag":"Router"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2136429748,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Navigating","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1168418326,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SfColorPicker","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            ColorPicker component is a user interface to select and adjust color values.\n            It provides supports for various color specification like Red Green Blue, Hue Saturation Value and Hex codes.\n            </summary>\n            <summary>\n            ColorPicker component is a user interface to select and adjust color values.\n            It provides supports for various color specification like Red Green Blue, Hue Saturation Value and Hex codes.\n            </summary>\n            <summary>\n            ColorPicker component is a user interface to select and adjust color values.\n            It provides supports for various color specification like Red Green Blue, Hue Saturation Value and Hex codes.\n            </summary>\n            <summary>\n            ColorPicker component is a user interface to select and adjust color values.\n            It provides supports for various color specification like Red Green Blue, Hue Saturation Value and Hex codes.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfColorPicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the dropdown button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"Columns","TypeName":"System.Double","Documentation":"\n            <summary>\n            It is used to render the ColorPicker palette with specified columns.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Columns"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            This property sets the CSS classes to root element of the ColorPicker\n             which helps to customize the UI styles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to enable / disable ColorPicker component. If it is disabled the ColorPicker popup won’t open.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableOpacity","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to enable / disable the opacity option of ColorPicker component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableOpacity"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            To enable or disable persisting component's state between page reloads and it is extended from component class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Inline","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to render the ColorPicker component as inline.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Inline"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"Syncfusion.Blazor.Inputs.ColorPickerMode","IsEnum":true,"Documentation":"\n            <summary>\n            It is used to render the ColorPicker with the specified mode.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"ModeSwitcher","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to show / hide the mode switcher button of ColorPicker component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ModeSwitcher"}},{"Kind":"Components.Component","Name":"NoColor","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to enable / disable the no color option of ColorPicker component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoColor"}},{"Kind":"Components.Component","Name":"PresetColors","TypeName":"System.Collections.Generic.Dictionary<System.String, System.String[]>","Documentation":"\n            <summary>\n            It is used to load custom colors to palette.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PresetColors"}},{"Kind":"Components.Component","Name":"ShowButtons","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to show / hide the control buttons (apply / cancel) of  ColorPicker component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowButtons"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            It is used to set the color value for ColorPicker. It should be specified as Hex code.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs>","Documentation":"\n            <summary>\n            Triggers before opening the ColorPicker popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.OpenEventArgs>","Documentation":"\n            <summary>\n            Triggers while opening the ColorPicker popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs>","Documentation":"\n            <summary>\n            Triggers before closing the ColorPicker popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnModeSwitch","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.ModeSwitchEventArgs>","Documentation":"\n            <summary>\n            Triggers before Switching between ColorPicker mode.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnModeSwitch","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ModeSwitched","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.ModeSwitchEventArgs>","Documentation":"\n            <summary>\n            Triggers after the ColorPicker mode is switched.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ModeSwitched","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTileRender","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.PaletteTileEventArgs>","Documentation":"\n            <summary>\n            Triggers while rendering each palette tile.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTileRender","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.ColorPickerEventArgs>","Documentation":"\n            <summary>\n            Triggers while changing the colors. It will be triggered based on the showButtons property.\n            If the property is false, the event will be triggered while selecting the colors.\n            If the property is true, the event will be triggered while apply the selected color.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.ColorPickerEventArgs>","Documentation":"\n            <summary>\n            Triggers while selecting the color in picker / palette, when ShowButtons property is enabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SfColorPicker"}},{"HashCode":1258447907,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SfColorPicker","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            ColorPicker component is a user interface to select and adjust color values.\n            It provides supports for various color specification like Red Green Blue, Hue Saturation Value and Hex codes.\n            </summary>\n            <summary>\n            ColorPicker component is a user interface to select and adjust color values.\n            It provides supports for various color specification like Red Green Blue, Hue Saturation Value and Hex codes.\n            </summary>\n            <summary>\n            ColorPicker component is a user interface to select and adjust color values.\n            It provides supports for various color specification like Red Green Blue, Hue Saturation Value and Hex codes.\n            </summary>\n            <summary>\n            ColorPicker component is a user interface to select and adjust color values.\n            It provides supports for various color specification like Red Green Blue, Hue Saturation Value and Hex codes.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SfColorPicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the dropdown button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"Columns","TypeName":"System.Double","Documentation":"\n            <summary>\n            It is used to render the ColorPicker palette with specified columns.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Columns"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            This property sets the CSS classes to root element of the ColorPicker\n             which helps to customize the UI styles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to enable / disable ColorPicker component. If it is disabled the ColorPicker popup won’t open.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableOpacity","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to enable / disable the opacity option of ColorPicker component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableOpacity"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            To enable or disable persisting component's state between page reloads and it is extended from component class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Inline","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to render the ColorPicker component as inline.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Inline"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"Syncfusion.Blazor.Inputs.ColorPickerMode","IsEnum":true,"Documentation":"\n            <summary>\n            It is used to render the ColorPicker with the specified mode.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"ModeSwitcher","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to show / hide the mode switcher button of ColorPicker component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ModeSwitcher"}},{"Kind":"Components.Component","Name":"NoColor","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to enable / disable the no color option of ColorPicker component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoColor"}},{"Kind":"Components.Component","Name":"PresetColors","TypeName":"System.Collections.Generic.Dictionary<System.String, System.String[]>","Documentation":"\n            <summary>\n            It is used to load custom colors to palette.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PresetColors"}},{"Kind":"Components.Component","Name":"ShowButtons","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to show / hide the control buttons (apply / cancel) of  ColorPicker component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowButtons"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            It is used to set the color value for ColorPicker. It should be specified as Hex code.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs>","Documentation":"\n            <summary>\n            Triggers before opening the ColorPicker popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.OpenEventArgs>","Documentation":"\n            <summary>\n            Triggers while opening the ColorPicker popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs>","Documentation":"\n            <summary>\n            Triggers before closing the ColorPicker popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnModeSwitch","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.ModeSwitchEventArgs>","Documentation":"\n            <summary>\n            Triggers before Switching between ColorPicker mode.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnModeSwitch","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ModeSwitched","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.ModeSwitchEventArgs>","Documentation":"\n            <summary>\n            Triggers after the ColorPicker mode is switched.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ModeSwitched","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTileRender","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.PaletteTileEventArgs>","Documentation":"\n            <summary>\n            Triggers while rendering each palette tile.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTileRender","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.ColorPickerEventArgs>","Documentation":"\n            <summary>\n            Triggers while changing the colors. It will be triggered based on the showButtons property.\n            If the property is false, the event will be triggered while selecting the colors.\n            If the property is true, the event will be triggered while apply the selected color.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.ColorPickerEventArgs>","Documentation":"\n            <summary>\n            Triggers while selecting the color in picker / palette, when ShowButtons property is enabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SfColorPicker","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":276946958,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SfColorPicker.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfColorPicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SfColorPicker.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1993592317,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SfColorPicker.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.SfColorPicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SfColorPicker.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-917576710,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SfMaskedTextBox","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            The MaskedTextBox is an input element that allows to get input from the user.\n            </summary>\n            <summary>\n            The MaskedTextBox is an input element that allows to get input from the user.\n            </summary>\n            <summary>\n            The MaskedTextBox is an input element that allows to get input from the user.\n            </summary>\n            <summary>\n            The MaskedTextBox is an input element that allows to get input from the user.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfMaskedTextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Blur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.MaskBlurEventArgs>","Documentation":"\n            <summary>\n            Triggers when the SfMaskedTextBox has focus-out.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Blur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.MaskChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of SfMaskedTextBox has changed and gets focus-out.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the SfMaskedTextBox component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the SfMaskedTextBox component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Focus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.MaskFocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the SfMaskedTextBox gets focus.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Focus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of input has changed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnInput","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input has focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input gets focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the SfMaskedTextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the SfMaskedTextBox. One or more custom CSS classes can be added to a SfMaskedTextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the persisting SfMaskedTextBox state between page reloads. If enabled, the `Value` state will be persisted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the SfMaskedTextBox allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"FloatLabelType","TypeName":"Syncfusion.Blazor.Inputs.FloatLabelType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the floating label behavior of the SfMaskedTextBox that the placeholder text floats above the SfMaskedTextBox based on the following values.\n            <para>Possible values are:</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Never</term>\n            <description>Never floats the label in the SfMaskedTextBox when the placeholder is available.</description>\n            </item>\n            <item>\n            <term>Always</term>\n            <description>The floating label always floats above the SfMaskedTextBox.</description>\n            </item>\n            <item>\n            <term>Auto</term>\n            <description>The floating label floats above the SfMaskedTextBox after focusing it or when enters the value in it.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FloatLabelType"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the root element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            If you configured both property and equivalent input attribute, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in SfMaskedTextBox. The property is depending on the FloatLabelType property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Readonly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the boolean value whether the SfMaskedTextBox allows user to change the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Readonly"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the clear button is displayed in SfMaskedTextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the content of the SfMaskedTextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the SfMaskedTextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tab order of the SfMaskedTextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Mask","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets a value that masks the MaskedTextBox to allow/validate the user input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Mask"}},{"Kind":"Components.Component","Name":"PromptChar","TypeName":"System.Char","Documentation":"\n            <summary>\n            Gets or sets a value that will be shown as a prompting symbol for the masked value.\n            The symbol used to show input positions in the MaskedTextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PromptChar"}},{"Kind":"Components.Component","Name":"CustomCharacters","TypeName":"System.Collections.Generic.Dictionary<System.String, System.String>","Documentation":"\n            <summary>\n            Sets the collection of values to be mapped for non-mask elements(literals)\n            which have been set in the mask of MaskedTextBox.\n             <para>In the below example, non-mask elements \"P\" accepts values\n            \"P\" , \"A\" , \"p\" , \"a\" and \"M\" accepts values \"M\", \"m\" mentioned in the custom characters collection.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomCharacters"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SfMaskedTextBox"}},{"HashCode":1176869569,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SfMaskedTextBox","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            The MaskedTextBox is an input element that allows to get input from the user.\n            </summary>\n            <summary>\n            The MaskedTextBox is an input element that allows to get input from the user.\n            </summary>\n            <summary>\n            The MaskedTextBox is an input element that allows to get input from the user.\n            </summary>\n            <summary>\n            The MaskedTextBox is an input element that allows to get input from the user.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SfMaskedTextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Blur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.MaskBlurEventArgs>","Documentation":"\n            <summary>\n            Triggers when the SfMaskedTextBox has focus-out.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Blur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.MaskChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of SfMaskedTextBox has changed and gets focus-out.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the SfMaskedTextBox component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the SfMaskedTextBox component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Focus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.MaskFocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the SfMaskedTextBox gets focus.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Focus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of input has changed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnInput","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input has focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input gets focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the SfMaskedTextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the SfMaskedTextBox. One or more custom CSS classes can be added to a SfMaskedTextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the persisting SfMaskedTextBox state between page reloads. If enabled, the `Value` state will be persisted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the SfMaskedTextBox allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"FloatLabelType","TypeName":"Syncfusion.Blazor.Inputs.FloatLabelType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the floating label behavior of the SfMaskedTextBox that the placeholder text floats above the SfMaskedTextBox based on the following values.\n            <para>Possible values are:</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Never</term>\n            <description>Never floats the label in the SfMaskedTextBox when the placeholder is available.</description>\n            </item>\n            <item>\n            <term>Always</term>\n            <description>The floating label always floats above the SfMaskedTextBox.</description>\n            </item>\n            <item>\n            <term>Auto</term>\n            <description>The floating label floats above the SfMaskedTextBox after focusing it or when enters the value in it.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FloatLabelType"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the root element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            If you configured both property and equivalent input attribute, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in SfMaskedTextBox. The property is depending on the FloatLabelType property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Readonly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the boolean value whether the SfMaskedTextBox allows user to change the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Readonly"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the clear button is displayed in SfMaskedTextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the content of the SfMaskedTextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the SfMaskedTextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tab order of the SfMaskedTextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Mask","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets a value that masks the MaskedTextBox to allow/validate the user input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Mask"}},{"Kind":"Components.Component","Name":"PromptChar","TypeName":"System.Char","Documentation":"\n            <summary>\n            Gets or sets a value that will be shown as a prompting symbol for the masked value.\n            The symbol used to show input positions in the MaskedTextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PromptChar"}},{"Kind":"Components.Component","Name":"CustomCharacters","TypeName":"System.Collections.Generic.Dictionary<System.String, System.String>","Documentation":"\n            <summary>\n            Sets the collection of values to be mapped for non-mask elements(literals)\n            which have been set in the mask of MaskedTextBox.\n             <para>In the below example, non-mask elements \"P\" accepts values\n            \"P\" , \"A\" , \"p\" , \"a\" and \"M\" accepts values \"M\", \"m\" mentioned in the custom characters collection.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomCharacters"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SfMaskedTextBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":86159503,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SfMaskedTextBox.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfMaskedTextBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SfMaskedTextBox.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2053684922,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SfMaskedTextBox.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.SfMaskedTextBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SfMaskedTextBox.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1481708291,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SfNumericTextBox<TValue>","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            The NumericTextBox is used to get the number inputs from the user. The input values can be incremented or decremented by a predefined step value.\n            </summary>\n            <summary>\n            The NumericTextBox is used to get the number inputs from the user. The input values can be incremented or decremented by a predefined step value.\n            </summary>\n            <summary>\n            The NumericTextBox is used to get the number inputs from the user. The input values can be incremented or decremented by a predefined step value.\n            </summary>\n            <typeparam name=\"TValue\">Specifies the type of SfNumericTextBox.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfNumericTextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Inputs.SfNumericTextBox<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Currency","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the currency code to use in currency formatting. Possible values are the ISO 4217 currency codes, such as 'USD' for the US dollar and 'EUR' for the euro.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Currency"}},{"Kind":"Components.Component","Name":"FloatLabelType","TypeName":"Syncfusion.Blazor.Inputs.FloatLabelType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.\n            <para>Possible values are:</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Never</term>\n            <description>Never floats the label in the TextBox when the placeholder is available.</description>\n            </item>\n            <item>\n            <term>Always</term>\n            <description>The floating label always floats above the TextBox.</description>\n            </item>\n            <item>\n            <term>Auto</term>\n            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FloatLabelType"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the boolean value whether the TextBox allows user to change the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Readonly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the boolean value whether the TextBox allows user to change the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Readonly"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the clear button is displayed in TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tab order of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the root element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            If you configured both property and equivalent input attribute, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"Decimals","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Specifies the number precision applied to the textbox value when the NumericTextBox is focused.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Decimals"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the number format that indicates the display format for the value of the NumericTextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"ShowSpinButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether the up and down spin buttons will be displayed in NumericTextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowSpinButton"}},{"Kind":"Components.Component","Name":"Step","TypeName":"TValue","Documentation":"\n            <summary>\n            Specifies the incremental or decremental step size for the NumericTextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Step","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"StrictMode","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the NumericTextBox component allows the value for the specified range.\n            <para>True - the input value will be restricted between the min and max range. The typed value gets modified to fit the range on a focused out state.</para>\n            <para>Else, it allows any value even out of range value, at that time of wrong value entered, the error class will be added to the component to highlight the error.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrictMode"}},{"Kind":"Components.Component","Name":"ValidateDecimalOnType","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether the length of the decimal should be restricted during typing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidateDecimalOnType"}},{"Kind":"Components.Component","Name":"Max","TypeName":"TValue","Documentation":"\n            <summary>\n            Specifies a maximum value that is allowed a user can enter.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Max","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Min","TypeName":"TValue","Documentation":"\n            <summary>\n            Specifies a minimum value that is allowed a user can enter.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Min","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of input has changed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnInput","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content is paste into an input.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnPaste","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input has focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input gets focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Sets the content of the TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the TextBox. One or more custom CSS classes can be added to a TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the persisting TextBox state between page reloads. If enabled, the `Value` state will be persisted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the TextBox allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"ValidateOnInput","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component validates the input or not.\n            </summary>\n            <value>\n            <c>true</c>, If the ValidateOnInput is enabled for form validation, then the model value will be updated on entering the value to the input. otherwise, <b>false</b>.The default value is <c>false</c>.\n            </value>\n            <remarks>\n            This property is used to validate the form on typing into the input and updating the model value. The ValueChange event will be fired after the component lost its focus.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ValidateOnInput"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SfNumericTextBox<TValue>","Components.GenericTyped":"True"}},{"HashCode":-1999741756,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SfNumericTextBox<TValue>","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            The NumericTextBox is used to get the number inputs from the user. The input values can be incremented or decremented by a predefined step value.\n            </summary>\n            <summary>\n            The NumericTextBox is used to get the number inputs from the user. The input values can be incremented or decremented by a predefined step value.\n            </summary>\n            <summary>\n            The NumericTextBox is used to get the number inputs from the user. The input values can be incremented or decremented by a predefined step value.\n            </summary>\n            <typeparam name=\"TValue\">Specifies the type of SfNumericTextBox.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SfNumericTextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Inputs.SfNumericTextBox<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Currency","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the currency code to use in currency formatting. Possible values are the ISO 4217 currency codes, such as 'USD' for the US dollar and 'EUR' for the euro.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Currency"}},{"Kind":"Components.Component","Name":"FloatLabelType","TypeName":"Syncfusion.Blazor.Inputs.FloatLabelType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.\n            <para>Possible values are:</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Never</term>\n            <description>Never floats the label in the TextBox when the placeholder is available.</description>\n            </item>\n            <item>\n            <term>Always</term>\n            <description>The floating label always floats above the TextBox.</description>\n            </item>\n            <item>\n            <term>Auto</term>\n            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FloatLabelType"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the boolean value whether the TextBox allows user to change the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Readonly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the boolean value whether the TextBox allows user to change the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Readonly"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the clear button is displayed in TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tab order of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the root element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            If you configured both property and equivalent input attribute, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"Decimals","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Specifies the number precision applied to the textbox value when the NumericTextBox is focused.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Decimals"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the number format that indicates the display format for the value of the NumericTextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"ShowSpinButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether the up and down spin buttons will be displayed in NumericTextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowSpinButton"}},{"Kind":"Components.Component","Name":"Step","TypeName":"TValue","Documentation":"\n            <summary>\n            Specifies the incremental or decremental step size for the NumericTextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Step","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"StrictMode","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the NumericTextBox component allows the value for the specified range.\n            <para>True - the input value will be restricted between the min and max range. The typed value gets modified to fit the range on a focused out state.</para>\n            <para>Else, it allows any value even out of range value, at that time of wrong value entered, the error class will be added to the component to highlight the error.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrictMode"}},{"Kind":"Components.Component","Name":"ValidateDecimalOnType","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether the length of the decimal should be restricted during typing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidateDecimalOnType"}},{"Kind":"Components.Component","Name":"Max","TypeName":"TValue","Documentation":"\n            <summary>\n            Specifies a maximum value that is allowed a user can enter.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Max","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Min","TypeName":"TValue","Documentation":"\n            <summary>\n            Specifies a minimum value that is allowed a user can enter.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Min","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of input has changed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnInput","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content is paste into an input.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnPaste","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input has focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input gets focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Sets the content of the TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the TextBox. One or more custom CSS classes can be added to a TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the persisting TextBox state between page reloads. If enabled, the `Value` state will be persisted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the TextBox allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"ValidateOnInput","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component validates the input or not.\n            </summary>\n            <value>\n            <c>true</c>, If the ValidateOnInput is enabled for form validation, then the model value will be updated on entering the value to the input. otherwise, <b>false</b>.The default value is <c>false</c>.\n            </value>\n            <remarks>\n            This property is used to validate the form on typing into the input and updating the model value. The ValueChange event will be fired after the component lost its focus.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ValidateOnInput"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SfNumericTextBox<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":962278745,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SfNumericTextBox<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfNumericTextBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SfNumericTextBox<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1884683329,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SfNumericTextBox<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.SfNumericTextBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SfNumericTextBox<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":148051488,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.NumericTextBoxEvents<TValue>","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            The NumericTextBox is used to get the number inputs from the user. The input values can be incremented or decremented by a predefined step value.\n            </summary>\n            <typeparam name=\"TValue\">Specifies the type of SfNumericTextBox.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NumericTextBoxEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Inputs.NumericTextBoxEvents<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Blur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.NumericBlurEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers when the NumericTextBox got focus out.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Blur","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.ChangeEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers when the value of the NumericTextBox changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the NumericTextBox component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the NumericTextBox component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Focus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.NumericFocusEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers when the NumericTextBox got focus in.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Focus","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of input has changed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnInput","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content is paste into an input.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnPaste","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input has focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input gets focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Sets the content of the TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the TextBox. One or more custom CSS classes can be added to a TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the persisting TextBox state between page reloads. If enabled, the `Value` state will be persisted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the TextBox allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"ValidateOnInput","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component validates the input or not.\n            </summary>\n            <value>\n            <c>true</c>, If the ValidateOnInput is enabled for form validation, then the model value will be updated on entering the value to the input. otherwise, <b>false</b>.The default value is <c>false</c>.\n            </value>\n            <remarks>\n            This property is used to validate the form on typing into the input and updating the model value. The ValueChange event will be fired after the component lost its focus.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ValidateOnInput"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.NumericTextBoxEvents<TValue>","Components.GenericTyped":"True"}},{"HashCode":734077440,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.NumericTextBoxEvents<TValue>","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            The NumericTextBox is used to get the number inputs from the user. The input values can be incremented or decremented by a predefined step value.\n            </summary>\n            <typeparam name=\"TValue\">Specifies the type of SfNumericTextBox.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.NumericTextBoxEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Inputs.NumericTextBoxEvents<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Blur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.NumericBlurEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers when the NumericTextBox got focus out.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Blur","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.ChangeEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers when the value of the NumericTextBox changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the NumericTextBox component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the NumericTextBox component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Focus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.NumericFocusEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers when the NumericTextBox got focus in.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Focus","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of input has changed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnInput","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content is paste into an input.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnPaste","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input has focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input gets focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Sets the content of the TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the TextBox. One or more custom CSS classes can be added to a TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the persisting TextBox state between page reloads. If enabled, the `Value` state will be persisted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the TextBox allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"ValidateOnInput","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component validates the input or not.\n            </summary>\n            <value>\n            <c>true</c>, If the ValidateOnInput is enabled for form validation, then the model value will be updated on entering the value to the input. otherwise, <b>false</b>.The default value is <c>false</c>.\n            </value>\n            <remarks>\n            This property is used to validate the form on typing into the input and updating the model value. The ValueChange event will be fired after the component lost its focus.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ValidateOnInput"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.NumericTextBoxEvents<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1663326053,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SfSignature","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            The Signature component allows user to draw smooth signatures as vector outline of strokes using variable width Bézier curve interpolation. \n            It allows to save signature as image.\n            You can use your finger, pen, or mouse on a tablet, touchscreen, etc., to draw your own signature on this Signature component.\n            </summary>\n            <remarks>\n            Signature component is a user interface to draw the signature or text.\n            It supports stroke color, background color and image.\n            </remarks>\n            <example>\n            In the below code example, a basic Signature component initialized with <see cref=\"T:Syncfusion.Blazor.Inputs.SfSignature\" /> tag directive.\n            <code><![CDATA[ \n            <SfSignature style=\"height: 100%; width: 100%;\"></SfSignature>\n            ]]></code>\n            </example>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfSignature"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will applied to the <see cref=\"T:Syncfusion.Blazor.Inputs.SfSignature\" /> component.\n            </summary>\n            <remarks>\n            Additional attributes can be added as inline attributes or by specifying <c>@attributes</c> directive.\n            </remarks>\n            <example>\n            In the below code example, signature height and width has been specified as style attribute in <see cref=\"T:Syncfusion.Blazor.Inputs.SfSignature\" />.\n            <code><![CDATA[\n            <SfSignature style=\"height: 100%; width: 100%;\"></SfSignature>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the background color of the component.\n            </summary>\n            <value>\n            The background color of the component that accepts hex value, rgb and text (like <code>red</code>). The default value is <c>null</c>. \n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"BackgroundImage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the background image for the <see cref=\"T:Syncfusion.Blazor.Inputs.SfSignature\" /> component.\n            </summary>\n            <value>\n            An image that used to fill the background of the component. The default value is <c>null</c>. \n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundImage"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether to disable the <see cref=\"T:Syncfusion.Blazor.Inputs.SfSignature\" /> component where the opacity is set to show disabled state. \n            </summary>\n            <value>\n            <c>true</c>, if the signature component is disabled for user interaction. The default value is <c>false</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether to prevent the interaction in <see cref=\"T:Syncfusion.Blazor.Inputs.SfSignature\" /> component. \n            </summary>\n            <value>\n            <c>true</c>, if the signature component is read only state where the user interaction is prevented. The default value is <c>false</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"SaveWithBackground","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether to save the signature along with <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.BackgroundColor\" /> and <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.BackgroundImage\" /> while saving. \n            </summary>\n            <value>\n            <c>true</c>, if signature component to save with background. The default value is <c>true</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"SaveWithBackground"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the stroke color of the signature.\n            </summary>\n            <value>\n            The color of the signature stroke that accepts hex value, rgb and text (like <code>red</code>). The default value is <c>\"#000000\"</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"MinStrokeWidth","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets the minimum stroke width for signature. \n            The <see cref=\"T:Syncfusion.Blazor.Inputs.SfSignature\" /> component calculates stroke width based on <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.Velocity\" />, <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.MinStrokeWidth\" /> and <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.MaxStrokeWidth\" />.\n            </summary>\n            <value>\n            The minimum width of stroke. The default value is <c>0.5</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinStrokeWidth"}},{"Kind":"Components.Component","Name":"MaxStrokeWidth","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets the maximum stroke width for signature.\n            The <see cref=\"T:Syncfusion.Blazor.Inputs.SfSignature\" /> component calculates stroke width based on <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.Velocity\" />, <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.MinStrokeWidth\" /> and <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.MaxStrokeWidth\" />.\n            </summary>\n            <value>\n            The maximum width of stroke. The default value is <c>2.0</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MaxStrokeWidth"}},{"Kind":"Components.Component","Name":"Velocity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets the velocity to calculate the stroke thickness based on the pressure of the contact on the digitizer surface.\n            The Signature component calculates stroke thickness based on <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.Velocity\" />, <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.MinStrokeWidth\" /> and <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.MaxStrokeWidth\" />.\n            </summary>\n            <value>\n            The velocity to calculate the stroke thickness based on the pressure of the contact on the digitizer surface. The default value is <c>0.7</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Velocity"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether to persist component's state between page reloads.\n            </summary>\n            <value>\n            <c>true</c>, if the component's state persistence is enabled. The default value is <c>false</c>.\n            </value>\n            <remarks>\n            Component's property will be stored in browser local storage to persist component's state when page reloads.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"Changed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SignatureChangeEventArgs>","Documentation":"\n            <summary>\n            Gets or sets an event callback that is raised for the actions like undo, redo, clear and while user complete signing on <see cref=\"T:Syncfusion.Blazor.Inputs.SfSignature\" /> component.\n            </summary>\n            <example>\n            <code><![CDATA[\n            <SfSignature Changed=\"@changefunc\"></SfSignature>\n            @code \n            {\n                private void changefunc(SignatureChangeEventArgs args) \n                {\n                    if (args.ActionName == \"Clear\")\n                    {\n                        // validation code goes here\n                    }\n                }\n            }\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"Changed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SignatureSaveEventArgs>","Documentation":"\n            <summary>\n            Gets or sets an event callback that is raised while saving the signature.\n            </summary>\n            <remarks>\n            The file name and the file type(PNG, JPEG, SVG) can be changed using <see cref=\"T:Syncfusion.Blazor.Inputs.SignatureSaveEventArgs\" /> and <see cref=\"T:Syncfusion.Blazor.Inputs.SignatureFileType\" />.\n            The event callback is raised only for the keyboard action (Ctrl + S).\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfSignature Changed=\"@beforesavefunc\"></SfSignature>\n            @code \n            {\n                private void beforesavefunc(SignatureSaveEventArgs args) \n                {        \n                    args.fileType = \"SignatureFileType.Jpeg\";\n                }\n            }\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"OnSave","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SfSignature"}},{"HashCode":1212958770,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SfSignature","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            The Signature component allows user to draw smooth signatures as vector outline of strokes using variable width Bézier curve interpolation. \n            It allows to save signature as image.\n            You can use your finger, pen, or mouse on a tablet, touchscreen, etc., to draw your own signature on this Signature component.\n            </summary>\n            <remarks>\n            Signature component is a user interface to draw the signature or text.\n            It supports stroke color, background color and image.\n            </remarks>\n            <example>\n            In the below code example, a basic Signature component initialized with <see cref=\"T:Syncfusion.Blazor.Inputs.SfSignature\" /> tag directive.\n            <code><![CDATA[ \n            <SfSignature style=\"height: 100%; width: 100%;\"></SfSignature>\n            ]]></code>\n            </example>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SfSignature"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will applied to the <see cref=\"T:Syncfusion.Blazor.Inputs.SfSignature\" /> component.\n            </summary>\n            <remarks>\n            Additional attributes can be added as inline attributes or by specifying <c>@attributes</c> directive.\n            </remarks>\n            <example>\n            In the below code example, signature height and width has been specified as style attribute in <see cref=\"T:Syncfusion.Blazor.Inputs.SfSignature\" />.\n            <code><![CDATA[\n            <SfSignature style=\"height: 100%; width: 100%;\"></SfSignature>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the background color of the component.\n            </summary>\n            <value>\n            The background color of the component that accepts hex value, rgb and text (like <code>red</code>). The default value is <c>null</c>. \n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"BackgroundImage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the background image for the <see cref=\"T:Syncfusion.Blazor.Inputs.SfSignature\" /> component.\n            </summary>\n            <value>\n            An image that used to fill the background of the component. The default value is <c>null</c>. \n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundImage"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether to disable the <see cref=\"T:Syncfusion.Blazor.Inputs.SfSignature\" /> component where the opacity is set to show disabled state. \n            </summary>\n            <value>\n            <c>true</c>, if the signature component is disabled for user interaction. The default value is <c>false</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether to prevent the interaction in <see cref=\"T:Syncfusion.Blazor.Inputs.SfSignature\" /> component. \n            </summary>\n            <value>\n            <c>true</c>, if the signature component is read only state where the user interaction is prevented. The default value is <c>false</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"SaveWithBackground","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether to save the signature along with <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.BackgroundColor\" /> and <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.BackgroundImage\" /> while saving. \n            </summary>\n            <value>\n            <c>true</c>, if signature component to save with background. The default value is <c>true</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"SaveWithBackground"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the stroke color of the signature.\n            </summary>\n            <value>\n            The color of the signature stroke that accepts hex value, rgb and text (like <code>red</code>). The default value is <c>\"#000000\"</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"MinStrokeWidth","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets the minimum stroke width for signature. \n            The <see cref=\"T:Syncfusion.Blazor.Inputs.SfSignature\" /> component calculates stroke width based on <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.Velocity\" />, <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.MinStrokeWidth\" /> and <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.MaxStrokeWidth\" />.\n            </summary>\n            <value>\n            The minimum width of stroke. The default value is <c>0.5</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinStrokeWidth"}},{"Kind":"Components.Component","Name":"MaxStrokeWidth","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets the maximum stroke width for signature.\n            The <see cref=\"T:Syncfusion.Blazor.Inputs.SfSignature\" /> component calculates stroke width based on <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.Velocity\" />, <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.MinStrokeWidth\" /> and <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.MaxStrokeWidth\" />.\n            </summary>\n            <value>\n            The maximum width of stroke. The default value is <c>2.0</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MaxStrokeWidth"}},{"Kind":"Components.Component","Name":"Velocity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets the velocity to calculate the stroke thickness based on the pressure of the contact on the digitizer surface.\n            The Signature component calculates stroke thickness based on <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.Velocity\" />, <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.MinStrokeWidth\" /> and <see cref=\"P:Syncfusion.Blazor.Inputs.SfSignature.MaxStrokeWidth\" />.\n            </summary>\n            <value>\n            The velocity to calculate the stroke thickness based on the pressure of the contact on the digitizer surface. The default value is <c>0.7</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Velocity"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether to persist component's state between page reloads.\n            </summary>\n            <value>\n            <c>true</c>, if the component's state persistence is enabled. The default value is <c>false</c>.\n            </value>\n            <remarks>\n            Component's property will be stored in browser local storage to persist component's state when page reloads.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"Changed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SignatureChangeEventArgs>","Documentation":"\n            <summary>\n            Gets or sets an event callback that is raised for the actions like undo, redo, clear and while user complete signing on <see cref=\"T:Syncfusion.Blazor.Inputs.SfSignature\" /> component.\n            </summary>\n            <example>\n            <code><![CDATA[\n            <SfSignature Changed=\"@changefunc\"></SfSignature>\n            @code \n            {\n                private void changefunc(SignatureChangeEventArgs args) \n                {\n                    if (args.ActionName == \"Clear\")\n                    {\n                        // validation code goes here\n                    }\n                }\n            }\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"Changed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SignatureSaveEventArgs>","Documentation":"\n            <summary>\n            Gets or sets an event callback that is raised while saving the signature.\n            </summary>\n            <remarks>\n            The file name and the file type(PNG, JPEG, SVG) can be changed using <see cref=\"T:Syncfusion.Blazor.Inputs.SignatureSaveEventArgs\" /> and <see cref=\"T:Syncfusion.Blazor.Inputs.SignatureFileType\" />.\n            The event callback is raised only for the keyboard action (Ctrl + S).\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfSignature Changed=\"@beforesavefunc\"></SfSignature>\n            @code \n            {\n                private void beforesavefunc(SignatureSaveEventArgs args) \n                {        \n                    args.fileType = \"SignatureFileType.Jpeg\";\n                }\n            }\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"OnSave","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SfSignature","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":984061750,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.ColorRange","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            This class represent the color, start and end position of slider track.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ColorRange"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Get and set the Slider.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"\n            <summary>\n            Get and set the Color.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Start","TypeName":"System.Double","Documentation":"\n            <summary>\n            Get and set the start.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Start"}},{"Kind":"Components.Component","Name":"End","TypeName":"System.Double","Documentation":"\n            <summary>\n            Get and set the End.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"End"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.ColorRange"}},{"HashCode":-613269383,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.ColorRange","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            This class represent the color, start and end position of slider track.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.ColorRange"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Get and set the Slider.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"\n            <summary>\n            Get and set the Color.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Start","TypeName":"System.Double","Documentation":"\n            <summary>\n            Get and set the start.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Start"}},{"Kind":"Components.Component","Name":"End","TypeName":"System.Double","Documentation":"\n            <summary>\n            Get and set the End.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"End"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.ColorRange","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":320299476,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.ColorRange.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Get and set the Slider.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ColorRange"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.ColorRange.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1077263720,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.ColorRange.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Get and set the Slider.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.ColorRange"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.ColorRange.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-580743290,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SliderColorRanges","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the collections of colors to the slider track based on start and end value of each color.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SliderColorRanges"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Get and set the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderColorRanges"}},{"HashCode":221557749,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SliderColorRanges","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the collections of colors to the slider track based on start and end value of each color.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SliderColorRanges"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Get and set the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderColorRanges","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-76522287,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SliderColorRanges.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Get and set the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SliderColorRanges"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderColorRanges.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1929440001,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SliderColorRanges.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Get and set the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.SliderColorRanges"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderColorRanges.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1246792000,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SfSlider<TValue>","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Partial class SfSlider.\n            </summary>\n            <typeparam name=\"TValue\">Generic type parameter.</typeparam>.\n            <summary>\n            Partial class SfSlider.\n            </summary>\n            <summary>\n            Specifies the partial class SfSlider.\n            </summary>\n            <summary>\n            Specifies the partial class SfSlider.\n            </summary>\n            <summary>\n            The Slider component allows the user to select a value or range of values\n            in-between the min and max range, by dragging the handle over the slider bar.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfSlider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Inputs.SfSlider<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets id attribute for the slider element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the custom classes to be added to the element used to customize the slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"CustomValues","TypeName":"System.String[]","Documentation":"\n            <summary>\n            Specifies an array of slider values in number or string type.\n            The min and max step values are not considered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomValues"}},{"Kind":"Components.Component","Name":"EnableAnimation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables/Disables the animation for slider movement.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableAnimation"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables the slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the maximum value of the slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"Min","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the minimum value of the slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"Syncfusion.Blazor.Inputs.SliderOrientation","IsEnum":true,"Documentation":"\n            <summary>\n             Specifies whether to render the slider in vertical or horizontal orientation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether the render the slider in read-only mode to restrict any user interaction.\n            The slider rendered with user defined values and can’t be interacted with user actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"ShowButtons","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to show or hide the increase/decrease buttons\n            of Slider to change the slider value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowButtons"}},{"Kind":"Components.Component","Name":"Step","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the step value for each value change when the increase / decrease\n             button is clicked or on arrow keys press or on dragging the thumb.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Inputs.SliderType","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the type of the Slider. The available options are:\n              Default - Allows to a single value in the Slider.\n              MinRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.\n              Range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            It is used to denote the current value of the Slider.\n            The value should be specified in array of number when render Slider type as range.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback of the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the Slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"IsImmediateValue","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether the value need to be updated at the time of dragging slider handle.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsImmediateValue"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SfSlider<TValue>","Components.GenericTyped":"True"}},{"HashCode":-177301165,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SfSlider<TValue>","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Partial class SfSlider.\n            </summary>\n            <typeparam name=\"TValue\">Generic type parameter.</typeparam>.\n            <summary>\n            Partial class SfSlider.\n            </summary>\n            <summary>\n            Specifies the partial class SfSlider.\n            </summary>\n            <summary>\n            Specifies the partial class SfSlider.\n            </summary>\n            <summary>\n            The Slider component allows the user to select a value or range of values\n            in-between the min and max range, by dragging the handle over the slider bar.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SfSlider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Inputs.SfSlider<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets id attribute for the slider element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the custom classes to be added to the element used to customize the slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"CustomValues","TypeName":"System.String[]","Documentation":"\n            <summary>\n            Specifies an array of slider values in number or string type.\n            The min and max step values are not considered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomValues"}},{"Kind":"Components.Component","Name":"EnableAnimation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables/Disables the animation for slider movement.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableAnimation"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables the slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the maximum value of the slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"Min","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the minimum value of the slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"Syncfusion.Blazor.Inputs.SliderOrientation","IsEnum":true,"Documentation":"\n            <summary>\n             Specifies whether to render the slider in vertical or horizontal orientation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether the render the slider in read-only mode to restrict any user interaction.\n            The slider rendered with user defined values and can’t be interacted with user actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"ShowButtons","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to show or hide the increase/decrease buttons\n            of Slider to change the slider value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowButtons"}},{"Kind":"Components.Component","Name":"Step","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the step value for each value change when the increase / decrease\n             button is clicked or on arrow keys press or on dragging the thumb.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Inputs.SliderType","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the type of the Slider. The available options are:\n              Default - Allows to a single value in the Slider.\n              MinRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.\n              Range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            It is used to denote the current value of the Slider.\n            The value should be specified in array of number when render Slider type as range.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback of the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the Slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"IsImmediateValue","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether the value need to be updated at the time of dragging slider handle.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsImmediateValue"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SfSlider<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1632985399,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SfSlider<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfSlider"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SfSlider<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1433521401,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SfSlider<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.SfSlider"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SfSlider<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-69505140,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SliderEvents<TValue>","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Configure handlers to handle the events of the Slider component.\n            </summary>\n            <typeparam name=\"TValue\">\"TValue\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SliderEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Inputs.SliderEvents<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SliderChangeEventArgs<TValue>>","Documentation":"\n            <summary>\n            We can trigger change event whenever Slider value is changed.\n             In other term, this event will be triggered while drag the slider thumb.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SliderChangeEventArgs<TValue>>","Documentation":"\n            <summary>\n            Fires whenever the Slider value is changed.\n            In other term, this event will be triggered, while drag the slider thumb completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the Slider is successfully created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TicksRendered","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SliderTickRenderedEventArgs>","Documentation":"\n            <summary>\n            Triggers when the ticks are rendered on the Slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TicksRendered","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TicksRendering","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SliderTickEventArgs>","Documentation":"\n            <summary>\n            Triggers on rendering the ticks element in the Slider,\n            which is used to customize the ticks labels dynamically.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TicksRendering","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTooltipChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SliderTooltipEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers when the Sider tooltip value is changed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTooltipChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderEvents<TValue>","Components.GenericTyped":"True"}},{"HashCode":647418368,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SliderEvents<TValue>","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Configure handlers to handle the events of the Slider component.\n            </summary>\n            <typeparam name=\"TValue\">\"TValue\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SliderEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Inputs.SliderEvents<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SliderChangeEventArgs<TValue>>","Documentation":"\n            <summary>\n            We can trigger change event whenever Slider value is changed.\n             In other term, this event will be triggered while drag the slider thumb.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SliderChangeEventArgs<TValue>>","Documentation":"\n            <summary>\n            Fires whenever the Slider value is changed.\n            In other term, this event will be triggered, while drag the slider thumb completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the Slider is successfully created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TicksRendered","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SliderTickRenderedEventArgs>","Documentation":"\n            <summary>\n            Triggers when the ticks are rendered on the Slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TicksRendered","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TicksRendering","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SliderTickEventArgs>","Documentation":"\n            <summary>\n            Triggers on rendering the ticks element in the Slider,\n            which is used to customize the ticks labels dynamically.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TicksRendering","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTooltipChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SliderTooltipEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers when the Sider tooltip value is changed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTooltipChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderEvents<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1248991821,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SliderLimitData","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            This class is used to set limit bar to slider component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SliderLimitData"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to enable the limit in the slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"EndHandleFixed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to lock the second handle.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EndHandleFixed"}},{"Kind":"Components.Component","Name":"MaxEnd","TypeName":"System.Double?","Documentation":"\n            <summary>\n            It is used to set the maximum end limit value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxEnd"}},{"Kind":"Components.Component","Name":"MaxStart","TypeName":"System.Double?","Documentation":"\n            <summary>\n            It is used to set the maximum start limit value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxStart"}},{"Kind":"Components.Component","Name":"MinEnd","TypeName":"System.Double?","Documentation":"\n            <summary>\n            It is used to set the minimum end limit value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinEnd"}},{"Kind":"Components.Component","Name":"MinStart","TypeName":"System.Double?","Documentation":"\n            <summary>\n            It is used to set the minimum start limit value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinStart"}},{"Kind":"Components.Component","Name":"StartHandleFixed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to lock the first handle.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StartHandleFixed"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderLimitData"}},{"HashCode":-709963724,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SliderLimitData","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            This class is used to set limit bar to slider component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SliderLimitData"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to enable the limit in the slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"EndHandleFixed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to lock the second handle.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EndHandleFixed"}},{"Kind":"Components.Component","Name":"MaxEnd","TypeName":"System.Double?","Documentation":"\n            <summary>\n            It is used to set the maximum end limit value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxEnd"}},{"Kind":"Components.Component","Name":"MaxStart","TypeName":"System.Double?","Documentation":"\n            <summary>\n            It is used to set the maximum start limit value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxStart"}},{"Kind":"Components.Component","Name":"MinEnd","TypeName":"System.Double?","Documentation":"\n            <summary>\n            It is used to set the minimum end limit value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinEnd"}},{"Kind":"Components.Component","Name":"MinStart","TypeName":"System.Double?","Documentation":"\n            <summary>\n            It is used to set the minimum start limit value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinStart"}},{"Kind":"Components.Component","Name":"StartHandleFixed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to lock the first handle.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StartHandleFixed"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderLimitData","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2060228996,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SliderLimitData.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SliderLimitData"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderLimitData.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-426825761,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SliderLimitData.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.SliderLimitData"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderLimitData.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2012625115,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SliderLimits","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            This class is used to set limit bar to slider component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SliderLimits"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to enable the limit in the slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"EndHandleFixed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to lock the second handle.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EndHandleFixed"}},{"Kind":"Components.Component","Name":"MaxEnd","TypeName":"System.Double?","Documentation":"\n            <summary>\n            It is used to set the maximum end limit value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxEnd"}},{"Kind":"Components.Component","Name":"MaxStart","TypeName":"System.Double?","Documentation":"\n            <summary>\n            It is used to set the maximum start limit value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxStart"}},{"Kind":"Components.Component","Name":"MinEnd","TypeName":"System.Double?","Documentation":"\n            <summary>\n            It is used to set the minimum end limit value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinEnd"}},{"Kind":"Components.Component","Name":"MinStart","TypeName":"System.Double?","Documentation":"\n            <summary>\n            It is used to set the minimum start limit value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinStart"}},{"Kind":"Components.Component","Name":"StartHandleFixed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to lock the first handle.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StartHandleFixed"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderLimits"}},{"HashCode":2050255794,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SliderLimits","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            This class is used to set limit bar to slider component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SliderLimits"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to enable the limit in the slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"EndHandleFixed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to lock the second handle.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EndHandleFixed"}},{"Kind":"Components.Component","Name":"MaxEnd","TypeName":"System.Double?","Documentation":"\n            <summary>\n            It is used to set the maximum end limit value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxEnd"}},{"Kind":"Components.Component","Name":"MaxStart","TypeName":"System.Double?","Documentation":"\n            <summary>\n            It is used to set the maximum start limit value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxStart"}},{"Kind":"Components.Component","Name":"MinEnd","TypeName":"System.Double?","Documentation":"\n            <summary>\n            It is used to set the minimum end limit value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinEnd"}},{"Kind":"Components.Component","Name":"MinStart","TypeName":"System.Double?","Documentation":"\n            <summary>\n            It is used to set the minimum start limit value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinStart"}},{"Kind":"Components.Component","Name":"StartHandleFixed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to lock the first handle.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StartHandleFixed"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderLimits","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-131116542,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SliderLimits.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SliderLimits"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderLimits.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":51798702,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SliderLimits.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.SliderLimits"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderLimits.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-453454683,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SliderTicks","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            This class is used to render ticks to slider component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SliderTicks"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"\n            <summary>\n            It is used to customize the Slider scale value to the desired format using Internationalization or events(custom formatting).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"LargeStep","TypeName":"System.Double","Documentation":"\n            <summary>\n            It is used to denote the distance between two major (large) ticks from the scale of the Slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LargeStep"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"Syncfusion.Blazor.Inputs.Placement","IsEnum":true,"Documentation":"\n            <summary>\n            It is used to denote the position of the ticks in the Slider. The available options are:.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placement"}},{"Kind":"Components.Component","Name":"ShowSmallTicks","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            We can show or hide the small ticks in the Slider, which will be appeared in between the largeTicks.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowSmallTicks"}},{"Kind":"Components.Component","Name":"SmallStep","TypeName":"System.Double","Documentation":"\n            <summary>\n            It is used to denote the distance between two minor (small) ticks from the scale of the Slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SmallStep"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderTicks"}},{"HashCode":83032411,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SliderTicks","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            This class is used to render ticks to slider component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SliderTicks"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"\n            <summary>\n            It is used to customize the Slider scale value to the desired format using Internationalization or events(custom formatting).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"LargeStep","TypeName":"System.Double","Documentation":"\n            <summary>\n            It is used to denote the distance between two major (large) ticks from the scale of the Slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LargeStep"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"Syncfusion.Blazor.Inputs.Placement","IsEnum":true,"Documentation":"\n            <summary>\n            It is used to denote the position of the ticks in the Slider. The available options are:.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placement"}},{"Kind":"Components.Component","Name":"ShowSmallTicks","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            We can show or hide the small ticks in the Slider, which will be appeared in between the largeTicks.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowSmallTicks"}},{"Kind":"Components.Component","Name":"SmallStep","TypeName":"System.Double","Documentation":"\n            <summary>\n            It is used to denote the distance between two minor (small) ticks from the scale of the Slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SmallStep"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderTicks","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1369279464,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SliderTicks.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SliderTicks"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderTicks.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":765727185,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SliderTicks.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.SliderTicks"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderTicks.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-295965058,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SliderTicksData","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            This class is used to render ticks to slider component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SliderTicksData"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"\n            <summary>\n            It is used to customize the Slider scale value to the desired format using Internationalization or events(custom formatting).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"LargeStep","TypeName":"System.Double","Documentation":"\n            <summary>\n            It is used to denote the distance between two major (large) ticks from the scale of the Slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LargeStep"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"Syncfusion.Blazor.Inputs.Placement","IsEnum":true,"Documentation":"\n            <summary>\n            It is used to denote the position of the ticks in the Slider. The available options are:.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placement"}},{"Kind":"Components.Component","Name":"ShowSmallTicks","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            We can show or hide the small ticks in the Slider, which will be appeared in between the largeTicks.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowSmallTicks"}},{"Kind":"Components.Component","Name":"SmallStep","TypeName":"System.Double","Documentation":"\n            <summary>\n            It is used to denote the distance between two minor (small) ticks from the scale of the Slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SmallStep"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderTicksData"}},{"HashCode":-1719260114,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SliderTicksData","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            This class is used to render ticks to slider component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SliderTicksData"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"\n            <summary>\n            It is used to customize the Slider scale value to the desired format using Internationalization or events(custom formatting).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"LargeStep","TypeName":"System.Double","Documentation":"\n            <summary>\n            It is used to denote the distance between two major (large) ticks from the scale of the Slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LargeStep"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"Syncfusion.Blazor.Inputs.Placement","IsEnum":true,"Documentation":"\n            <summary>\n            It is used to denote the position of the ticks in the Slider. The available options are:.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placement"}},{"Kind":"Components.Component","Name":"ShowSmallTicks","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            We can show or hide the small ticks in the Slider, which will be appeared in between the largeTicks.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowSmallTicks"}},{"Kind":"Components.Component","Name":"SmallStep","TypeName":"System.Double","Documentation":"\n            <summary>\n            It is used to denote the distance between two minor (small) ticks from the scale of the Slider.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SmallStep"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderTicksData","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1349846196,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SliderTicksData.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SliderTicksData"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderTicksData.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":347350585,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SliderTicksData.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.SliderTicksData"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderTicksData.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1723278539,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SliderTooltip","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            This class is used to set a tooltip for slider component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SliderTooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            It is used to customize the Tooltip which accepts custom CSS class names that define\n             specific user-defined styles and themes to be applied on the Tooltip element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"\n            <summary>\n            It is used to customize the Tooltip content to the desired format\n             using internationalization or events (custom formatting).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to show or hide the Tooltip of Slider Component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"Syncfusion.Blazor.Inputs.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            It is used to denote the position for the tooltip element in the Slider. The available options are:\n              Before - Tooltip is shown in the top of the horizontal slider bar or at the left of the vertical slider bar.\n              After - Tooltip is shown in the bottom of the horizontal slider bar or at the right of the vertical slider bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placement"}},{"Kind":"Components.Component","Name":"ShowOn","TypeName":"Syncfusion.Blazor.Inputs.TooltipShowOn","IsEnum":true,"Documentation":"\n            <summary>\n            It is used to determine the device mode to show the Tooltip.\n            If it is in desktop, it will show the Tooltip content when hovering on the target element.\n            If it is in touch device. It will show the Tooltip content when tap and holding on the target element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowOn"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderTooltip"}},{"HashCode":-236220451,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SliderTooltip","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            This class is used to set a tooltip for slider component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SliderTooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            It is used to customize the Tooltip which accepts custom CSS class names that define\n             specific user-defined styles and themes to be applied on the Tooltip element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"\n            <summary>\n            It is used to customize the Tooltip content to the desired format\n             using internationalization or events (custom formatting).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to show or hide the Tooltip of Slider Component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"Syncfusion.Blazor.Inputs.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            It is used to denote the position for the tooltip element in the Slider. The available options are:\n              Before - Tooltip is shown in the top of the horizontal slider bar or at the left of the vertical slider bar.\n              After - Tooltip is shown in the bottom of the horizontal slider bar or at the right of the vertical slider bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placement"}},{"Kind":"Components.Component","Name":"ShowOn","TypeName":"Syncfusion.Blazor.Inputs.TooltipShowOn","IsEnum":true,"Documentation":"\n            <summary>\n            It is used to determine the device mode to show the Tooltip.\n            If it is in desktop, it will show the Tooltip content when hovering on the target element.\n            If it is in touch device. It will show the Tooltip content when tap and holding on the target element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowOn"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderTooltip","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1445772696,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SliderTooltip.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SliderTooltip"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderTooltip.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":505872190,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SliderTooltip.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.SliderTooltip"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderTooltip.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1993683266,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SliderTooltipData","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            This class is used to set a tooltip for slider component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SliderTooltipData"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            It is used to customize the Tooltip which accepts custom CSS class names that define\n             specific user-defined styles and themes to be applied on the Tooltip element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"\n            <summary>\n            It is used to customize the Tooltip content to the desired format\n             using internationalization or events (custom formatting).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to show or hide the Tooltip of Slider Component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"Syncfusion.Blazor.Inputs.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            It is used to denote the position for the tooltip element in the Slider. The available options are:\n              Before - Tooltip is shown in the top of the horizontal slider bar or at the left of the vertical slider bar.\n              After - Tooltip is shown in the bottom of the horizontal slider bar or at the right of the vertical slider bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placement"}},{"Kind":"Components.Component","Name":"ShowOn","TypeName":"Syncfusion.Blazor.Inputs.TooltipShowOn","IsEnum":true,"Documentation":"\n            <summary>\n            It is used to determine the device mode to show the Tooltip.\n            If it is in desktop, it will show the Tooltip content when hovering on the target element.\n            If it is in touch device. It will show the Tooltip content when tap and holding on the target element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowOn"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderTooltipData"}},{"HashCode":1686022207,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SliderTooltipData","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            This class is used to set a tooltip for slider component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SliderTooltipData"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            It is used to customize the Tooltip which accepts custom CSS class names that define\n             specific user-defined styles and themes to be applied on the Tooltip element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"\n            <summary>\n            It is used to customize the Tooltip content to the desired format\n             using internationalization or events (custom formatting).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to show or hide the Tooltip of Slider Component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"Syncfusion.Blazor.Inputs.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            It is used to denote the position for the tooltip element in the Slider. The available options are:\n              Before - Tooltip is shown in the top of the horizontal slider bar or at the left of the vertical slider bar.\n              After - Tooltip is shown in the bottom of the horizontal slider bar or at the right of the vertical slider bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placement"}},{"Kind":"Components.Component","Name":"ShowOn","TypeName":"Syncfusion.Blazor.Inputs.TooltipShowOn","IsEnum":true,"Documentation":"\n            <summary>\n            It is used to determine the device mode to show the Tooltip.\n            If it is in desktop, it will show the Tooltip content when hovering on the target element.\n            If it is in touch device. It will show the Tooltip content when tap and holding on the target element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowOn"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderTooltipData","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-824584010,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SliderTooltipData.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SliderTooltipData"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderTooltipData.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-799022054,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SliderTooltipData.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.SliderTooltipData"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SliderTooltipData.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1280868688,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SfTextBox","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            The TextBox is an input element that allows to get input from the user. It allows the user to edit or display the text value.\n            </summary>\n            <summary>\n            The TextBox is an input element that allows to get input from the user. It allows the user to edit or display the text value.\n            </summary>\n            <summary>\n            The TextBox is an input element that allows to get input from the user. It allows the user to edit or display the text value.\n            </summary>\n            <summary>\n            The TextBox is an input element that allows to get input from the user. It allows the user to edit or display the text value.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfTextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Blur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.FocusOutEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TextBox has focus-out.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Blur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.ChangedEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of TextBox has changed and gets focus-out.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the TextBox component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the TextBox component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Focus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.FocusInEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TextBox gets focus.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Focus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Input","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.InputEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of TextBox has changed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Input","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Autocomplete","TypeName":"Syncfusion.Blazor.Inputs.AutoComplete","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies whether the browser is allowed to automatically enter or select a value for the TextBox.\n            <para>By default, autocomplete is enabled for TextBox.</para>\n            <para>Possible values are:</para>\n            <list type=\"bullet\">\n            <item>\n            <term>On</term>\n            <description>Specifies that autocomplete is enabled</description>\n            </item>\n            <item>\n            <term>Off</term>\n            <description>Specifies that autocomplete is disabled.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Autocomplete"}},{"Kind":"Components.Component","Name":"FloatLabelType","TypeName":"Syncfusion.Blazor.Inputs.FloatLabelType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.\n            <para>Possible values are:</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Never</term>\n            <description>Never floats the label in the TextBox when the placeholder is available.</description>\n            </item>\n            <item>\n            <term>Always</term>\n            <description>The floating label always floats above the TextBox.</description>\n            </item>\n            <item>\n            <term>Auto</term>\n            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FloatLabelType"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the boolean value whether the TextBox allows user to change the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Readonly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the boolean value whether the TextBox allows user to change the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Readonly"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the clear button is displayed in TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tab order of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Multiline","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that enables or disables the multiline on the TextBox.\n            The TextBox changes from a single line to multiline when enabling this multiline mode.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Multiline"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the root element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            If you configured both property and equivalent input attribute, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Inputs.InputType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the behavior of the TextBox such as text, password, email, and more.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of input has changed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnInput","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content is paste into an input.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnPaste","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input has focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input gets focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the content of the TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the TextBox. One or more custom CSS classes can be added to a TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the persisting TextBox state between page reloads. If enabled, the `Value` state will be persisted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the TextBox allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"ValidateOnInput","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component validates the input or not.\n            </summary>\n            <value>\n            <c>true</c>, If the ValidateOnInput is enabled for form validation, then the model value will be updated on entering the value to the input. otherwise, <b>false</b>.The default value is <c>false</c>.\n            </value>\n            <remarks>\n            This property is used to validate the form on typing into the input and updating the model value. The ValueChange event will be fired after the component lost its focus.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ValidateOnInput"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SfTextBox"}},{"HashCode":735268456,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SfTextBox","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            The TextBox is an input element that allows to get input from the user. It allows the user to edit or display the text value.\n            </summary>\n            <summary>\n            The TextBox is an input element that allows to get input from the user. It allows the user to edit or display the text value.\n            </summary>\n            <summary>\n            The TextBox is an input element that allows to get input from the user. It allows the user to edit or display the text value.\n            </summary>\n            <summary>\n            The TextBox is an input element that allows to get input from the user. It allows the user to edit or display the text value.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SfTextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Blur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.FocusOutEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TextBox has focus-out.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Blur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.ChangedEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of TextBox has changed and gets focus-out.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the TextBox component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the TextBox component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Focus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.FocusInEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TextBox gets focus.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Focus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Input","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.InputEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of TextBox has changed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Input","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Autocomplete","TypeName":"Syncfusion.Blazor.Inputs.AutoComplete","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies whether the browser is allowed to automatically enter or select a value for the TextBox.\n            <para>By default, autocomplete is enabled for TextBox.</para>\n            <para>Possible values are:</para>\n            <list type=\"bullet\">\n            <item>\n            <term>On</term>\n            <description>Specifies that autocomplete is enabled</description>\n            </item>\n            <item>\n            <term>Off</term>\n            <description>Specifies that autocomplete is disabled.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Autocomplete"}},{"Kind":"Components.Component","Name":"FloatLabelType","TypeName":"Syncfusion.Blazor.Inputs.FloatLabelType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.\n            <para>Possible values are:</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Never</term>\n            <description>Never floats the label in the TextBox when the placeholder is available.</description>\n            </item>\n            <item>\n            <term>Always</term>\n            <description>The floating label always floats above the TextBox.</description>\n            </item>\n            <item>\n            <term>Auto</term>\n            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FloatLabelType"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the boolean value whether the TextBox allows user to change the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Readonly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the boolean value whether the TextBox allows user to change the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Readonly"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the clear button is displayed in TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tab order of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Multiline","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that enables or disables the multiline on the TextBox.\n            The TextBox changes from a single line to multiline when enabling this multiline mode.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Multiline"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the root element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            If you configured both property and equivalent input attribute, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Inputs.InputType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the behavior of the TextBox such as text, password, email, and more.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of input has changed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnInput","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content is paste into an input.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnPaste","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input has focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input gets focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the content of the TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the TextBox. One or more custom CSS classes can be added to a TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the persisting TextBox state between page reloads. If enabled, the `Value` state will be persisted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the TextBox allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"ValidateOnInput","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component validates the input or not.\n            </summary>\n            <value>\n            <c>true</c>, If the ValidateOnInput is enabled for form validation, then the model value will be updated on entering the value to the input. otherwise, <b>false</b>.The default value is <c>false</c>.\n            </value>\n            <remarks>\n            This property is used to validate the form on typing into the input and updating the model value. The ValueChange event will be fired after the component lost its focus.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ValidateOnInput"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SfTextBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1406244554,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SfUploader","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            The uploader component is useful to upload images, documents, and other files to server.\n            The component is the extended version of HTML5 that is uploaded with multiple file selection, auto upload, drag and drop, progress bar, preload files, and validation.\n            </summary>\n            <summary>\n            Specifies the list of files that will be preloaded on rendering of uploader component.\n            </summary>\n            <summary>\n            Specifies the list of files that will be preloaded on rendering of uploader component.\n            </summary>\n            <summary>\n            The uploader component is useful to upload images, documents, and other files to server.\n            The component is the extended version of HTML5 that is uploaded with multiple file selection, auto upload, drag and drop, progress bar, preload files, and validation.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfUploader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the Uploader component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AllowedExtensions","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the extensions of the file types allowed in the Uploader component and pass the extensions\n            with comma separators.\n            <para> For example,if you want to upload specific image files, pass `AllowedExtensions` as \".jpg,.png\".</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedExtensions"}},{"Kind":"Components.Component","Name":"AutoUpload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            By default, the Uploader component initiates automatic upload when the files are added in upload queue.\n            <para>If you want to manipulate the files before uploading to server, disable the AutoUpload property.</para>\n            <para>The buttons \"upload\" and \"clear\" will be hided from file list when AutoUpload property is true.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoUpload"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with root element of the Uploader.\n            One or more custom CSS classes can be added to a Uploader.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"DirectoryUpload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the folder of files can be browsed in the Uploader component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DirectoryUpload"}},{"Kind":"Components.Component","Name":"DropArea","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the drop target to handle the drag-and-drop upload.\n            By default, the Uploader creates wrapper around file input that will act as drop target.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropArea"}},{"Kind":"Components.Component","Name":"DropEffect","TypeName":"Syncfusion.Blazor.Inputs.DropEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the drag operation effect to the Uploader component.\n            <para> Possible values are .</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Copy</term>\n            </item>\n            <item>\n            <term>Move</term>\n            </item>\n            <item>\n            <term>Link</term>\n            </item>\n            <item>\n            <term>None</term>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropEffect"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting Uploader state between page reloads. If enabled, the `Files` state will be persisted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering Uploader in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the Uploader allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            <para>You can add the additional html attributes such as styles, class, and more to the root element.</para>\n            <para>If you configured both property and equivalent html attributes, then the component considers the property value.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            If you configured both property and equivalent input attribute, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"MaxFileSize","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the maximum allowed file size to be uploaded in bytes.\n            The property used to make sure that you cannot upload too large files.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxFileSize"}},{"Kind":"Components.Component","Name":"MinFileSize","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the minimum file size to be uploaded in bytes.\n            The property used to make sure that you cannot upload empty files and small files.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinFileSize"}},{"Kind":"Components.Component","Name":"AllowMultiple","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the multiple files can be browsed or dropped simultaneously in the Uploader component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowMultiple"}},{"Kind":"Components.Component","Name":"SequentialUpload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            By default, the file Uploader component is processing the multiple files simultaneously.\n            <para>If SequentialUpload property is enabled, the file upload component performs the upload one after the other.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SequentialUpload"}},{"Kind":"Components.Component","Name":"ShowFileList","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the default file list can be rendered.\n            The property used to prevent default file list and design own template for file list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowFileList"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tab order of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Inputs.FileInfo>","Documentation":"\n            <summary>\n            Specifies the HTML string that used to customize the content of each file in the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Template","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SfUploader"}},{"HashCode":-964574041,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.SfUploader","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            The uploader component is useful to upload images, documents, and other files to server.\n            The component is the extended version of HTML5 that is uploaded with multiple file selection, auto upload, drag and drop, progress bar, preload files, and validation.\n            </summary>\n            <summary>\n            Specifies the list of files that will be preloaded on rendering of uploader component.\n            </summary>\n            <summary>\n            Specifies the list of files that will be preloaded on rendering of uploader component.\n            </summary>\n            <summary>\n            The uploader component is useful to upload images, documents, and other files to server.\n            The component is the extended version of HTML5 that is uploaded with multiple file selection, auto upload, drag and drop, progress bar, preload files, and validation.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SfUploader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the Uploader component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AllowedExtensions","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the extensions of the file types allowed in the Uploader component and pass the extensions\n            with comma separators.\n            <para> For example,if you want to upload specific image files, pass `AllowedExtensions` as \".jpg,.png\".</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedExtensions"}},{"Kind":"Components.Component","Name":"AutoUpload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            By default, the Uploader component initiates automatic upload when the files are added in upload queue.\n            <para>If you want to manipulate the files before uploading to server, disable the AutoUpload property.</para>\n            <para>The buttons \"upload\" and \"clear\" will be hided from file list when AutoUpload property is true.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoUpload"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with root element of the Uploader.\n            One or more custom CSS classes can be added to a Uploader.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"DirectoryUpload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the folder of files can be browsed in the Uploader component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DirectoryUpload"}},{"Kind":"Components.Component","Name":"DropArea","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the drop target to handle the drag-and-drop upload.\n            By default, the Uploader creates wrapper around file input that will act as drop target.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropArea"}},{"Kind":"Components.Component","Name":"DropEffect","TypeName":"Syncfusion.Blazor.Inputs.DropEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the drag operation effect to the Uploader component.\n            <para> Possible values are .</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Copy</term>\n            </item>\n            <item>\n            <term>Move</term>\n            </item>\n            <item>\n            <term>Link</term>\n            </item>\n            <item>\n            <term>None</term>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropEffect"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting Uploader state between page reloads. If enabled, the `Files` state will be persisted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering Uploader in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the Uploader allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            <para>You can add the additional html attributes such as styles, class, and more to the root element.</para>\n            <para>If you configured both property and equivalent html attributes, then the component considers the property value.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            If you configured both property and equivalent input attribute, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"MaxFileSize","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the maximum allowed file size to be uploaded in bytes.\n            The property used to make sure that you cannot upload too large files.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxFileSize"}},{"Kind":"Components.Component","Name":"MinFileSize","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the minimum file size to be uploaded in bytes.\n            The property used to make sure that you cannot upload empty files and small files.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinFileSize"}},{"Kind":"Components.Component","Name":"AllowMultiple","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the multiple files can be browsed or dropped simultaneously in the Uploader component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowMultiple"}},{"Kind":"Components.Component","Name":"SequentialUpload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            By default, the file Uploader component is processing the multiple files simultaneously.\n            <para>If SequentialUpload property is enabled, the file upload component performs the upload one after the other.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SequentialUpload"}},{"Kind":"Components.Component","Name":"ShowFileList","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the default file list can be rendered.\n            The property used to prevent default file list and design own template for file list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowFileList"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tab order of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Inputs.FileInfo>","Documentation":"\n            <summary>\n            Specifies the HTML string that used to customize the content of each file in the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Template","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.SfUploader","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-455716825,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SfUploader.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfUploader"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SfUploader.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-16739627,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SfUploader.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.SfUploader"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SfUploader.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-104267195,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SfUploader.Template","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the HTML string that used to customize the content of each file in the list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"SfUploader"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SfUploader.Template","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":512366287,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.SfUploader.Template","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the HTML string that used to customize the content of each file in the list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"Syncfusion.Blazor.Inputs.SfUploader"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.SfUploader.Template","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1152165165,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.UploaderAsyncSettings","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the Uploader Events of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"UploaderAsyncSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChunkSize","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the ChunkSize to split the large file into chunks, and upload it to the server in a sequential order.\n            <para>If the ChunkSize property has value, the Uploader enables the chunk upload by default.\n            It must be specified in bytes value.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChunkSize"}},{"Kind":"Components.Component","Name":"RemoveUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the URL of remove action that receives the file information and handle the remove operation in server.\n            <para>The remove action type must be POST request and define \"RemoveFileNames\" attribute to get file information that will be removed.\n            This property is optional.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RemoveUrl"}},{"Kind":"Components.Component","Name":"RetryAfterDelay","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the delay time in milliseconds that the automatic retry happens after the delay.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RetryAfterDelay"}},{"Kind":"Components.Component","Name":"RetryCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the number of retries that the Uploader can perform on the file failed to upload.\n            By default, the Uploader set 3 as maximum retries. This property must be specified to prevent infinity looping.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RetryCount"}},{"Kind":"Components.Component","Name":"SaveUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the URL of save action that will receive the upload files and save in the server.\n            <para>The save action type must be POST request and define the argument as same input name used to render the component.\n            The upload operations could not perform without this property.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SaveUrl"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderAsyncSettings"}},{"HashCode":-1211430215,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.UploaderAsyncSettings","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the Uploader Events of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.UploaderAsyncSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChunkSize","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the ChunkSize to split the large file into chunks, and upload it to the server in a sequential order.\n            <para>If the ChunkSize property has value, the Uploader enables the chunk upload by default.\n            It must be specified in bytes value.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChunkSize"}},{"Kind":"Components.Component","Name":"RemoveUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the URL of remove action that receives the file information and handle the remove operation in server.\n            <para>The remove action type must be POST request and define \"RemoveFileNames\" attribute to get file information that will be removed.\n            This property is optional.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RemoveUrl"}},{"Kind":"Components.Component","Name":"RetryAfterDelay","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the delay time in milliseconds that the automatic retry happens after the delay.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RetryAfterDelay"}},{"Kind":"Components.Component","Name":"RetryCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the number of retries that the Uploader can perform on the file failed to upload.\n            By default, the Uploader set 3 as maximum retries. This property must be specified to prevent infinity looping.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RetryCount"}},{"Kind":"Components.Component","Name":"SaveUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the URL of save action that will receive the upload files and save in the server.\n            <para>The save action type must be POST request and define the argument as same input name used to render the component.\n            The upload operations could not perform without this property.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SaveUrl"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderAsyncSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-611900796,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.UploaderAsyncSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"UploaderAsyncSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderAsyncSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-72713517,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.UploaderAsyncSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.UploaderAsyncSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderAsyncSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1583125172,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.UploaderButtons","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Customize the default text of browse, clear, and upload buttons with plain text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"UploaderButtons"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Browse","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text or html content to browse button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Browse"}},{"Kind":"Components.Component","Name":"Clear","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text or html content to clear button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Clear"}},{"Kind":"Components.Component","Name":"Upload","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text or html content to upload button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Upload"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderButtons"}},{"HashCode":-1718260419,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.UploaderButtons","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Customize the default text of browse, clear, and upload buttons with plain text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.UploaderButtons"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Browse","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text or html content to browse button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Browse"}},{"Kind":"Components.Component","Name":"Clear","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text or html content to clear button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Clear"}},{"Kind":"Components.Component","Name":"Upload","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text or html content to upload button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Upload"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderButtons","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-912107300,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.UploaderButtons.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"UploaderButtons"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderButtons.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1945746141,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.UploaderButtons.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.UploaderButtons"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderButtons.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-364112717,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.UploaderButtonsProps","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifes the uploader button properties.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"UploaderButtonsProps"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Browse","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text or html content to browse button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Browse"}},{"Kind":"Components.Component","Name":"Clear","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text or html content to clear button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Clear"}},{"Kind":"Components.Component","Name":"Upload","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text or html content to upload button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Upload"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderButtonsProps"}},{"HashCode":1802557093,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.UploaderButtonsProps","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifes the uploader button properties.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.UploaderButtonsProps"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Browse","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text or html content to browse button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Browse"}},{"Kind":"Components.Component","Name":"Clear","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text or html content to clear button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Clear"}},{"Kind":"Components.Component","Name":"Upload","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text or html content to upload button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Upload"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderButtonsProps","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1644727198,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.UploaderButtonsProps.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"UploaderButtonsProps"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderButtonsProps.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1311550858,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.UploaderButtonsProps.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.UploaderButtonsProps"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderButtonsProps.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1752990663,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.UploaderEvents","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the Uploader Events of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"UploaderEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnActionComplete","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.ActionCompleteEventArgs>","Documentation":"\n            <summary>\n            Triggers after all the selected files has processed to upload successfully or failed to server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionComplete","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"BeforeRemove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs>","Documentation":"\n            <summary>\n            Triggers on remove the uploaded file. The event used to get confirm before remove the file from server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BeforeRemove","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"BeforeUpload","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.BeforeUploadEventArgs>","Documentation":"\n            <summary>\n            Triggers when the upload process before. This event is used to add additional parameter with upload request.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BeforeUpload","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnCancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.CancelEventArgs>","Documentation":"\n            <summary>\n            Fires if cancel the chunk file uploading.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnCancel","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.UploadChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when changes occur in uploaded file list by selecting or dropping files.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnChunkFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.FailureEventArgs>","Documentation":"\n            <summary>\n            Fires if the chunk file failed to upload.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChunkFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnChunkSuccess","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SuccessEventArgs>","Documentation":"\n            <summary>\n            Fires when the chunk file uploaded successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChunkSuccess","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnChunkUploadStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.UploadingEventArgs>","Documentation":"\n            <summary>\n            Fires when every chunk upload process gets started. This event is used to add additional parameter with upload request.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChunkUploadStart","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClear","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.ClearingEventArgs>","Documentation":"\n            <summary>\n            Triggers before clearing the items in file list when clicking \"clear\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClear","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.FailureEventArgs>","Documentation":"\n            <summary>\n            Triggers when the AJAX request fails on uploading or removing files.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFileListRender","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.FileListRenderingEventArgs>","Documentation":"\n            <summary>\n            Triggers before rendering each file item from the file list in a page.\n            It helps to customize specific file item structure.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnFileListRender","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Paused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.PauseResumeEventArgs>","Documentation":"\n            <summary>\n            Fires if pause the chunk file uploading.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Paused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Progressing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.ProgressEventArgs>","Documentation":"\n            <summary>\n            Triggers when uploading a file to the server using the AJAX request.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Progressing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnRemove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.RemovingEventArgs>","Documentation":"\n            <summary>\n            Triggers on removing the uploaded file. The event used to get confirm before removing the file from server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnRemove","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResume","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.PauseResumeEventArgs>","Documentation":"\n            <summary>\n            Fires if resume the paused chunk file upload.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnResume","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FileSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SelectedEventArgs>","Documentation":"\n            <summary>\n            Triggers after selecting or dropping the files by adding the files in upload queue.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FileSelected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Success","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SuccessEventArgs>","Documentation":"\n            <summary>\n            Triggers when the AJAX request gets success on uploading files or removing files.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Success","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUploadStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.UploadingEventArgs>","Documentation":"\n            <summary>\n            Triggers when the upload process gets started. This event is used to add additional parameter with upload request.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnUploadStart","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderEvents"}},{"HashCode":-103419263,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.UploaderEvents","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the Uploader Events of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.UploaderEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnActionComplete","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.ActionCompleteEventArgs>","Documentation":"\n            <summary>\n            Triggers after all the selected files has processed to upload successfully or failed to server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionComplete","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"BeforeRemove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs>","Documentation":"\n            <summary>\n            Triggers on remove the uploaded file. The event used to get confirm before remove the file from server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BeforeRemove","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"BeforeUpload","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.BeforeUploadEventArgs>","Documentation":"\n            <summary>\n            Triggers when the upload process before. This event is used to add additional parameter with upload request.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BeforeUpload","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnCancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.CancelEventArgs>","Documentation":"\n            <summary>\n            Fires if cancel the chunk file uploading.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnCancel","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.UploadChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when changes occur in uploaded file list by selecting or dropping files.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnChunkFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.FailureEventArgs>","Documentation":"\n            <summary>\n            Fires if the chunk file failed to upload.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChunkFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnChunkSuccess","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SuccessEventArgs>","Documentation":"\n            <summary>\n            Fires when the chunk file uploaded successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChunkSuccess","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnChunkUploadStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.UploadingEventArgs>","Documentation":"\n            <summary>\n            Fires when every chunk upload process gets started. This event is used to add additional parameter with upload request.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChunkUploadStart","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClear","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.ClearingEventArgs>","Documentation":"\n            <summary>\n            Triggers before clearing the items in file list when clicking \"clear\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClear","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.FailureEventArgs>","Documentation":"\n            <summary>\n            Triggers when the AJAX request fails on uploading or removing files.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFileListRender","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.FileListRenderingEventArgs>","Documentation":"\n            <summary>\n            Triggers before rendering each file item from the file list in a page.\n            It helps to customize specific file item structure.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnFileListRender","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Paused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.PauseResumeEventArgs>","Documentation":"\n            <summary>\n            Fires if pause the chunk file uploading.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Paused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Progressing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.ProgressEventArgs>","Documentation":"\n            <summary>\n            Triggers when uploading a file to the server using the AJAX request.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Progressing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnRemove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.RemovingEventArgs>","Documentation":"\n            <summary>\n            Triggers on removing the uploaded file. The event used to get confirm before removing the file from server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnRemove","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResume","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.PauseResumeEventArgs>","Documentation":"\n            <summary>\n            Fires if resume the paused chunk file upload.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnResume","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FileSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SelectedEventArgs>","Documentation":"\n            <summary>\n            Triggers after selecting or dropping the files by adding the files in upload queue.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FileSelected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Success","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.SuccessEventArgs>","Documentation":"\n            <summary>\n            Triggers when the AJAX request gets success on uploading files or removing files.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Success","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUploadStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.UploadingEventArgs>","Documentation":"\n            <summary>\n            Triggers when the upload process gets started. This event is used to add additional parameter with upload request.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnUploadStart","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderEvents","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":725463239,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.UploaderFiles","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the list of files that will be preloaded on rendering of uploader component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"UploaderFiles"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderFiles"}},{"HashCode":-1503035440,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.UploaderFiles","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the list of files that will be preloaded on rendering of uploader component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.UploaderFiles"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderFiles","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1719129017,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.UploaderFiles.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"UploaderFiles"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderFiles.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":294684717,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.UploaderFiles.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.UploaderFiles"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderFiles.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":360428907,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.UploaderUploadedFiles","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the list of files that will be preloaded on rendering of uploader component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"UploaderUploadedFiles"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the name of the file.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the size of the file.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the type of the file.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderUploadedFiles"}},{"HashCode":-1988467770,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.UploaderUploadedFiles","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the list of files that will be preloaded on rendering of uploader component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.UploaderUploadedFiles"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the name of the file.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the size of the file.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the type of the file.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderUploadedFiles","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2045974733,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.UploaderUploadedFiles.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"UploaderUploadedFiles"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderUploadedFiles.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1088030669,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.UploaderUploadedFiles.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.UploaderUploadedFiles"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderUploadedFiles.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1554001230,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.UploaderTemplates","AssemblyName":"Syncfusion.Blazor.Inputs","CaseSensitive":true,"TagMatchingRules":[{"TagName":"UploaderTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n             <summary>\n             Specifies the content that has to be passed.\n             </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Inputs.FileInfo>","Metadata":{"Common.PropertyName":"Template","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderTemplates"}},{"HashCode":80168541,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.UploaderTemplates","AssemblyName":"Syncfusion.Blazor.Inputs","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.UploaderTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n             <summary>\n             Specifies the content that has to be passed.\n             </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Inputs.FileInfo>","Metadata":{"Common.PropertyName":"Template","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderTemplates","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-62529716,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.UploaderTemplates.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n             <summary>\n             Specifies the content that has to be passed.\n             </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"UploaderTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderTemplates.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1510301704,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.UploaderTemplates.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n             <summary>\n             Specifies the content that has to be passed.\n             </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.UploaderTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderTemplates.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":653093715,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.UploaderTemplates.Template","AssemblyName":"Syncfusion.Blazor.Inputs","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"UploaderTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderTemplates.Template","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-91636147,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.UploaderTemplates.Template","AssemblyName":"Syncfusion.Blazor.Inputs","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"Syncfusion.Blazor.Inputs.UploaderTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.UploaderTemplates.Template","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1092512826,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs._Imports","AssemblyName":"Syncfusion.Blazor.Inputs","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs._Imports"}},{"HashCode":1777854659,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs._Imports","AssemblyName":"Syncfusion.Blazor.Inputs","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs._Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs._Imports","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1826102029,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.Internal.SfInputBase","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            The SfInputBase is an input element that allows to get input from the user. It allows the user to edit or display the text value.\n            </summary>\n            <summary>\n            The SfInputBase is an input element that allows to get input from the user. It allows the user to edit or display the text value.\n            </summary>\n            <summary>\n            The SfInputBase is an input element that allows to get input from the user. It allows the user to edit or display the text value.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfInputBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of input has changed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnInput","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content is paste into an input.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnPaste","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input has focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input gets focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"BindClearBtnEvents","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Triggers when the clear gets clicked.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"BindClearBtnEvents","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"BindClearBtnTouchEvents","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"\n            <summary>\n            Triggers when the clear icon gets touch.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"BindClearBtnTouchEvents","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MouseDownOnSpinner","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Triggers when the spin down gets click.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"MouseDownOnSpinner","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TouchDownOnSpinner","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"\n            <summary>\n            Triggers when the spin down icon gets touch.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"TouchDownOnSpinner","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MouseUpOnSpinner","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Triggers when the spin up gets clicked.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"MouseUpOnSpinner","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TouchUpOnSpinner","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"\n            <summary>\n            Triggers when the spin up icon gets touch.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"TouchUpOnSpinner","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MouseIconHandler","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.Internal.IconHandlerArgs>","Documentation":"\n            <summary>\n            Triggers when the icon gets click.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"MouseIconHandler","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TouchIconHandler","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.Internal.IconHandlerArgs>","Documentation":"\n            <summary>\n            Triggers when the icon get touch.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"TouchIconHandler","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MouseContainerHandler","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Triggers when the container gets click.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"MouseContainerHandler","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnContainerBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the container gets focus out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnContainerBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnContainerFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the container gets focused.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnContainerFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ContainerKeypress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"\n            <summary>\n            Triggers when the container key pressed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ContainerKeypress","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Autocomplete","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies whether the browser is allowed to automatically enter or select a value for the TextBox.\n            <para>By default, autocomplete is enabled for TextBox.</para>\n            <para>Possible values are:</para>\n            <list type=\"bullet\">\n            <item>\n            <term>On</term>\n            <description>Specifies that autocomplete is enabled</description>\n            </item>\n            <item>\n            <term>Off</term>\n            <description>Specifies that autocomplete is disabled.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Autocomplete"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the TextBox. One or more custom CSS classes can be added to a TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the persisting TextBox state between page reloads. If enabled, the `Value` state will be persisted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the TextBox allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"FloatLabelType","TypeName":"Syncfusion.Blazor.Inputs.FloatLabelType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.\n            <para>Possible values are:</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Never</term>\n            <description>Never floats the label in the TextBox when the placeholder is available.</description>\n            </item>\n            <item>\n            <term>Always</term>\n            <description>The floating label always floats above the TextBox.</description>\n            </item>\n            <item>\n            <term>Auto</term>\n            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FloatLabelType"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the root element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            If you configured both property and equivalent input attribute, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"Multiline","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that enables or disables the multiline on the TextBox.\n            The TextBox changes from a single line to multiline when enabling this multiline mode.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Multiline"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the boolean value whether the TextBox allows user to change the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Readonly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the boolean value whether the TextBox allows user to change the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Readonly"}},{"Kind":"Components.Component","Name":"IsReadOnlyInput","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the boolean value for dropdownlist default readonly property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsReadOnlyInput"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the clear button is displayed in TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the behavior of the TextBox such as text, password, email, and more.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the content of the TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tab order of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"ContainerAttr","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Specifies the container attrubute of Input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContainerAttr"}},{"Kind":"Components.Component","Name":"Buttons","TypeName":"System.Collections.Generic.List<System.String>","Documentation":"\n            <summary>\n            Specifies the icon of the TextBox component.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"Buttons"}},{"Kind":"Components.Component","Name":"PrependButtons","TypeName":"System.Collections.Generic.List<System.String>","Documentation":"\n            <summary>\n            Specifies the prepend icon of the TextBox component.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"PrependButtons"}},{"Kind":"Components.Component","Name":"SpinButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that enable or disable the spin button on the component.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"SpinButton"}},{"Kind":"Components.Component","Name":"ContainerClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the class value that is appended to container of TextBox.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ContainerClass"}},{"Kind":"Components.Component","Name":"IsValueTemplate","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the value template is displayed in TextBox.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"IsValueTemplate"}},{"Kind":"Components.Component","Name":"RootClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or Set the component class to element.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"RootClass"}},{"Kind":"Components.Component","Name":"ClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the prevents the click actions.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ClickStopPropagation"}},{"Kind":"Components.Component","Name":"MouseDowSpinnerPrevent","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the prevents the mouse actions.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"MouseDowSpinnerPrevent"}},{"Kind":"Components.Component","Name":"PreventIconHandler","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the prevents the icon actions.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"PreventIconHandler"}},{"Kind":"Components.Component","Name":"MousePreventContainer","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the prevents the container actions.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"MousePreventContainer"}},{"Kind":"Components.Component","Name":"IsShowSpinnerOnClear","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the spinner show on clear icon.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"IsShowSpinnerOnClear"}},{"Kind":"Components.Component","Name":"IsShowSpinnerOnIcon","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the spinner show on dropdown icon.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"IsShowSpinnerOnIcon"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.Internal.SfInputBase"}},{"HashCode":1245744298,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.Internal.SfInputBase","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            The SfInputBase is an input element that allows to get input from the user. It allows the user to edit or display the text value.\n            </summary>\n            <summary>\n            The SfInputBase is an input element that allows to get input from the user. It allows the user to edit or display the text value.\n            </summary>\n            <summary>\n            The SfInputBase is an input element that allows to get input from the user. It allows the user to edit or display the text value.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.Internal.SfInputBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of input has changed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnInput","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content is paste into an input.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnPaste","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input has focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input gets focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"BindClearBtnEvents","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Triggers when the clear gets clicked.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"BindClearBtnEvents","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"BindClearBtnTouchEvents","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"\n            <summary>\n            Triggers when the clear icon gets touch.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"BindClearBtnTouchEvents","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MouseDownOnSpinner","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Triggers when the spin down gets click.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"MouseDownOnSpinner","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TouchDownOnSpinner","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"\n            <summary>\n            Triggers when the spin down icon gets touch.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"TouchDownOnSpinner","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MouseUpOnSpinner","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Triggers when the spin up gets clicked.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"MouseUpOnSpinner","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TouchUpOnSpinner","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"\n            <summary>\n            Triggers when the spin up icon gets touch.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"TouchUpOnSpinner","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MouseIconHandler","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.Internal.IconHandlerArgs>","Documentation":"\n            <summary>\n            Triggers when the icon gets click.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"MouseIconHandler","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TouchIconHandler","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.Internal.IconHandlerArgs>","Documentation":"\n            <summary>\n            Triggers when the icon get touch.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"TouchIconHandler","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MouseContainerHandler","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Triggers when the container gets click.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"MouseContainerHandler","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnContainerBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the container gets focus out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnContainerBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnContainerFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the container gets focused.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnContainerFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ContainerKeypress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"\n            <summary>\n            Triggers when the container key pressed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ContainerKeypress","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Autocomplete","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies whether the browser is allowed to automatically enter or select a value for the TextBox.\n            <para>By default, autocomplete is enabled for TextBox.</para>\n            <para>Possible values are:</para>\n            <list type=\"bullet\">\n            <item>\n            <term>On</term>\n            <description>Specifies that autocomplete is enabled</description>\n            </item>\n            <item>\n            <term>Off</term>\n            <description>Specifies that autocomplete is disabled.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Autocomplete"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the TextBox. One or more custom CSS classes can be added to a TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the persisting TextBox state between page reloads. If enabled, the `Value` state will be persisted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the TextBox allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"FloatLabelType","TypeName":"Syncfusion.Blazor.Inputs.FloatLabelType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.\n            <para>Possible values are:</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Never</term>\n            <description>Never floats the label in the TextBox when the placeholder is available.</description>\n            </item>\n            <item>\n            <term>Always</term>\n            <description>The floating label always floats above the TextBox.</description>\n            </item>\n            <item>\n            <term>Auto</term>\n            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FloatLabelType"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the root element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            If you configured both property and equivalent input attribute, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"Multiline","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that enables or disables the multiline on the TextBox.\n            The TextBox changes from a single line to multiline when enabling this multiline mode.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Multiline"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the boolean value whether the TextBox allows user to change the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Readonly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the boolean value whether the TextBox allows user to change the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Readonly"}},{"Kind":"Components.Component","Name":"IsReadOnlyInput","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the boolean value for dropdownlist default readonly property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsReadOnlyInput"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the clear button is displayed in TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the behavior of the TextBox such as text, password, email, and more.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the content of the TextBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tab order of the TextBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"ContainerAttr","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Specifies the container attrubute of Input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContainerAttr"}},{"Kind":"Components.Component","Name":"Buttons","TypeName":"System.Collections.Generic.List<System.String>","Documentation":"\n            <summary>\n            Specifies the icon of the TextBox component.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"Buttons"}},{"Kind":"Components.Component","Name":"PrependButtons","TypeName":"System.Collections.Generic.List<System.String>","Documentation":"\n            <summary>\n            Specifies the prepend icon of the TextBox component.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"PrependButtons"}},{"Kind":"Components.Component","Name":"SpinButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that enable or disable the spin button on the component.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"SpinButton"}},{"Kind":"Components.Component","Name":"ContainerClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the class value that is appended to container of TextBox.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ContainerClass"}},{"Kind":"Components.Component","Name":"IsValueTemplate","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the value template is displayed in TextBox.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"IsValueTemplate"}},{"Kind":"Components.Component","Name":"RootClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or Set the component class to element.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"RootClass"}},{"Kind":"Components.Component","Name":"ClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the prevents the click actions.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ClickStopPropagation"}},{"Kind":"Components.Component","Name":"MouseDowSpinnerPrevent","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the prevents the mouse actions.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"MouseDowSpinnerPrevent"}},{"Kind":"Components.Component","Name":"PreventIconHandler","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the prevents the icon actions.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"PreventIconHandler"}},{"Kind":"Components.Component","Name":"MousePreventContainer","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the prevents the container actions.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"MousePreventContainer"}},{"Kind":"Components.Component","Name":"IsShowSpinnerOnClear","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the spinner show on clear icon.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"IsShowSpinnerOnClear"}},{"Kind":"Components.Component","Name":"IsShowSpinnerOnIcon","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the spinner show on dropdown icon.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"IsShowSpinnerOnIcon"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.Internal.SfInputBase","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1501078910,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.Internal.SfInputBase.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfInputBase"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.Internal.SfInputBase.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1306046767,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.Internal.SfInputBase.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.Internal.SfInputBase"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.Internal.SfInputBase.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1342733588,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.Internal.ColorPickerBase","AssemblyName":"Syncfusion.Blazor.Inputs","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ColorPickerBase"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.Internal.ColorPickerBase"}},{"HashCode":-1333289265,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.Internal.ColorPickerBase","AssemblyName":"Syncfusion.Blazor.Inputs","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.Internal.ColorPickerBase"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.Internal.ColorPickerBase","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1530620294,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.Internal.ColorPicker","AssemblyName":"Syncfusion.Blazor.Inputs","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ColorPicker"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.Internal.ColorPicker"}},{"HashCode":557382643,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.Internal.ColorPicker","AssemblyName":"Syncfusion.Blazor.Inputs","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.Internal.ColorPicker"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.Internal.ColorPicker","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":635166643,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.Internal.ColorPalette","AssemblyName":"Syncfusion.Blazor.Inputs","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ColorPalette"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.Internal.ColorPalette"}},{"HashCode":-1935446669,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.Internal.ColorPalette","AssemblyName":"Syncfusion.Blazor.Inputs","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.Internal.ColorPalette"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.Internal.ColorPalette","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1228961191,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.Internal.ColorPickerTextBox","AssemblyName":"Syncfusion.Blazor.Inputs","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ColorPickerTextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.Internal.InputChange>","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.Internal.ColorPickerTextBox"}},{"HashCode":-1996237019,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.Internal.ColorPickerTextBox","AssemblyName":"Syncfusion.Blazor.Inputs","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.Internal.ColorPickerTextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Inputs.Internal.InputChange>","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.Internal.ColorPickerTextBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-852182139,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            This class is used to render ticks to slider component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SliderTicksRender"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Public fiels ChildContent.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender"}},{"HashCode":-957934746,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            This class is used to render ticks to slider component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Public fiels ChildContent.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1155889312,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <exclude />\n            <summary>\n            Public fiels ChildContent.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SliderTicksRender"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-561415953,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender.ChildContent","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <exclude />\n            <summary>\n            Public fiels ChildContent.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-160957173,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.Slider.Internal.TickElement","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the Partial class TickElement.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TickElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ClassName","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the ClassName.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ClassName"}},{"Kind":"Components.Component","Name":"Styles","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the Styles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Styles"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the Value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"FormattedValue","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the FormattedValue.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormattedValue"}},{"Kind":"Components.Component","Name":"IsSmallTick","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the IsSmallTick.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsSmallTick"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.Slider.Internal.TickElement"}},{"HashCode":2080413924,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Inputs.Slider.Internal.TickElement","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"\n            <summary>\n            Specifies the Partial class TickElement.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.Slider.Internal.TickElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ClassName","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the ClassName.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ClassName"}},{"Kind":"Components.Component","Name":"Styles","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the Styles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Styles"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the Value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"FormattedValue","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the FormattedValue.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormattedValue"}},{"Kind":"Components.Component","Name":"IsSmallTick","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the IsSmallTick.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsSmallTick"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Inputs.Slider.Internal.TickElement","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1142201129,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups.DialogAnimationSettings","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            The class provides data for the animation to Dialog.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DialogAnimationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the delay in milliseconds to start the animation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the duration in milliseconds that the animation takes to open or close the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.Popups.DialogEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation name that should be applied on while opening and closing the dialog.\n            If the user sets Fade animation, the dialog will open with the `FadeIn` effect and close with the `FadeOut` effect.\n            The following are the list of animation effects available to configure to the dialog:\n            1. Fade\n            2. FadeZoom\n            3. FlipLeftDown\n            4. FlipLeftUp\n            5. FlipRightDown\n            6. FlipRightUp\n            7. FlipXDown\n            8. FlipXUp\n            9. FlipYLeft\n            10. FlipYRight\n            11. SlideBottom\n            12. SlideLeft\n            13. SlideRight\n            14. SlideTop\n            15. Zoom\n            16. None.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups.DialogAnimationSettings"}},{"HashCode":1815500902,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups.DialogAnimationSettings","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            The class provides data for the animation to Dialog.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Popups.DialogAnimationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the delay in milliseconds to start the animation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the duration in milliseconds that the animation takes to open or close the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.Popups.DialogEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation name that should be applied on while opening and closing the dialog.\n            If the user sets Fade animation, the dialog will open with the `FadeIn` effect and close with the `FadeOut` effect.\n            The following are the list of animation effects available to configure to the dialog:\n            1. Fade\n            2. FadeZoom\n            3. FlipLeftDown\n            4. FlipLeftUp\n            5. FlipRightDown\n            6. FlipRightUp\n            7. FlipXDown\n            8. FlipXUp\n            9. FlipYLeft\n            10. FlipYRight\n            11. SlideBottom\n            12. SlideLeft\n            13. SlideRight\n            14. SlideTop\n            15. Zoom\n            16. None.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups.DialogAnimationSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":548422639,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups.DialogButton","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Provides data to configure the Dialog button properties.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DialogButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text `content` of the Button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the class/multiple classes separated by a space in the Button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the Button is `disabled`.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left (RTL) direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the class/multiple classes separated by a space for the Button that is used to include an icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.Buttons.IconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions the icon before or after the text content in the Button.\n            The possible values are: Left: The icon will be positioned to the left of the text content.\n            Right: The icon will be positioned to the right of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"IsPrimary","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows the appearance of the Button to be enhanced and visually appealing when set to `true`.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrimary"}},{"Kind":"Components.Component","Name":"IsToggle","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Makes the Button toggle, when set to `true`.\n            When you click it, the state changes from normal to active.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsToggle"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Event triggers when `click` the dialog button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Popups.ButtonType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the type of the button.\n            Possible values are Button, Submit, and Reset.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"IsFlat","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the Flat appearance of the dialog buttons.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsFlat"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups.DialogButton"}},{"HashCode":-982011966,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups.DialogButton","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Provides data to configure the Dialog button properties.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Popups.DialogButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text `content` of the Button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the class/multiple classes separated by a space in the Button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the Button is `disabled`.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left (RTL) direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the class/multiple classes separated by a space for the Button that is used to include an icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.Buttons.IconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions the icon before or after the text content in the Button.\n            The possible values are: Left: The icon will be positioned to the left of the text content.\n            Right: The icon will be positioned to the right of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"IsPrimary","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows the appearance of the Button to be enhanced and visually appealing when set to `true`.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrimary"}},{"Kind":"Components.Component","Name":"IsToggle","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Makes the Button toggle, when set to `true`.\n            When you click it, the state changes from normal to active.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsToggle"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Event triggers when `click` the dialog button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Popups.ButtonType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the type of the button.\n            Possible values are Button, Submit, and Reset.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"IsFlat","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the Flat appearance of the dialog buttons.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsFlat"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups.DialogButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1536346244,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Popups.DialogButton.ChildContent","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DialogButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Popups.DialogButton.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1913679428,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Popups.DialogButton.ChildContent","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Popups.DialogButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Popups.DialogButton.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-101221264,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups.DialogButtons","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            A list of buttons that are used to configure the Dialog buttons.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DialogButtons"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content of the Dialog Button element.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups.DialogButtons"}},{"HashCode":1017554639,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups.DialogButtons","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            A list of buttons that are used to configure the Dialog buttons.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Popups.DialogButtons"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content of the Dialog Button element.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups.DialogButtons","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1344232544,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Popups.DialogButtons.ChildContent","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Gets or sets the content of the Dialog Button element.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DialogButtons"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Popups.DialogButtons.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":884045878,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Popups.DialogButtons.ChildContent","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Gets or sets the content of the Dialog Button element.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Popups.DialogButtons"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Popups.DialogButtons.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1981165716,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups.DialogEvents","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Configure handlers to handle the events with the Dialog component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DialogEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.CloseEventArgs>","Documentation":"\n            <summary>\n            Event triggers after the dialog has been closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Event triggers when the dialog is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Event triggers when the dialog is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.BeforeCloseEventArgs>","Documentation":"\n            <summary>\n            Event triggers before the dialog is closed.\n            If you cancel this event, the dialog remains opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDrag","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.DragEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the user drags the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnDrag","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDragStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.DragStartEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the user begins dragging the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnDragStart","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDragStop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.DragStopEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the user stops dragging the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnDragStop","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.BeforeOpenEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the dialog is being opened.\n            If you cancel this event, the dialog remains closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOverlayClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the overlay of the dialog is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOverlayClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOverlayModalClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.OverlayModalClickEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the overlay of the dialog is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOverlayModalClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResizeStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the user begins to resize a dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnResizeStart","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResizeStop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the user stops to resize a dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnResizeStop","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.OpenEventArgs>","Documentation":"\n            <summary>\n            Event triggers when a dialog is opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Resizing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the user resizes the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Resizing","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups.DialogEvents"}},{"HashCode":278839889,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups.DialogEvents","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Configure handlers to handle the events with the Dialog component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Popups.DialogEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.CloseEventArgs>","Documentation":"\n            <summary>\n            Event triggers after the dialog has been closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Event triggers when the dialog is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Event triggers when the dialog is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.BeforeCloseEventArgs>","Documentation":"\n            <summary>\n            Event triggers before the dialog is closed.\n            If you cancel this event, the dialog remains opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDrag","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.DragEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the user drags the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnDrag","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDragStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.DragStartEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the user begins dragging the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnDragStart","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDragStop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.DragStopEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the user stops dragging the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnDragStop","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.BeforeOpenEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the dialog is being opened.\n            If you cancel this event, the dialog remains closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOverlayClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the overlay of the dialog is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOverlayClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOverlayModalClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.OverlayModalClickEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the overlay of the dialog is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOverlayModalClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResizeStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the user begins to resize a dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnResizeStart","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResizeStop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the user stops to resize a dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnResizeStop","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.OpenEventArgs>","Documentation":"\n            <summary>\n            Event triggers when a dialog is opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Resizing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the user resizes the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Resizing","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups.DialogEvents","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1359613743,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups.DialogPositionData","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Configures to display a dialog in the custom position within the document or target.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DialogPositionData"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"X","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the offset left value to position the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the offset top value to position the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Y"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups.DialogPositionData"}},{"HashCode":255384508,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups.DialogPositionData","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Configures to display a dialog in the custom position within the document or target.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Popups.DialogPositionData"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"X","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the offset left value to position the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the offset top value to position the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Y"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups.DialogPositionData","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1179605760,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups.DialogTemplates","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Configure templates to display within a header, content, and footer section of Dialog.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DialogTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the value that can be displayed in the dialog's title area that can be configured with a plain text.\n            The dialog will be displayed without the header if the header property is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the value that can be displayed in the dialog's content section.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Defines the footer template of the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups.DialogTemplates"}},{"HashCode":-1271410543,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups.DialogTemplates","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Configure templates to display within a header, content, and footer section of Dialog.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Popups.DialogTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the value that can be displayed in the dialog's title area that can be configured with a plain text.\n            The dialog will be displayed without the header if the header property is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the value that can be displayed in the dialog's content section.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Defines the footer template of the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups.DialogTemplates","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1674208606,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Popups.DialogTemplates.Header","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Specifies the value that can be displayed in the dialog's title area that can be configured with a plain text.\n            The dialog will be displayed without the header if the header property is null.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"DialogTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Popups.DialogTemplates.Header","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1833888484,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Popups.DialogTemplates.Header","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Specifies the value that can be displayed in the dialog's title area that can be configured with a plain text.\n            The dialog will be displayed without the header if the header property is null.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"Syncfusion.Blazor.Popups.DialogTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Popups.DialogTemplates.Header","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":788528970,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Popups.DialogTemplates.Content","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Specifies the value that can be displayed in the dialog's content section.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"DialogTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Popups.DialogTemplates.Content","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-969865434,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Popups.DialogTemplates.Content","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Specifies the value that can be displayed in the dialog's content section.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"Syncfusion.Blazor.Popups.DialogTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Popups.DialogTemplates.Content","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":561626899,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Popups.DialogTemplates.FooterTemplate","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Defines the footer template of the dialog.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"DialogTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Popups.DialogTemplates.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-989131086,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Popups.DialogTemplates.FooterTemplate","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Defines the footer template of the dialog.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Syncfusion.Blazor.Popups.DialogTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Popups.DialogTemplates.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-798322387,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups.SfDialog","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Represents the dialog component that displays the information and gets input from the user.\n            Two types of dialog components are `Modal and Modeless(non-modal)` depending on their interaction with the parent application.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfDialog"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the unique identifier.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sets content for the Dialog element including HTML support and its customizations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the value whether the dialog component can be dragged by the end-user.\n            The dialog allows a user to drag by selecting the header and dragging it for re-positioning the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"AnimationSettings","TypeName":"Syncfusion.Blazor.Popups.DialogAnimationSettings","Documentation":"\n            <summary>\n            Specifies the animation settings of the dialog component.\n            The animation effect can be applied to open and close the dialog with duration and delay.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnimationSettings"}},{"Kind":"Components.Component","Name":"Buttons","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Popups.DialogButton>","Documentation":"\n            <summary>\n            Configures the action `Buttons` that contains button properties with primary attributes and the click events.\n            One or more action buttons can be configured to the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Buttons"}},{"Kind":"Components.Component","Name":"CloseOnEscape","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the Boolean value whether the dialog can be closed on pressing the escape (ESC) key.\n            that is used to control the dialog's closing behavior.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CloseOnEscape"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the value that can be displayed in the dialog's content section.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the dialog.\n            One or more custom CSS classes can be added to a dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableResize","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the value whether the dialog component can be resized by the end-user.\n            If the enableResize is true, the dialog component creates a grip to resize it in a diagonal direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableResize"}},{"Kind":"Components.Component","Name":"ResizeHandles","TypeName":"Syncfusion.Blazor.Popups.ResizeDirection[]","Documentation":"\n            <summary>\n            Specifies the resize handles direction in the dialog component that can be resized by the end-user.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ResizeHandles"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left (RTL) direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the template value that can be displayed with the dialog's footer area.\n            This is an optional property and can be used only when the footer is occupied with information or custom components.\n            By default, the footer is configured with the action buttons.\n            If the footer template is configured to the dialog, the buttons property will be disabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the value that can be displayed in the dialog's title area that can be configured with a plain text.\n            The dialog will be displayed without the header if the header property is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the height of the dialog component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional Html attributes such as id, title, etc., to the dialog element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IsModal","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the Boolean value whether the dialog can be displayed as modal or non-modal.\n            `Modal`: It creates an overlay that disables interaction with the parent application and\n             the user who should respond with modal before continuing with other applications.\n            `Modeless`: It does not prevent user interaction with the parent application.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsModal"}},{"Kind":"Components.Component","Name":"Locale","TypeName":"System.String","Documentation":"\n            <summary>\n            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Locale"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the min-height of the dialog component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.Popups.DialogPositionData","Documentation":"\n            <summary>\n            Specifies the value where the dialog can be positioned within the document or target.\n            The position can be represented with pre-configured positions or specific X and Y values.\n            `X value`: left, center, right, or offset value.\n            `Y value`: top, center, bottom, or offset value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"ShowCloseIcon","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the value that represents whether the close icon can be shown in the dialog’s title section.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCloseIcon"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the target element in which the dialog should be displayed.\n            The default value is null, which refers to the `Document.body` element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the value that represents whether the dialog component is visible.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"VisibleChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback of the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VisibleChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the z-order for rendering that determines whether the dialog is displayed\n            in front or behind of another component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"AllowPrerender","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether the Dialog element re-render or not when the Dialog gets open.\n            </summary>\n            <value>\n            <c>true</c>, if dialog component elements are maintained on the DOM when closing and opening it; otherwise, <b>false</b>.The default value is <c>false</c>.\n            </value>\n            <remarks>\n            Disabling this property, the Dialog component DOM element will be destroyed when closing and re-rendered the dialog DOM element while opening it. Otherwise, the dialog will be shown when opening it and remain hidden while closing it when enabled.\n            </remarks>\n            <seealso cref=\"P:Syncfusion.Blazor.Popups.SfDialog.Visible\" />\n        ","Metadata":{"Common.PropertyName":"AllowPrerender"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups.SfDialog"}},{"HashCode":-880653144,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups.SfDialog","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Represents the dialog component that displays the information and gets input from the user.\n            Two types of dialog components are `Modal and Modeless(non-modal)` depending on their interaction with the parent application.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Popups.SfDialog"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the unique identifier.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sets content for the Dialog element including HTML support and its customizations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the value whether the dialog component can be dragged by the end-user.\n            The dialog allows a user to drag by selecting the header and dragging it for re-positioning the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"AnimationSettings","TypeName":"Syncfusion.Blazor.Popups.DialogAnimationSettings","Documentation":"\n            <summary>\n            Specifies the animation settings of the dialog component.\n            The animation effect can be applied to open and close the dialog with duration and delay.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnimationSettings"}},{"Kind":"Components.Component","Name":"Buttons","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Popups.DialogButton>","Documentation":"\n            <summary>\n            Configures the action `Buttons` that contains button properties with primary attributes and the click events.\n            One or more action buttons can be configured to the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Buttons"}},{"Kind":"Components.Component","Name":"CloseOnEscape","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the Boolean value whether the dialog can be closed on pressing the escape (ESC) key.\n            that is used to control the dialog's closing behavior.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CloseOnEscape"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the value that can be displayed in the dialog's content section.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the dialog.\n            One or more custom CSS classes can be added to a dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableResize","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the value whether the dialog component can be resized by the end-user.\n            If the enableResize is true, the dialog component creates a grip to resize it in a diagonal direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableResize"}},{"Kind":"Components.Component","Name":"ResizeHandles","TypeName":"Syncfusion.Blazor.Popups.ResizeDirection[]","Documentation":"\n            <summary>\n            Specifies the resize handles direction in the dialog component that can be resized by the end-user.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ResizeHandles"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left (RTL) direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the template value that can be displayed with the dialog's footer area.\n            This is an optional property and can be used only when the footer is occupied with information or custom components.\n            By default, the footer is configured with the action buttons.\n            If the footer template is configured to the dialog, the buttons property will be disabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the value that can be displayed in the dialog's title area that can be configured with a plain text.\n            The dialog will be displayed without the header if the header property is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the height of the dialog component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional Html attributes such as id, title, etc., to the dialog element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IsModal","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the Boolean value whether the dialog can be displayed as modal or non-modal.\n            `Modal`: It creates an overlay that disables interaction with the parent application and\n             the user who should respond with modal before continuing with other applications.\n            `Modeless`: It does not prevent user interaction with the parent application.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsModal"}},{"Kind":"Components.Component","Name":"Locale","TypeName":"System.String","Documentation":"\n            <summary>\n            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Locale"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the min-height of the dialog component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.Popups.DialogPositionData","Documentation":"\n            <summary>\n            Specifies the value where the dialog can be positioned within the document or target.\n            The position can be represented with pre-configured positions or specific X and Y values.\n            `X value`: left, center, right, or offset value.\n            `Y value`: top, center, bottom, or offset value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"ShowCloseIcon","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the value that represents whether the close icon can be shown in the dialog’s title section.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCloseIcon"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the target element in which the dialog should be displayed.\n            The default value is null, which refers to the `Document.body` element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the value that represents whether the dialog component is visible.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"VisibleChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback of the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VisibleChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the z-order for rendering that determines whether the dialog is displayed\n            in front or behind of another component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"AllowPrerender","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether the Dialog element re-render or not when the Dialog gets open.\n            </summary>\n            <value>\n            <c>true</c>, if dialog component elements are maintained on the DOM when closing and opening it; otherwise, <b>false</b>.The default value is <c>false</c>.\n            </value>\n            <remarks>\n            Disabling this property, the Dialog component DOM element will be destroyed when closing and re-rendered the dialog DOM element while opening it. Otherwise, the dialog will be shown when opening it and remain hidden while closing it when enabled.\n            </remarks>\n            <seealso cref=\"P:Syncfusion.Blazor.Popups.SfDialog.Visible\" />\n        ","Metadata":{"Common.PropertyName":"AllowPrerender"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups.SfDialog","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1001835325,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Popups.SfDialog.ChildContent","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Sets content for the Dialog element including HTML support and its customizations.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfDialog"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Popups.SfDialog.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1470687798,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Popups.SfDialog.ChildContent","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Sets content for the Dialog element including HTML support and its customizations.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Popups.SfDialog"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Popups.SfDialog.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1089943176,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups.SfTooltip","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.\n            </summary>\n            <summary>\n            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.\n            </summary>\n            <summary>\n            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.\n            </summary>\n            <summary>\n            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.\n            </summary>\n            <summary>\n            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfTooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.TooltipEventArgs>","Documentation":"\n            <summary>\n            The event `Closed` will be fired when the Tooltip component gets closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.TooltipEventArgs>","Documentation":"\n            <summary>\n            The event `Opened` will be fired after the Tooltip component gets opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.TooltipEventArgs>","Documentation":"\n            <summary>\n            The event `OnClose` will be fired before the Tooltip hides from the screen.\n            The Tooltip close can be prevented by setting the cancel argument value to true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnCollision","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.TooltipEventArgs>","Documentation":"\n            <summary>\n            The event `OnCollision` will be fired for every collision fit calculation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnCollision","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.TooltipEventArgs>","Documentation":"\n            <summary>\n            The event `OnOpen` will be fired before the Tooltip is displayed over the target element.\n            When one of its arguments `cancel` is set to true, the Tooltip display can be prevented.\n            This event is mainly used to refresh the Tooltip positions dynamically or to set customized styles in it and so on.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnRender","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.TooltipEventArgs>","Documentation":"\n            <summary>\n            The event `OnRender` will be fired before the Tooltip and its contents will be added to the DOM.\n            When one of its arguments `cancel` is set to true, the Tooltip can be prevented from rendering on the page.\n            This event is mainly used to customize the Tooltip before it shows up on the screen.\n            For example, to load the AJAX content or to set new animation effects on the Tooltip, this event can be opted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnRender","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            The event `Created` will be fired after the Tooltip component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            The event `Destroyed` will be fired when the Tooltip component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Defines the content which has to be passed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <exclude />\n            <summary>\n            Defines the Id of the Tooltip component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Popups.AnimationModel","Documentation":"\n            <summary>\n            It is used to customize the animation of the Tooltip while opening and closing.\n            The animation property also allows you to set delay, duration, and various other effects of your choice.\n            You can set the same or different animation options to the Tooltip when it is in the open or close state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"CloseDelay","TypeName":"System.Double","Documentation":"\n            <summary>\n            To close the Tooltip after a specified delay in millisecond.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CloseDelay"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            To display the content of the Tooltip which can be a string element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            To customize the Tooltip which accepts the custom CSS class names that define specific\n            user-defined styles and themes to be applied to the Tooltip element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableHtmlSanitizer","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            This property has been deprecated as we achieve this behavior by using ChildContent of render fragment type and and Content as a string value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableHtmlSanitizer"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            As there are no properties required to persist in tooltip component, this property is deprecated.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            To enable or disable the rendering component in the right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"WindowCollision","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to set the collision target element as page viewport (window) or Tooltip element, when using the target.\n            If this property is enabled, tooltip will perform the collision calculation between the target elements.\n            and viewport(window) instead of Tooltip element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"WindowCollision"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            To set the height of the Tooltip component which accepts the string values.\n            When the Tooltip content gets overflowed due to the height value, then the scroll mode will be enabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"IsSticky","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            To display the Tooltip in an open state until it is closed manually.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsSticky"}},{"Kind":"Components.Component","Name":"MouseTrail","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It allows the Tooltip to follow the mouse pointer moves over the specified target element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MouseTrail"}},{"Kind":"Components.Component","Name":"OffsetX","TypeName":"System.Double","Documentation":"\n            <summary>\n            It sets the space between the target and Tooltip element in X-axis.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OffsetX"}},{"Kind":"Components.Component","Name":"OffsetY","TypeName":"System.Double","Documentation":"\n            <summary>\n            It sets the space between the target and Tooltip element in Y-axis.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OffsetY"}},{"Kind":"Components.Component","Name":"OpenDelay","TypeName":"System.Double","Documentation":"\n            <summary>\n            To open the Tooltip after a specified delay in millisecond.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OpenDelay"}},{"Kind":"Components.Component","Name":"OpensOn","TypeName":"System.String","Documentation":"\n            <summary>\n            To determine the type of open mode to display the Tooltip content.\n            The available open modes are Auto, Hover, Click, Focus, and Custom.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OpensOn"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.Popups.Position","IsEnum":true,"Documentation":"\n            <summary>\n            To set the position of the Tooltip element with respect to the Target element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"ShowTipPointer","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            To show or hide the tip pointer of the Tooltip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowTipPointer"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"\n            <summary>\n            To denote the target selector where the Tooltip needs to be displayed.\n            The target element is considered as the parent container.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"Container","TypeName":"System.String","Documentation":"\n            <summary>\n            It is used to set the container element in which the Tooltip’s pop-up will be appended.\n            It's default value is `body`, in which the Tooltip’s pop-up will be appended.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Container"}},{"Kind":"Components.Component","Name":"TipPointerPosition","TypeName":"Syncfusion.Blazor.Popups.TipPointerPosition","IsEnum":true,"Documentation":"\n            <summary>\n            It is used to customize the position of the tip pointer on the tooltip. The available options are Auto, Start, Middle, and End.\n            When set to auto, the tip pointer gets auto adjusted within the space of the target's length and does not point outside.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TipPointerPosition"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            To set the width of the Tooltip component which accepts a string value.\n            When set to auto, the Tooltip width gets auto adjusted to display its content within the viewable screen.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Adds the additional html attributes to the Tooltip element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups.SfTooltip"}},{"HashCode":320024900,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups.SfTooltip","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.\n            </summary>\n            <summary>\n            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.\n            </summary>\n            <summary>\n            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.\n            </summary>\n            <summary>\n            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.\n            </summary>\n            <summary>\n            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Popups.SfTooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.TooltipEventArgs>","Documentation":"\n            <summary>\n            The event `Closed` will be fired when the Tooltip component gets closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.TooltipEventArgs>","Documentation":"\n            <summary>\n            The event `Opened` will be fired after the Tooltip component gets opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.TooltipEventArgs>","Documentation":"\n            <summary>\n            The event `OnClose` will be fired before the Tooltip hides from the screen.\n            The Tooltip close can be prevented by setting the cancel argument value to true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnCollision","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.TooltipEventArgs>","Documentation":"\n            <summary>\n            The event `OnCollision` will be fired for every collision fit calculation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnCollision","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.TooltipEventArgs>","Documentation":"\n            <summary>\n            The event `OnOpen` will be fired before the Tooltip is displayed over the target element.\n            When one of its arguments `cancel` is set to true, the Tooltip display can be prevented.\n            This event is mainly used to refresh the Tooltip positions dynamically or to set customized styles in it and so on.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnRender","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Popups.TooltipEventArgs>","Documentation":"\n            <summary>\n            The event `OnRender` will be fired before the Tooltip and its contents will be added to the DOM.\n            When one of its arguments `cancel` is set to true, the Tooltip can be prevented from rendering on the page.\n            This event is mainly used to customize the Tooltip before it shows up on the screen.\n            For example, to load the AJAX content or to set new animation effects on the Tooltip, this event can be opted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnRender","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            The event `Created` will be fired after the Tooltip component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            The event `Destroyed` will be fired when the Tooltip component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Defines the content which has to be passed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <exclude />\n            <summary>\n            Defines the Id of the Tooltip component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Popups.AnimationModel","Documentation":"\n            <summary>\n            It is used to customize the animation of the Tooltip while opening and closing.\n            The animation property also allows you to set delay, duration, and various other effects of your choice.\n            You can set the same or different animation options to the Tooltip when it is in the open or close state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"CloseDelay","TypeName":"System.Double","Documentation":"\n            <summary>\n            To close the Tooltip after a specified delay in millisecond.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CloseDelay"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            To display the content of the Tooltip which can be a string element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            To customize the Tooltip which accepts the custom CSS class names that define specific\n            user-defined styles and themes to be applied to the Tooltip element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableHtmlSanitizer","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            This property has been deprecated as we achieve this behavior by using ChildContent of render fragment type and and Content as a string value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableHtmlSanitizer"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            As there are no properties required to persist in tooltip component, this property is deprecated.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            To enable or disable the rendering component in the right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"WindowCollision","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It is used to set the collision target element as page viewport (window) or Tooltip element, when using the target.\n            If this property is enabled, tooltip will perform the collision calculation between the target elements.\n            and viewport(window) instead of Tooltip element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"WindowCollision"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            To set the height of the Tooltip component which accepts the string values.\n            When the Tooltip content gets overflowed due to the height value, then the scroll mode will be enabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"IsSticky","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            To display the Tooltip in an open state until it is closed manually.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsSticky"}},{"Kind":"Components.Component","Name":"MouseTrail","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            It allows the Tooltip to follow the mouse pointer moves over the specified target element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MouseTrail"}},{"Kind":"Components.Component","Name":"OffsetX","TypeName":"System.Double","Documentation":"\n            <summary>\n            It sets the space between the target and Tooltip element in X-axis.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OffsetX"}},{"Kind":"Components.Component","Name":"OffsetY","TypeName":"System.Double","Documentation":"\n            <summary>\n            It sets the space between the target and Tooltip element in Y-axis.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OffsetY"}},{"Kind":"Components.Component","Name":"OpenDelay","TypeName":"System.Double","Documentation":"\n            <summary>\n            To open the Tooltip after a specified delay in millisecond.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OpenDelay"}},{"Kind":"Components.Component","Name":"OpensOn","TypeName":"System.String","Documentation":"\n            <summary>\n            To determine the type of open mode to display the Tooltip content.\n            The available open modes are Auto, Hover, Click, Focus, and Custom.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OpensOn"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.Popups.Position","IsEnum":true,"Documentation":"\n            <summary>\n            To set the position of the Tooltip element with respect to the Target element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"ShowTipPointer","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            To show or hide the tip pointer of the Tooltip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowTipPointer"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"\n            <summary>\n            To denote the target selector where the Tooltip needs to be displayed.\n            The target element is considered as the parent container.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"Container","TypeName":"System.String","Documentation":"\n            <summary>\n            It is used to set the container element in which the Tooltip’s pop-up will be appended.\n            It's default value is `body`, in which the Tooltip’s pop-up will be appended.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Container"}},{"Kind":"Components.Component","Name":"TipPointerPosition","TypeName":"Syncfusion.Blazor.Popups.TipPointerPosition","IsEnum":true,"Documentation":"\n            <summary>\n            It is used to customize the position of the tip pointer on the tooltip. The available options are Auto, Start, Middle, and End.\n            When set to auto, the tip pointer gets auto adjusted within the space of the target's length and does not point outside.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TipPointerPosition"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            To set the width of the Tooltip component which accepts a string value.\n            When set to auto, the Tooltip width gets auto adjusted to display its content within the viewable screen.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Adds the additional html attributes to the Tooltip element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups.SfTooltip","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1553304512,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Popups.SfTooltip.ChildContent","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <exclude />\n            <summary>\n            Defines the content which has to be passed.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfTooltip"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Popups.SfTooltip.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-933362720,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Popups.SfTooltip.ChildContent","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <exclude />\n            <summary>\n            Defines the content which has to be passed.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Popups.SfTooltip"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Popups.SfTooltip.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1389293179,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups.TooltipTemplates","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Configure templates to display content within the tooltip component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TooltipTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Defines the content which has to be passed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Defines the content to be passed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups.TooltipTemplates"}},{"HashCode":1333782189,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups.TooltipTemplates","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <summary>\n            Configure templates to display content within the tooltip component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Popups.TooltipTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Defines the content which has to be passed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Defines the content to be passed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups.TooltipTemplates","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":622348077,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Popups.TooltipTemplates.ChildContent","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <exclude />\n            <summary>\n            Defines the content which has to be passed.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TooltipTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Popups.TooltipTemplates.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":899972295,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Popups.TooltipTemplates.ChildContent","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <exclude />\n            <summary>\n            Defines the content which has to be passed.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Popups.TooltipTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Popups.TooltipTemplates.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":482810088,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Popups.TooltipTemplates.Content","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <exclude />\n            <summary>\n            Defines the content to be passed.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"TooltipTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Popups.TooltipTemplates.Content","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-77946554,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Popups.TooltipTemplates.Content","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"\n            <exclude />\n            <summary>\n            Defines the content to be passed.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"Syncfusion.Blazor.Popups.TooltipTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Popups.TooltipTemplates.Content","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-377097211,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups._Imports","AssemblyName":"Syncfusion.Blazor.Popups","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups._Imports"}},{"HashCode":-1620228734,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Popups._Imports","AssemblyName":"Syncfusion.Blazor.Popups","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Popups._Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Popups._Imports","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1054445694,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor.EditorComponent","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Specifies the component which is rendered while editing in the In-place editor.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditorComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the components to render inside the InPlaceEditor as Editable Field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.EditorComponent"}},{"HashCode":349019722,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor.EditorComponent","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Specifies the component which is rendered while editing in the In-place editor.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.InPlaceEditor.EditorComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the components to render inside the InPlaceEditor as Editable Field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.EditorComponent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1512517162,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.InPlaceEditor.EditorComponent.ChildContent","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Specifies the components to render inside the InPlaceEditor as Editable Field.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"EditorComponent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.EditorComponent.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-538915433,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.InPlaceEditor.EditorComponent.ChildContent","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Specifies the components to render inside the InPlaceEditor as Editable Field.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.InPlaceEditor.EditorComponent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.EditorComponent.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1237570306,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorButtton","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Provides properties of the In-place Editor Button.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InPlaceEditorButtton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Binds the click event for the In-place Editor buttons.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text `Content` which is displayed in the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the single or multiple CSS classes with space to apply in the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the component is enabled or disabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left (RTL) direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the single or multiple CSS classes with space to include an icon in the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.Buttons.IconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Place the icon before or after the text content in the Button. The possible values are:\n            Left: Positions the icon on the left side of the text content.\n            Right: Positions the icon on the right side of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"IsPrimary","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that determines which button is primary.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrimary"}},{"Kind":"Components.Component","Name":"IsToggle","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Determines whether the button can be on or off.\n            When you click on it, the button's state changes from normal to active.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsToggle"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Popups.ButtonType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the type of the button. The possible values are:\n            1.Button\n            2.Submit\n            3.Reset\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorButtton"}},{"HashCode":-1965148751,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorButtton","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Provides properties of the In-place Editor Button.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorButtton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Binds the click event for the In-place Editor buttons.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text `Content` which is displayed in the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the single or multiple CSS classes with space to apply in the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the component is enabled or disabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left (RTL) direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the single or multiple CSS classes with space to include an icon in the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.Buttons.IconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Place the icon before or after the text content in the Button. The possible values are:\n            Left: Positions the icon on the left side of the text content.\n            Right: Positions the icon on the right side of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"IsPrimary","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that determines which button is primary.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrimary"}},{"Kind":"Components.Component","Name":"IsToggle","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Determines whether the button can be on or off.\n            When you click on it, the button's state changes from normal to active.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsToggle"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Popups.ButtonType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the type of the button. The possible values are:\n            1.Button\n            2.Submit\n            3.Reset\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorButtton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":421563675,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorCancelButton","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Provides properties of the In-place Editor's cancel Button.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InPlaceEditorCancelButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Binds the click event for the In-place Editor buttons.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text `Content` which is displayed in the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the single or multiple CSS classes with space to apply in the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the component is enabled or disabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left (RTL) direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the single or multiple CSS classes with space to include an icon in the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.Buttons.IconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Place the icon before or after the text content in the Button. The possible values are:\n            Left: Positions the icon on the left side of the text content.\n            Right: Positions the icon on the right side of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"IsPrimary","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that determines which button is primary.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrimary"}},{"Kind":"Components.Component","Name":"IsToggle","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Determines whether the button can be on or off.\n            When you click on it, the button's state changes from normal to active.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsToggle"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Popups.ButtonType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the type of the button. The possible values are:\n            1.Button\n            2.Submit\n            3.Reset\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorCancelButton"}},{"HashCode":857473479,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorCancelButton","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Provides properties of the In-place Editor's cancel Button.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorCancelButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Binds the click event for the In-place Editor buttons.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text `Content` which is displayed in the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the single or multiple CSS classes with space to apply in the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the component is enabled or disabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left (RTL) direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the single or multiple CSS classes with space to include an icon in the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.Buttons.IconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Place the icon before or after the text content in the Button. The possible values are:\n            Left: Positions the icon on the left side of the text content.\n            Right: Positions the icon on the right side of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"IsPrimary","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that determines which button is primary.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrimary"}},{"Kind":"Components.Component","Name":"IsToggle","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Determines whether the button can be on or off.\n            When you click on it, the button's state changes from normal to active.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsToggle"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Popups.ButtonType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the type of the button. The possible values are:\n            1.Button\n            2.Submit\n            3.Reset\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorCancelButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1828146104,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorEvents<TValue>","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Configures the handler to handle the In-place Editor's events.\n            </summary>\n            <typeparam name=\"TValue\">Represents the Inplace Editor data source's type.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InPlaceEditorEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.InPlaceEditor.InPlaceEditorEvents<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnActionBegin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.InPlaceEditor.ActionBeginEventArgs<TValue>>","Documentation":"\n            <summary>\n            Event triggers before the data is submitted to the server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionBegin","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnActionFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.InPlaceEditor.ActionEventArgs<TValue>>","Documentation":"\n            <summary>\n            Event triggers when data submission is failed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionFailure","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnActionSuccess","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.InPlaceEditor.ActionEventArgs<TValue>>","Documentation":"\n            <summary>\n            Event triggers when the data is submitted successfully to the server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionSuccess","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"BeginEdit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.InPlaceEditor.BeginEditEventArgs>","Documentation":"\n            <summary>\n            Event triggers before changing edit mode from default.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BeginEdit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EndEdit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.InPlaceEditor.EndEditEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the edit action is finished and begin to submit/cancel the current value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EndEdit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.InPlaceEditor.ChangeEventArgs<TValue>>","Documentation":"\n            <summary>\n            Event triggers when the integrated component value has changed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Event triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Event triggers when the component gets destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorEvents<TValue>","Components.GenericTyped":"True"}},{"HashCode":1104429461,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorEvents<TValue>","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Configures the handler to handle the In-place Editor's events.\n            </summary>\n            <typeparam name=\"TValue\">Represents the Inplace Editor data source's type.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.InPlaceEditor.InPlaceEditorEvents<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnActionBegin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.InPlaceEditor.ActionBeginEventArgs<TValue>>","Documentation":"\n            <summary>\n            Event triggers before the data is submitted to the server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionBegin","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnActionFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.InPlaceEditor.ActionEventArgs<TValue>>","Documentation":"\n            <summary>\n            Event triggers when data submission is failed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionFailure","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnActionSuccess","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.InPlaceEditor.ActionEventArgs<TValue>>","Documentation":"\n            <summary>\n            Event triggers when the data is submitted successfully to the server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionSuccess","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"BeginEdit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.InPlaceEditor.BeginEditEventArgs>","Documentation":"\n            <summary>\n            Event triggers before changing edit mode from default.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BeginEdit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EndEdit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.InPlaceEditor.EndEditEventArgs>","Documentation":"\n            <summary>\n            Event triggers when the edit action is finished and begin to submit/cancel the current value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EndEdit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.InPlaceEditor.ChangeEventArgs<TValue>>","Documentation":"\n            <summary>\n            Event triggers when the integrated component value has changed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Event triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Event triggers when the component gets destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorEvents<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":624891933,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Configures the properties to customize the popup mode of the In-place Editor.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InPlaceEditorPopupSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Popups.AnimationModel","Documentation":"\n            <summary>\n            Specifies the animation that displays while opening and closing the popup.\n            The animation property allows to set delay, duration, and effect.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"CloseDelay","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies a duration in milliseconds that will close the popup after a specified delay.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CloseDelay"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the specific user-defined styles to customize the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the height of the popup which accepts the string values.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"IsSticky","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables to freeze a popup in an open state until it is closed manually.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsSticky"}},{"Kind":"Components.Component","Name":"OffsetX","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies an X-coordinate value which is the horizontal space between the target and popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OffsetX"}},{"Kind":"Components.Component","Name":"OffsetY","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies an Y-coordinate value which is the vertical space between the target and popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OffsetY"}},{"Kind":"Components.Component","Name":"OpenDelay","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies a duration in milliseconds that will open the popup after a specified delay.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OpenDelay"}},{"Kind":"Components.Component","Name":"OpensOn","TypeName":"Syncfusion.Blazor.InPlaceEditor.OpenType","IsEnum":true,"Documentation":"\n            <summary>\n            Determines the mode when invoking the popup. The available open modes are:\n            1.Auto\n            2.Hover\n            3.Click\n            4.Focus\n            5.Custom\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OpensOn"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.Popups.Position","IsEnum":true,"Documentation":"\n            <summary>\n            Set the position of the popup based on the target element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"ShowTipPointer","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Determines whether to show or hide the tip pointer on the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowTipPointer"}},{"Kind":"Components.Component","Name":"TipPointerPosition","TypeName":"Syncfusion.Blazor.Popups.TipPointerPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies to customize the position of the tip pointer on the popup.\n            The available options are:\n            1.Auto\n            2.Start\n            3.Middle\n            4.End\n            When set to auto, the tip pointer adjusts its position automatically based on the available space on the target.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TipPointerPosition"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Set the width of the popup component which accepts a string value.\n            When set width as auto, the popup width will be adjusted automatically to display its content within the viewable screen.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Adds the additional html attributes to the Popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the title of the editor's popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings"}},{"HashCode":2143896292,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Configures the properties to customize the popup mode of the In-place Editor.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Popups.AnimationModel","Documentation":"\n            <summary>\n            Specifies the animation that displays while opening and closing the popup.\n            The animation property allows to set delay, duration, and effect.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"CloseDelay","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies a duration in milliseconds that will close the popup after a specified delay.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CloseDelay"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the specific user-defined styles to customize the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the height of the popup which accepts the string values.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"IsSticky","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables to freeze a popup in an open state until it is closed manually.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsSticky"}},{"Kind":"Components.Component","Name":"OffsetX","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies an X-coordinate value which is the horizontal space between the target and popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OffsetX"}},{"Kind":"Components.Component","Name":"OffsetY","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies an Y-coordinate value which is the vertical space between the target and popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OffsetY"}},{"Kind":"Components.Component","Name":"OpenDelay","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies a duration in milliseconds that will open the popup after a specified delay.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OpenDelay"}},{"Kind":"Components.Component","Name":"OpensOn","TypeName":"Syncfusion.Blazor.InPlaceEditor.OpenType","IsEnum":true,"Documentation":"\n            <summary>\n            Determines the mode when invoking the popup. The available open modes are:\n            1.Auto\n            2.Hover\n            3.Click\n            4.Focus\n            5.Custom\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OpensOn"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.Popups.Position","IsEnum":true,"Documentation":"\n            <summary>\n            Set the position of the popup based on the target element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"ShowTipPointer","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Determines whether to show or hide the tip pointer on the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowTipPointer"}},{"Kind":"Components.Component","Name":"TipPointerPosition","TypeName":"Syncfusion.Blazor.Popups.TipPointerPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies to customize the position of the tip pointer on the popup.\n            The available options are:\n            1.Auto\n            2.Start\n            3.Middle\n            4.End\n            When set to auto, the tip pointer adjusts its position automatically based on the available space on the target.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TipPointerPosition"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Set the width of the popup component which accepts a string value.\n            When set width as auto, the popup width will be adjusted automatically to display its content within the viewable screen.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Adds the additional html attributes to the Popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the title of the editor's popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-928639665,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorSaveButton","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Provides properties of the In-place Editor's save button.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InPlaceEditorSaveButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Binds the click event for the In-place Editor buttons.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text `Content` which is displayed in the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the single or multiple CSS classes with space to apply in the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the component is enabled or disabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left (RTL) direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the single or multiple CSS classes with space to include an icon in the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.Buttons.IconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Place the icon before or after the text content in the Button. The possible values are:\n            Left: Positions the icon on the left side of the text content.\n            Right: Positions the icon on the right side of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"IsPrimary","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that determines which button is primary.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrimary"}},{"Kind":"Components.Component","Name":"IsToggle","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Determines whether the button can be on or off.\n            When you click on it, the button's state changes from normal to active.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsToggle"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Popups.ButtonType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the type of the button. The possible values are:\n            1.Button\n            2.Submit\n            3.Reset\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorSaveButton"}},{"HashCode":196019478,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorSaveButton","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Provides properties of the In-place Editor's save button.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorSaveButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Binds the click event for the In-place Editor buttons.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text `Content` which is displayed in the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the single or multiple CSS classes with space to apply in the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the component is enabled or disabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left (RTL) direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the single or multiple CSS classes with space to include an icon in the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.Buttons.IconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Place the icon before or after the text content in the Button. The possible values are:\n            Left: Positions the icon on the left side of the text content.\n            Right: Positions the icon on the right side of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"IsPrimary","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that determines which button is primary.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrimary"}},{"Kind":"Components.Component","Name":"IsToggle","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Determines whether the button can be on or off.\n            When you click on it, the button's state changes from normal to active.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsToggle"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Popups.ButtonType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the type of the button. The possible values are:\n            1.Button\n            2.Submit\n            3.Reset\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorSaveButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1140514398,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorTemplate","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Configures the custom components, such as Blazor native Textbox, HTML select which is rendered while editing in the In-place editor.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InPlaceEditorTemplate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Configure the components to render inside the InPlaceEditor.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorTemplate"}},{"HashCode":1888369247,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorTemplate","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Configures the custom components, such as Blazor native Textbox, HTML select which is rendered while editing in the In-place editor.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorTemplate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Configure the components to render inside the InPlaceEditor.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorTemplate","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1090231976,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorTemplate.ChildContent","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Configure the components to render inside the InPlaceEditor.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InPlaceEditorTemplate"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorTemplate.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2010339271,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorTemplate.ChildContent","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Configure the components to render inside the InPlaceEditor.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorTemplate"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.InPlaceEditorTemplate.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1891059845,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor<TValue>","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            The In-place Editor component is most useful for editing a value dynamically within its context (in-place).\n            It has the built-in support to handle all the form components, including TextBox, Dropdown List, DatePicker, and Rich Text Editor.\n            The component comes with different edit modes and a fully customizable UI.\n            </summary>\n            <typeparam name=\"TValue\">Represents the Inplace Editor data source's type.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfInPlaceEditor"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Overridden.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content of the InPlace Editor element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionOnBlur","TypeName":"Syncfusion.Blazor.InPlaceEditor.ActionBlur","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the action that is performed when we focus-out from the In-place Editor. It can be a Submit or Cancel or Ignore action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionOnBlur"}},{"Kind":"Components.Component","Name":"Adaptor","TypeName":"Syncfusion.Blazor.Adaptors","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the adaptor type that is used by the DataManager to communicate with DataSource.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Adaptor"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines single or multiple classes (separated by space) to be used to customize the In-place Editor.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to enable or disable the In-place Editor.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EditableOn","TypeName":"Syncfusion.Blazor.InPlaceEditor.EditableType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies whether to enable or disable the editing mode.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditableOn"}},{"Kind":"Components.Component","Name":"EmptyText","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the text to be shown when a component is Empty.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EmptyText"}},{"Kind":"Components.Component","Name":"EnableEditMode","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies to show and hide the editing mode.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableEditMode"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the rendering component in the right to left (RTL) direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"Syncfusion.Blazor.InPlaceEditor.RenderMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies how to render its components whether in inline or popup mode while editing in the In-place Editor.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the name of the component which is used to retrieve data from the server.\n            If the name is not given, then the component ID will be considered as the mapping name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"PrimaryKey","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the unique key of an editable field that can be used for saving data in the Database.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PrimaryKey"}},{"Kind":"Components.Component","Name":"ShowButtons","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to show or hide the Save and Cancel buttons of the In-place Editor.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowButtons"}},{"Kind":"Components.Component","Name":"SubmitOnEnter","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables to trigger the submit action when the enter key is pressed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SubmitOnEnter"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.InPlaceEditor.InputType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the component which is rendered within the In-place Editor.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes in the In-place Editor.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SaveUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the server URL which triggers on submit action in the In-place Editor.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SaveUrl"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Specifies the display value for the component when the original value is empty.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional Html attributes such as id, title, etc., to the InPlaceEditor element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor<TValue>","Components.GenericTyped":"True"}},{"HashCode":117882191,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor<TValue>","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            The In-place Editor component is most useful for editing a value dynamically within its context (in-place).\n            It has the built-in support to handle all the form components, including TextBox, Dropdown List, DatePicker, and Rich Text Editor.\n            The component comes with different edit modes and a fully customizable UI.\n            </summary>\n            <typeparam name=\"TValue\">Represents the Inplace Editor data source's type.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Overridden.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content of the InPlace Editor element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionOnBlur","TypeName":"Syncfusion.Blazor.InPlaceEditor.ActionBlur","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the action that is performed when we focus-out from the In-place Editor. It can be a Submit or Cancel or Ignore action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionOnBlur"}},{"Kind":"Components.Component","Name":"Adaptor","TypeName":"Syncfusion.Blazor.Adaptors","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the adaptor type that is used by the DataManager to communicate with DataSource.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Adaptor"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines single or multiple classes (separated by space) to be used to customize the In-place Editor.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to enable or disable the In-place Editor.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EditableOn","TypeName":"Syncfusion.Blazor.InPlaceEditor.EditableType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies whether to enable or disable the editing mode.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditableOn"}},{"Kind":"Components.Component","Name":"EmptyText","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the text to be shown when a component is Empty.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EmptyText"}},{"Kind":"Components.Component","Name":"EnableEditMode","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies to show and hide the editing mode.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableEditMode"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the rendering component in the right to left (RTL) direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"Syncfusion.Blazor.InPlaceEditor.RenderMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies how to render its components whether in inline or popup mode while editing in the In-place Editor.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the name of the component which is used to retrieve data from the server.\n            If the name is not given, then the component ID will be considered as the mapping name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"PrimaryKey","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the unique key of an editable field that can be used for saving data in the Database.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PrimaryKey"}},{"Kind":"Components.Component","Name":"ShowButtons","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to show or hide the Save and Cancel buttons of the In-place Editor.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowButtons"}},{"Kind":"Components.Component","Name":"SubmitOnEnter","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables to trigger the submit action when the enter key is pressed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SubmitOnEnter"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.InPlaceEditor.InputType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the component which is rendered within the In-place Editor.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes in the In-place Editor.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SaveUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the server URL which triggers on submit action in the In-place Editor.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SaveUrl"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Specifies the display value for the component when the original value is empty.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional Html attributes such as id, title, etc., to the InPlaceEditor element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":913341657,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Gets or sets the content of the InPlace Editor element.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfInPlaceEditor"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-717149651,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Gets or sets the content of the InPlace Editor element.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-121664273,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor._Imports","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor._Imports"}},{"HashCode":-1618957897,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor._Imports","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.InPlaceEditor._Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor._Imports","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-772913073,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor.Internal.Component<TValue>","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Configures the dependent compoenent of the Inplace Editor type.\n            </summary>\n            <typeparam name=\"TValue\">Represents the Inplace Editor data source's type.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Component"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.InPlaceEditor.Internal.Component<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.Internal.Component<TValue>","Components.GenericTyped":"True"}},{"HashCode":-947576,"Kind":"Components.Component","Name":"Syncfusion.Blazor.InPlaceEditor.Internal.Component<TValue>","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"\n            <summary>\n            Configures the dependent compoenent of the Inplace Editor type.\n            </summary>\n            <typeparam name=\"TValue\">Represents the Inplace Editor data source's type.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.InPlaceEditor.Internal.Component"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.InPlaceEditor.Internal.Component<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.Internal.Component<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2025897700,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.AutoCompleteEvents<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the AutoComplete Events of the component.\n            </summary>\n            <typeparam name=\"TValue\">Specifies the value type.</typeparam>\n            <typeparam name=\"TItem\">Specifies the type of AutoCompleteEvents.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AutoCompleteEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.AutoCompleteEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.AutoCompleteEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnActionBegin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionBeginEventArgs>","Documentation":"\n            <summary>\n            Triggers before fetching data from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionBegin","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnActionComplete","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers after data is fetched successfully from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionComplete","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnActionFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Exception>","Documentation":"\n            <summary>\n            Triggers when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.BeforeOpenEventArgs>","Documentation":"\n            <summary>\n            Triggers when the popup before opens.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Blur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when focus moves out from the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Blur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ChangeEventArgs<TValue, TItem>>","Documentation":"\n            <summary>\n            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>\n            <para>Use Change event to configure the cascading DropDownList.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.PopupEventArgs>","Documentation":"\n            <summary>\n            Triggers before the popup is closed. If you cancel this event, the popup remains opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CustomValueSpecifier","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.CustomValueSpecifierEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers on set a custom value to this component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomValueSpecifier","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DataBound","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.DataBoundEventArgs>","Documentation":"\n            <summary>\n            Triggers when data source is populated in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataBound","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Filtering","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.FilteringEventArgs>","Documentation":"\n            <summary>\n            Triggers on typing a character in the filter bar when the AllowFiltering is enabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Filtering","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Focus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is focused.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Focus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.PopupEventArgs>","Documentation":"\n            <summary>\n            Triggers after the popup has been closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ClosedEventArgs>","Documentation":"\n            <summary>\n            Triggers when the popup closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValueSelect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.SelectEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValueSelect","Components.EventCallback":"True","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.AutoCompleteEvents<TValue, TItem>","Components.GenericTyped":"True"}},{"HashCode":-1641260341,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.AutoCompleteEvents<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the AutoComplete Events of the component.\n            </summary>\n            <typeparam name=\"TValue\">Specifies the value type.</typeparam>\n            <typeparam name=\"TItem\">Specifies the type of AutoCompleteEvents.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.AutoCompleteEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.AutoCompleteEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.AutoCompleteEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnActionBegin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionBeginEventArgs>","Documentation":"\n            <summary>\n            Triggers before fetching data from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionBegin","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnActionComplete","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers after data is fetched successfully from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionComplete","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnActionFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Exception>","Documentation":"\n            <summary>\n            Triggers when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.BeforeOpenEventArgs>","Documentation":"\n            <summary>\n            Triggers when the popup before opens.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Blur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when focus moves out from the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Blur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ChangeEventArgs<TValue, TItem>>","Documentation":"\n            <summary>\n            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>\n            <para>Use Change event to configure the cascading DropDownList.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.PopupEventArgs>","Documentation":"\n            <summary>\n            Triggers before the popup is closed. If you cancel this event, the popup remains opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CustomValueSpecifier","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.CustomValueSpecifierEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers on set a custom value to this component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomValueSpecifier","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DataBound","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.DataBoundEventArgs>","Documentation":"\n            <summary>\n            Triggers when data source is populated in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataBound","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Filtering","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.FilteringEventArgs>","Documentation":"\n            <summary>\n            Triggers on typing a character in the filter bar when the AllowFiltering is enabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Filtering","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Focus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is focused.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Focus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.PopupEventArgs>","Documentation":"\n            <summary>\n            Triggers after the popup has been closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ClosedEventArgs>","Documentation":"\n            <summary>\n            Triggers when the popup closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValueSelect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.SelectEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValueSelect","Components.EventCallback":"True","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.AutoCompleteEvents<TValue, TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1197528979,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The Fields property maps the columns of the data table and binds the data to the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AutoCompleteFieldSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"GroupBy","TypeName":"System.String","Documentation":"\n            <summary>\n            Group the list items with it's related items by mapping groupBy field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupBy"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the list element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the icon class column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the text column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the value column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings"}},{"HashCode":-1863542175,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The Fields property maps the columns of the data table and binds the data to the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"GroupBy","TypeName":"System.String","Documentation":"\n            <summary>\n            Group the list items with it's related items by mapping groupBy field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupBy"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the list element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the icon class column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the text column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the value column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":108787224,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The AutoComplete has been provided with several options to customize each list item, group title, selected value, header, and footer elements.\n            </summary>\n            /// <typeparam name=\"TItem\">Specifies the type of AutoCompleteTemplates.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AutoCompleteTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>","Components.GenericTyped":"True"}},{"HashCode":-1921151000,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The AutoComplete has been provided with several options to customize each list item, group title, selected value, header, and footer elements.\n            </summary>\n            /// <typeparam name=\"TItem\">Specifies the type of AutoCompleteTemplates.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1095745897,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.FooterTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"AutoCompleteTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1338459235,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.FooterTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-163604360,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"AutoCompleteTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-223903981,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1993817823,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"AutoCompleteTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":109485205,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":243061086,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"AutoCompleteTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":746564376,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1171302190,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"AutoCompleteTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2124605332,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":514504812,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"AutoCompleteTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":3142895,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.AutoCompleteTemplates<TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2145280641,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The AutoComplete component provides the matched suggestion list when type into the input, from which the user can select one.\n            </summary>\n            <summary>\n            The AutoComplete component provides the matched suggestion list when type into the input, from which the user can select one.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfAutoComplete"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Highlight","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When set to 'true', highlight the searched characters on suggested list items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Highlight"}},{"Kind":"Components.Component","Name":"MinLength","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Allows you to set the minimum search character length, the search action will perform after typed minimum characters.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinLength"}},{"Kind":"Components.Component","Name":"FilterType","TypeName":"Syncfusion.Blazor.DropDowns.FilterType","IsEnum":true,"Documentation":"\n            <summary>\n            Determines on which filter type, the component needs to be considered on search action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterType"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Specifies whether to show or hide the clear button.</para>\n            <para>When the clear button is clicked, `Value` properties are reset to null.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"ShowPopupButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows you to either show or hide the popup button on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowPopupButton"}},{"Kind":"Components.Component","Name":"SuggestionCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Supports the specified number of list items on the suggestion popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SuggestionCount"}},{"Kind":"Components.Component","Name":"AllowCustom","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether the component allows user defined value which does not exist in data source.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowCustom"}},{"Kind":"Components.Component","Name":"Autofill","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether suggest a first matched item in input when searching. No action happens when no matches found.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Autofill"}},{"Kind":"Components.Component","Name":"ValidateOnInput","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component validates the input or not.\n            </summary>\n            <value>\n            <c>true</c>, If the ValidateOnInput is enabled for form validation, then the model value will be updated on entering the value to the input. otherwise, <b>false</b>.The default value is <c>false</c>.\n            </value>\n            <remarks>\n            This property is used to validate the form on typing into the input and updating the model value. The ValueChange event will be fired after the component lost its focus.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ValidateOnInput"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the DropDownList component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When AllowFiltering is set to true, show the filter bar (search box) of the component.</para>\n            <para>The filter action retrieves matched items through the `Filtering` event based on the characters typed in the search TextBox.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the DropDownList. One or more custom CSS classes can be added to a DropDownList.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"FilterBarPlaceholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Accepts the value to be displayed as a watermark text on the filter bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterBarPlaceholder"}},{"Kind":"Components.Component","Name":"FloatLabelType","TypeName":"Syncfusion.Blazor.Inputs.FloatLabelType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the floating label behavior of the DropDownList that the placeholder text floats above the DropDownList based on the following values.\n            <para>Possible values are:</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Never</term>\n            <description>Never floats the label in the DropDownList when the placeholder is available.</description>\n            </item>\n            <item>\n            <term>Always</term>\n            <description>The floating label always floats above the DropDownList.</description>\n            </item>\n            <item>\n            <term>Auto</term>\n            <description>The floating label floats above the DropDownList after focusing it or when enters the value in it.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FloatLabelType"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the root element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the index of the selected item in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Index"}},{"Kind":"Components.Component","Name":"IndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32?>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the index changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IndexChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DropDownList. The property is depending on the FloatLabelType property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"PopupHeight","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the height of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupHeight"}},{"Kind":"Components.Component","Name":"PopupWidth","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the popup list. By default, the popup width sets based on the width of\n            the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupWidth"}},{"Kind":"Components.Component","Name":"Readonly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the boolean value whether the DropDownList allows the user to change the value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Readonly"}},{"Kind":"Components.Component","Name":"EnableVirtualization","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            The Virtual Scrolling feature is used to display a large amount of data that you require without buffering the entire load of a huge database records in the DropDowns, that is, when scrolling, the datamanager request is sent to fetch some amount of data from the server dynamically.\n            To achieve this scenario with DropDowns, set the EnableVirtualization to true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableVirtualization"}},{"Kind":"Components.Component","Name":"ItemsCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The data can be fetched in popup based on ItemsCount, when enabled the EnableVirtualization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemsCount"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the selected item in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            <para>Specifies the width of the component. By default, the component width sets based on the width of\n            its parent container.</para>\n            <para>You can also set the width in pixel values.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tab order of the DropDownList component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of input has changed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnInput","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input loses the focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input gets focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Enable or disable persisting component's state between page reloads.</para>\n            <para>If enabled,  the `Value` state will be persisted.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Value</term>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortOrder","TypeName":"Syncfusion.Blazor.DropDowns.SortOrder","IsEnum":true,"Documentation":"\n            <summary>\n            <para>Specifies the `SortOrder` to sort the data source.</para>\n            <para>The available type of sort orders are.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>None</term>\n            <description>The data source is not sorting.</description>\n            </item>\n            <item>\n            <term>Ascending</term>\n            <description>The data source is sorting with ascending order.</description>\n            </item>\n            <item>\n            <term>Descending</term>\n            <description>The data source is sorting with descending order.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortOrder"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            <para>Accepts the list items either through local or remote service and binds it to the component.</para>\n            <para>It can be an array of JSON Objects or an instance of `DataManager`.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            Accepts the external `Query` that execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"IgnoreCase","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>\n            <para>By default, consider the casing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreCase"}},{"Kind":"Components.Component","Name":"IgnoreAccent","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreAccent"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double","Documentation":"\n            <summary>\n            specifies the z-index value of the component popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>","Components.GenericTyped":"True"}},{"HashCode":1032829076,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The AutoComplete component provides the matched suggestion list when type into the input, from which the user can select one.\n            </summary>\n            <summary>\n            The AutoComplete component provides the matched suggestion list when type into the input, from which the user can select one.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.SfAutoComplete"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Highlight","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When set to 'true', highlight the searched characters on suggested list items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Highlight"}},{"Kind":"Components.Component","Name":"MinLength","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Allows you to set the minimum search character length, the search action will perform after typed minimum characters.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinLength"}},{"Kind":"Components.Component","Name":"FilterType","TypeName":"Syncfusion.Blazor.DropDowns.FilterType","IsEnum":true,"Documentation":"\n            <summary>\n            Determines on which filter type, the component needs to be considered on search action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterType"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Specifies whether to show or hide the clear button.</para>\n            <para>When the clear button is clicked, `Value` properties are reset to null.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"ShowPopupButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows you to either show or hide the popup button on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowPopupButton"}},{"Kind":"Components.Component","Name":"SuggestionCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Supports the specified number of list items on the suggestion popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SuggestionCount"}},{"Kind":"Components.Component","Name":"AllowCustom","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether the component allows user defined value which does not exist in data source.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowCustom"}},{"Kind":"Components.Component","Name":"Autofill","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether suggest a first matched item in input when searching. No action happens when no matches found.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Autofill"}},{"Kind":"Components.Component","Name":"ValidateOnInput","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component validates the input or not.\n            </summary>\n            <value>\n            <c>true</c>, If the ValidateOnInput is enabled for form validation, then the model value will be updated on entering the value to the input. otherwise, <b>false</b>.The default value is <c>false</c>.\n            </value>\n            <remarks>\n            This property is used to validate the form on typing into the input and updating the model value. The ValueChange event will be fired after the component lost its focus.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ValidateOnInput"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the DropDownList component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When AllowFiltering is set to true, show the filter bar (search box) of the component.</para>\n            <para>The filter action retrieves matched items through the `Filtering` event based on the characters typed in the search TextBox.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the DropDownList. One or more custom CSS classes can be added to a DropDownList.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"FilterBarPlaceholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Accepts the value to be displayed as a watermark text on the filter bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterBarPlaceholder"}},{"Kind":"Components.Component","Name":"FloatLabelType","TypeName":"Syncfusion.Blazor.Inputs.FloatLabelType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the floating label behavior of the DropDownList that the placeholder text floats above the DropDownList based on the following values.\n            <para>Possible values are:</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Never</term>\n            <description>Never floats the label in the DropDownList when the placeholder is available.</description>\n            </item>\n            <item>\n            <term>Always</term>\n            <description>The floating label always floats above the DropDownList.</description>\n            </item>\n            <item>\n            <term>Auto</term>\n            <description>The floating label floats above the DropDownList after focusing it or when enters the value in it.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FloatLabelType"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the root element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the index of the selected item in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Index"}},{"Kind":"Components.Component","Name":"IndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32?>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the index changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IndexChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DropDownList. The property is depending on the FloatLabelType property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"PopupHeight","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the height of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupHeight"}},{"Kind":"Components.Component","Name":"PopupWidth","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the popup list. By default, the popup width sets based on the width of\n            the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupWidth"}},{"Kind":"Components.Component","Name":"Readonly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the boolean value whether the DropDownList allows the user to change the value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Readonly"}},{"Kind":"Components.Component","Name":"EnableVirtualization","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            The Virtual Scrolling feature is used to display a large amount of data that you require without buffering the entire load of a huge database records in the DropDowns, that is, when scrolling, the datamanager request is sent to fetch some amount of data from the server dynamically.\n            To achieve this scenario with DropDowns, set the EnableVirtualization to true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableVirtualization"}},{"Kind":"Components.Component","Name":"ItemsCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The data can be fetched in popup based on ItemsCount, when enabled the EnableVirtualization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemsCount"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the selected item in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            <para>Specifies the width of the component. By default, the component width sets based on the width of\n            its parent container.</para>\n            <para>You can also set the width in pixel values.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tab order of the DropDownList component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of input has changed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnInput","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input loses the focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input gets focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Enable or disable persisting component's state between page reloads.</para>\n            <para>If enabled,  the `Value` state will be persisted.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Value</term>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortOrder","TypeName":"Syncfusion.Blazor.DropDowns.SortOrder","IsEnum":true,"Documentation":"\n            <summary>\n            <para>Specifies the `SortOrder` to sort the data source.</para>\n            <para>The available type of sort orders are.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>None</term>\n            <description>The data source is not sorting.</description>\n            </item>\n            <item>\n            <term>Ascending</term>\n            <description>The data source is sorting with ascending order.</description>\n            </item>\n            <item>\n            <term>Descending</term>\n            <description>The data source is sorting with descending order.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortOrder"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            <para>Accepts the list items either through local or remote service and binds it to the component.</para>\n            <para>It can be an array of JSON Objects or an instance of `DataManager`.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            Accepts the external `Query` that execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"IgnoreCase","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>\n            <para>By default, consider the casing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreCase"}},{"Kind":"Components.Component","Name":"IgnoreAccent","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreAccent"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double","Documentation":"\n            <summary>\n            specifies the z-index value of the component popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1855520582,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.ChildContent","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfAutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":169780475,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.ChildContent","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.DropDowns.SfAutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-942306095,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.FooterTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"SfAutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1764329099,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.FooterTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfAutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-977496540,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"SfAutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1489698386,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfAutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1309904031,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.ValueTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValueTemplate","ParentTag":"SfAutoComplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ValueTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.ValueTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-968613497,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.ValueTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValueTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfAutoComplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ValueTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.ValueTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1544145732,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"SfAutoComplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1436537185,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfAutoComplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1369155570,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"SfAutoComplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-527103001,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfAutoComplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1889204339,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"SfAutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1167732557,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfAutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1653209724,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"SfAutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":837514443,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfAutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1065583071,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The DropDownBase can be created data source and fetch the list of data from data bound component.\n            </summary>\n            <typeparam name=\"T\">Specifies the type of SfDropDownBase.</typeparam>\n            <summary>\n            The DropDownBase can be created data source and fetch the list of data from data bound component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfDropDownBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the Syncfusion.Blazor.DropDowns.SfDropDownBase<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Enable or disable persisting component's state between page reloads.</para>\n            <para>If enabled,  the `Value` state will be persisted.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Value</term>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<T>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortOrder","TypeName":"Syncfusion.Blazor.DropDowns.SortOrder","IsEnum":true,"Documentation":"\n            <summary>\n            <para>Specifies the `SortOrder` to sort the data source.</para>\n            <para>The available type of sort orders are.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>None</term>\n            <description>The data source is not sorting.</description>\n            </item>\n            <item>\n            <term>Ascending</term>\n            <description>The data source is sorting with ascending order.</description>\n            </item>\n            <item>\n            <term>Descending</term>\n            <description>The data source is sorting with descending order.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortOrder"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<T>","Documentation":"\n            <summary>\n            <para>Accepts the list items either through local or remote service and binds it to the component.</para>\n            <para>It can be an array of JSON Objects or an instance of `DataManager`.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            Accepts the external `Query` that execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"FilterType","TypeName":"Syncfusion.Blazor.DropDowns.FilterType","IsEnum":true,"Documentation":"\n            <summary>\n            Determines on which filter type, the component needs to be considered on search action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterType"}},{"Kind":"Components.Component","Name":"IgnoreCase","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>\n            <para>By default, consider the casing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreCase"}},{"Kind":"Components.Component","Name":"IgnoreAccent","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreAccent"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double","Documentation":"\n            <summary>\n            specifies the z-index value of the component popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>","Components.GenericTyped":"True"}},{"HashCode":-1482046809,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The DropDownBase can be created data source and fetch the list of data from data bound component.\n            </summary>\n            <typeparam name=\"T\">Specifies the type of SfDropDownBase.</typeparam>\n            <summary>\n            The DropDownBase can be created data source and fetch the list of data from data bound component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.SfDropDownBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the Syncfusion.Blazor.DropDowns.SfDropDownBase<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Enable or disable persisting component's state between page reloads.</para>\n            <para>If enabled,  the `Value` state will be persisted.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Value</term>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<T>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortOrder","TypeName":"Syncfusion.Blazor.DropDowns.SortOrder","IsEnum":true,"Documentation":"\n            <summary>\n            <para>Specifies the `SortOrder` to sort the data source.</para>\n            <para>The available type of sort orders are.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>None</term>\n            <description>The data source is not sorting.</description>\n            </item>\n            <item>\n            <term>Ascending</term>\n            <description>The data source is sorting with ascending order.</description>\n            </item>\n            <item>\n            <term>Descending</term>\n            <description>The data source is sorting with descending order.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortOrder"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<T>","Documentation":"\n            <summary>\n            <para>Accepts the list items either through local or remote service and binds it to the component.</para>\n            <para>It can be an array of JSON Objects or an instance of `DataManager`.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            Accepts the external `Query` that execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"FilterType","TypeName":"Syncfusion.Blazor.DropDowns.FilterType","IsEnum":true,"Documentation":"\n            <summary>\n            Determines on which filter type, the component needs to be considered on search action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterType"}},{"Kind":"Components.Component","Name":"IgnoreCase","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>\n            <para>By default, consider the casing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreCase"}},{"Kind":"Components.Component","Name":"IgnoreAccent","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreAccent"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double","Documentation":"\n            <summary>\n            specifies the z-index value of the component popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1446671831,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"SfDropDownBase"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-152434035,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfDropDownBase"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2035444707,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"SfDropDownBase"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":271265970,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfDropDownBase"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1864653142,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"SfDropDownBase"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-132456553,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfDropDownBase"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-274486587,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"SfDropDownBase"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1103245187,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfDropDownBase"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownBase<T>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1797632729,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.ComboBoxEvents<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the DropDownList Events of the component.\n            </summary>\n            <typeparam name=\"TValue\">Specifies the value type.</typeparam>\n            <typeparam name=\"TItem\">Specifies the type of ComboBoxEvents.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ComboBoxEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.ComboBoxEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.ComboBoxEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnActionBegin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionBeginEventArgs>","Documentation":"\n            <summary>\n            Triggers before fetching data from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionBegin","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnActionComplete","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers after data is fetched successfully from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionComplete","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnActionFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Exception>","Documentation":"\n            <summary>\n            Triggers when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.BeforeOpenEventArgs>","Documentation":"\n            <summary>\n            Triggers when the popup before opens.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Blur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when focus moves out from the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Blur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ChangeEventArgs<TValue, TItem>>","Documentation":"\n            <summary>\n            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>\n            <para>Use Change event to configure the cascading DropDownList.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.PopupEventArgs>","Documentation":"\n            <summary>\n            Triggers before the popup is closed. If you cancel this event, the popup remains opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CustomValueSpecifier","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.CustomValueSpecifierEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers on set a custom value to this component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomValueSpecifier","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DataBound","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.DataBoundEventArgs>","Documentation":"\n            <summary>\n            Triggers when data source is populated in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataBound","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Filtering","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.FilteringEventArgs>","Documentation":"\n            <summary>\n            Triggers on typing a character in the filter bar when the AllowFiltering is enabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Filtering","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Focus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is focused.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Focus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.PopupEventArgs>","Documentation":"\n            <summary>\n            Triggers when the popup opens.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ClosedEventArgs>","Documentation":"\n            <summary>\n            Triggers after the popup has been closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValueSelect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.SelectEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValueSelect","Components.EventCallback":"True","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.ComboBoxEvents<TValue, TItem>","Components.GenericTyped":"True"}},{"HashCode":-1542754117,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.ComboBoxEvents<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the DropDownList Events of the component.\n            </summary>\n            <typeparam name=\"TValue\">Specifies the value type.</typeparam>\n            <typeparam name=\"TItem\">Specifies the type of ComboBoxEvents.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.ComboBoxEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.ComboBoxEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.ComboBoxEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnActionBegin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionBeginEventArgs>","Documentation":"\n            <summary>\n            Triggers before fetching data from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionBegin","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnActionComplete","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers after data is fetched successfully from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionComplete","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnActionFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Exception>","Documentation":"\n            <summary>\n            Triggers when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.BeforeOpenEventArgs>","Documentation":"\n            <summary>\n            Triggers when the popup before opens.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Blur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when focus moves out from the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Blur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ChangeEventArgs<TValue, TItem>>","Documentation":"\n            <summary>\n            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>\n            <para>Use Change event to configure the cascading DropDownList.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.PopupEventArgs>","Documentation":"\n            <summary>\n            Triggers before the popup is closed. If you cancel this event, the popup remains opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CustomValueSpecifier","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.CustomValueSpecifierEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers on set a custom value to this component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomValueSpecifier","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DataBound","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.DataBoundEventArgs>","Documentation":"\n            <summary>\n            Triggers when data source is populated in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataBound","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Filtering","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.FilteringEventArgs>","Documentation":"\n            <summary>\n            Triggers on typing a character in the filter bar when the AllowFiltering is enabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Filtering","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Focus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is focused.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Focus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.PopupEventArgs>","Documentation":"\n            <summary>\n            Triggers when the popup opens.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ClosedEventArgs>","Documentation":"\n            <summary>\n            Triggers after the popup has been closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValueSelect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.SelectEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValueSelect","Components.EventCallback":"True","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.ComboBoxEvents<TValue, TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2035941180,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The Fields property maps the columns of the data table and binds the data to the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ComboBoxFieldSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"GroupBy","TypeName":"System.String","Documentation":"\n            <summary>\n            Group the list items with it's related items by mapping groupBy field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupBy"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the list element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the icon class column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the text column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the value column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings"}},{"HashCode":1005156635,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The Fields property maps the columns of the data table and binds the data to the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"GroupBy","TypeName":"System.String","Documentation":"\n            <summary>\n            Group the list items with it's related items by mapping groupBy field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupBy"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the list element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the icon class column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the text column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the value column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1536545254,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The ComboBox has been provided with several options to customize each list item, group title, header, and footer elements.\n            </summary>\n            <typeparam name=\"TItem\">Specifies the type of ComboBoxTemplates.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ComboBoxTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>","Components.GenericTyped":"True"}},{"HashCode":1163820535,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The ComboBox has been provided with several options to customize each list item, group title, header, and footer elements.\n            </summary>\n            <typeparam name=\"TItem\">Specifies the type of ComboBoxTemplates.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-95427937,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.FooterTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"ComboBoxTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1028176583,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.FooterTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1752330416,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"ComboBoxTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2073867375,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":171513443,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"ComboBoxTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":58825444,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":219219383,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"ComboBoxTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":752541916,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1591879425,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"ComboBoxTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1074194125,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":732839057,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"ComboBoxTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-542551927,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.ComboBoxTemplates<TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":479354281,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The ComboBox component allows the user to type a value or choose an option from the list of predefined options.\n            </summary>\n            <summary>\n            The ComboBox component allows the user to type a value or choose an option from the list of predefined options.\n            </summary>\n            <typeparam name=\"TValue\">Specifies the value type.</typeparam>\n            <typeparam name=\"TItem\">Specifies the type of SfComboBox.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfComboBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AllowCustom","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether the component allows user defined value which does not exist in data source.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowCustom"}},{"Kind":"Components.Component","Name":"Autofill","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether suggest a first matched item in input when searching. No action happens when no matches found.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Autofill"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Specifies whether to show or hide the clear button.</para>\n            <para>When the clear button is clicked, `Value`, `Text`, and `Index` properties are reset to null.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"ValidateOnInput","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component validates the input or not.\n            </summary>\n            <value>\n            <c>true</c>, If the ValidateOnInput is enabled for form validation, then the model value will be updated on entering the value to the input. otherwise, <b>false</b>.The default value is <c>false</c>.\n            </value>\n            <remarks>\n            This property is used to validate the form on typing into the input and updating the model value. The ValueChange event will be fired after the component lost its focus.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ValidateOnInput"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the DropDownList component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When AllowFiltering is set to true, show the filter bar (search box) of the component.</para>\n            <para>The filter action retrieves matched items through the `Filtering` event based on the characters typed in the search TextBox.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the DropDownList. One or more custom CSS classes can be added to a DropDownList.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"FilterBarPlaceholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Accepts the value to be displayed as a watermark text on the filter bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterBarPlaceholder"}},{"Kind":"Components.Component","Name":"FloatLabelType","TypeName":"Syncfusion.Blazor.Inputs.FloatLabelType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the floating label behavior of the DropDownList that the placeholder text floats above the DropDownList based on the following values.\n            <para>Possible values are:</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Never</term>\n            <description>Never floats the label in the DropDownList when the placeholder is available.</description>\n            </item>\n            <item>\n            <term>Always</term>\n            <description>The floating label always floats above the DropDownList.</description>\n            </item>\n            <item>\n            <term>Auto</term>\n            <description>The floating label floats above the DropDownList after focusing it or when enters the value in it.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FloatLabelType"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the root element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the index of the selected item in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Index"}},{"Kind":"Components.Component","Name":"IndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32?>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the index changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IndexChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DropDownList. The property is depending on the FloatLabelType property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"PopupHeight","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the height of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupHeight"}},{"Kind":"Components.Component","Name":"PopupWidth","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the popup list. By default, the popup width sets based on the width of\n            the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupWidth"}},{"Kind":"Components.Component","Name":"Readonly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the boolean value whether the DropDownList allows the user to change the value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Readonly"}},{"Kind":"Components.Component","Name":"EnableVirtualization","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            The Virtual Scrolling feature is used to display a large amount of data that you require without buffering the entire load of a huge database records in the DropDowns, that is, when scrolling, the datamanager request is sent to fetch some amount of data from the server dynamically.\n            To achieve this scenario with DropDowns, set the EnableVirtualization to true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableVirtualization"}},{"Kind":"Components.Component","Name":"ItemsCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The data can be fetched in popup based on ItemsCount, when enabled the EnableVirtualization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemsCount"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the selected item in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            <para>Specifies the width of the component. By default, the component width sets based on the width of\n            its parent container.</para>\n            <para>You can also set the width in pixel values.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tab order of the DropDownList component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of input has changed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnInput","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input loses the focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input gets focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Enable or disable persisting component's state between page reloads.</para>\n            <para>If enabled,  the `Value` state will be persisted.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Value</term>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortOrder","TypeName":"Syncfusion.Blazor.DropDowns.SortOrder","IsEnum":true,"Documentation":"\n            <summary>\n            <para>Specifies the `SortOrder` to sort the data source.</para>\n            <para>The available type of sort orders are.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>None</term>\n            <description>The data source is not sorting.</description>\n            </item>\n            <item>\n            <term>Ascending</term>\n            <description>The data source is sorting with ascending order.</description>\n            </item>\n            <item>\n            <term>Descending</term>\n            <description>The data source is sorting with descending order.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortOrder"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            <para>Accepts the list items either through local or remote service and binds it to the component.</para>\n            <para>It can be an array of JSON Objects or an instance of `DataManager`.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            Accepts the external `Query` that execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"FilterType","TypeName":"Syncfusion.Blazor.DropDowns.FilterType","IsEnum":true,"Documentation":"\n            <summary>\n            Determines on which filter type, the component needs to be considered on search action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterType"}},{"Kind":"Components.Component","Name":"IgnoreCase","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>\n            <para>By default, consider the casing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreCase"}},{"Kind":"Components.Component","Name":"IgnoreAccent","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreAccent"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double","Documentation":"\n            <summary>\n            specifies the z-index value of the component popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>","Components.GenericTyped":"True"}},{"HashCode":-1563163803,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The ComboBox component allows the user to type a value or choose an option from the list of predefined options.\n            </summary>\n            <summary>\n            The ComboBox component allows the user to type a value or choose an option from the list of predefined options.\n            </summary>\n            <typeparam name=\"TValue\">Specifies the value type.</typeparam>\n            <typeparam name=\"TItem\">Specifies the type of SfComboBox.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.SfComboBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AllowCustom","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether the component allows user defined value which does not exist in data source.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowCustom"}},{"Kind":"Components.Component","Name":"Autofill","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether suggest a first matched item in input when searching. No action happens when no matches found.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Autofill"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Specifies whether to show or hide the clear button.</para>\n            <para>When the clear button is clicked, `Value`, `Text`, and `Index` properties are reset to null.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"ValidateOnInput","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component validates the input or not.\n            </summary>\n            <value>\n            <c>true</c>, If the ValidateOnInput is enabled for form validation, then the model value will be updated on entering the value to the input. otherwise, <b>false</b>.The default value is <c>false</c>.\n            </value>\n            <remarks>\n            This property is used to validate the form on typing into the input and updating the model value. The ValueChange event will be fired after the component lost its focus.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ValidateOnInput"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the DropDownList component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When AllowFiltering is set to true, show the filter bar (search box) of the component.</para>\n            <para>The filter action retrieves matched items through the `Filtering` event based on the characters typed in the search TextBox.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the DropDownList. One or more custom CSS classes can be added to a DropDownList.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"FilterBarPlaceholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Accepts the value to be displayed as a watermark text on the filter bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterBarPlaceholder"}},{"Kind":"Components.Component","Name":"FloatLabelType","TypeName":"Syncfusion.Blazor.Inputs.FloatLabelType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the floating label behavior of the DropDownList that the placeholder text floats above the DropDownList based on the following values.\n            <para>Possible values are:</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Never</term>\n            <description>Never floats the label in the DropDownList when the placeholder is available.</description>\n            </item>\n            <item>\n            <term>Always</term>\n            <description>The floating label always floats above the DropDownList.</description>\n            </item>\n            <item>\n            <term>Auto</term>\n            <description>The floating label floats above the DropDownList after focusing it or when enters the value in it.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FloatLabelType"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the root element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the index of the selected item in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Index"}},{"Kind":"Components.Component","Name":"IndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32?>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the index changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IndexChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DropDownList. The property is depending on the FloatLabelType property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"PopupHeight","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the height of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupHeight"}},{"Kind":"Components.Component","Name":"PopupWidth","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the popup list. By default, the popup width sets based on the width of\n            the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupWidth"}},{"Kind":"Components.Component","Name":"Readonly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the boolean value whether the DropDownList allows the user to change the value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Readonly"}},{"Kind":"Components.Component","Name":"EnableVirtualization","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            The Virtual Scrolling feature is used to display a large amount of data that you require without buffering the entire load of a huge database records in the DropDowns, that is, when scrolling, the datamanager request is sent to fetch some amount of data from the server dynamically.\n            To achieve this scenario with DropDowns, set the EnableVirtualization to true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableVirtualization"}},{"Kind":"Components.Component","Name":"ItemsCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The data can be fetched in popup based on ItemsCount, when enabled the EnableVirtualization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemsCount"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the selected item in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            <para>Specifies the width of the component. By default, the component width sets based on the width of\n            its parent container.</para>\n            <para>You can also set the width in pixel values.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tab order of the DropDownList component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of input has changed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnInput","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input loses the focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input gets focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Enable or disable persisting component's state between page reloads.</para>\n            <para>If enabled,  the `Value` state will be persisted.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Value</term>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortOrder","TypeName":"Syncfusion.Blazor.DropDowns.SortOrder","IsEnum":true,"Documentation":"\n            <summary>\n            <para>Specifies the `SortOrder` to sort the data source.</para>\n            <para>The available type of sort orders are.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>None</term>\n            <description>The data source is not sorting.</description>\n            </item>\n            <item>\n            <term>Ascending</term>\n            <description>The data source is sorting with ascending order.</description>\n            </item>\n            <item>\n            <term>Descending</term>\n            <description>The data source is sorting with descending order.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortOrder"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            <para>Accepts the list items either through local or remote service and binds it to the component.</para>\n            <para>It can be an array of JSON Objects or an instance of `DataManager`.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            Accepts the external `Query` that execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"FilterType","TypeName":"Syncfusion.Blazor.DropDowns.FilterType","IsEnum":true,"Documentation":"\n            <summary>\n            Determines on which filter type, the component needs to be considered on search action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterType"}},{"Kind":"Components.Component","Name":"IgnoreCase","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>\n            <para>By default, consider the casing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreCase"}},{"Kind":"Components.Component","Name":"IgnoreAccent","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreAccent"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double","Documentation":"\n            <summary>\n            specifies the z-index value of the component popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-505890531,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.ChildContent","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1272533037,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.ChildContent","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.DropDowns.SfComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":895016610,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.FooterTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"SfComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2079719634,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.FooterTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":885781137,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"SfComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1999632368,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-457839820,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.ValueTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValueTemplate","ParentTag":"SfComboBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ValueTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.ValueTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1588611677,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.ValueTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValueTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfComboBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ValueTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.ValueTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":875543416,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"SfComboBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":642080404,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfComboBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1459087691,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"SfComboBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-925319282,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfComboBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1244092892,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"SfComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":689408848,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1191268270,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"SfComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1895223934,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1079397988,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.DropDownListEvents<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the DropDownList Events of the component.\n            </summary>\n            <typeparam name=\"TValue\">Specifies the value type.</typeparam>\n            <typeparam name=\"TItem\">Specifies the type of SfDropDownList.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DropDownListEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.DropDownListEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.DropDownListEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnActionBegin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionBeginEventArgs>","Documentation":"\n            <summary>\n            Triggers before fetching data from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionBegin","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnActionComplete","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers after data is fetched successfully from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionComplete","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnActionFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Exception>","Documentation":"\n            <summary>\n            Triggers when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.BeforeOpenEventArgs>","Documentation":"\n            <summary>\n            Triggers when the popup before opens.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Blur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when focus moves out from the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Blur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ChangeEventArgs<TValue, TItem>>","Documentation":"\n            <summary>\n            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>\n            <para>Use Change event to configure the cascading DropDownList.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.PopupEventArgs>","Documentation":"\n            <summary>\n            Triggers before the popup is closed. If you cancel this event, the popup remains opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DataBound","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.DataBoundEventArgs>","Documentation":"\n            <summary>\n            Triggers when data source is populated in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataBound","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Filtering","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.FilteringEventArgs>","Documentation":"\n            <summary>\n            Triggers on typing a character in the filter bar when the AllowFiltering is enabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Filtering","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Focus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is focused.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Focus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.PopupEventArgs>","Documentation":"\n            <summary>\n            Triggers when the popup opens.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ClosedEventArgs>","Documentation":"\n            <summary>\n            Triggers after the popup has been closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValueSelect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.SelectEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValueSelect","Components.EventCallback":"True","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListEvents<TValue, TItem>","Components.GenericTyped":"True"}},{"HashCode":1012819378,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.DropDownListEvents<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the DropDownList Events of the component.\n            </summary>\n            <typeparam name=\"TValue\">Specifies the value type.</typeparam>\n            <typeparam name=\"TItem\">Specifies the type of SfDropDownList.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.DropDownListEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.DropDownListEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.DropDownListEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnActionBegin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionBeginEventArgs>","Documentation":"\n            <summary>\n            Triggers before fetching data from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionBegin","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnActionComplete","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers after data is fetched successfully from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionComplete","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnActionFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Exception>","Documentation":"\n            <summary>\n            Triggers when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.BeforeOpenEventArgs>","Documentation":"\n            <summary>\n            Triggers when the popup before opens.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Blur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when focus moves out from the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Blur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ChangeEventArgs<TValue, TItem>>","Documentation":"\n            <summary>\n            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>\n            <para>Use Change event to configure the cascading DropDownList.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.PopupEventArgs>","Documentation":"\n            <summary>\n            Triggers before the popup is closed. If you cancel this event, the popup remains opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DataBound","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.DataBoundEventArgs>","Documentation":"\n            <summary>\n            Triggers when data source is populated in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataBound","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Filtering","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.FilteringEventArgs>","Documentation":"\n            <summary>\n            Triggers on typing a character in the filter bar when the AllowFiltering is enabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Filtering","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Focus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is focused.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Focus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.PopupEventArgs>","Documentation":"\n            <summary>\n            Triggers when the popup opens.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ClosedEventArgs>","Documentation":"\n            <summary>\n            Triggers after the popup has been closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValueSelect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.SelectEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValueSelect","Components.EventCallback":"True","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListEvents<TValue, TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1564211920,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.DropDownListFieldSettings","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The Fields property maps the columns of the data table and binds the data to the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DropDownListFieldSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"GroupBy","TypeName":"System.String","Documentation":"\n            <summary>\n            Group the list items with it's related items by mapping groupBy field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupBy"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the list element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the icon class column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the text column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the value column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListFieldSettings"}},{"HashCode":-1181201337,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.DropDownListFieldSettings","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The Fields property maps the columns of the data table and binds the data to the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.DropDownListFieldSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"GroupBy","TypeName":"System.String","Documentation":"\n            <summary>\n            Group the list items with it's related items by mapping groupBy field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupBy"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the list element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the icon class column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the text column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the value column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListFieldSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":292983085,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The DropDownList has been provided with several options to customize each list item, group title, selected value, header, and footer elements.\n            </summary>\n            <typeparam name=\"TItem\">Specifies the type of DropDownListTemplates.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DropDownListTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ValueTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>","Components.GenericTyped":"True"}},{"HashCode":-128617225,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The DropDownList has been provided with several options to customize each list item, group title, selected value, header, and footer elements.\n            </summary>\n            <typeparam name=\"TItem\">Specifies the type of DropDownListTemplates.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.DropDownListTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ValueTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1335386712,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.ValueTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValueTemplate","ParentTag":"DropDownListTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ValueTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.ValueTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":804126614,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.ValueTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValueTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.DropDownListTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ValueTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.ValueTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":448457192,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.FooterTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"DropDownListTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1205719575,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.FooterTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.DropDownListTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2031409244,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"DropDownListTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1263756884,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.DropDownListTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1391704981,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"DropDownListTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2941129,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.DropDownListTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":995648233,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"DropDownListTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-155202328,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.DropDownListTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":978488925,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"DropDownListTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-956014121,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.DropDownListTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1033087998,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"DropDownListTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2135584000,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.DropDownListTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.DropDownListTemplates<TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1396097702,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The DropDownList component contains a list of predefined values from which a single value can be chosen.\n            </summary>\n            <summary>\n            The DropDownList component contains a list of predefined values from which a single value can be chosen.\n            </summary>\n            <summary>\n            The DropDownList component contains a list of predefined values from which a single value can be chosen.\n            </summary>\n            <typeparam name=\"TValue\">Specifies the value type.</typeparam>\n            <typeparam name=\"TItem\">Specifies the type of SfDropDownList.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfDropDownList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the DropDownList component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When AllowFiltering is set to true, show the filter bar (search box) of the component.</para>\n            <para>The filter action retrieves matched items through the `Filtering` event based on the characters typed in the search TextBox.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the DropDownList. One or more custom CSS classes can be added to a DropDownList.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"FilterBarPlaceholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Accepts the value to be displayed as a watermark text on the filter bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterBarPlaceholder"}},{"Kind":"Components.Component","Name":"FloatLabelType","TypeName":"Syncfusion.Blazor.Inputs.FloatLabelType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the floating label behavior of the DropDownList that the placeholder text floats above the DropDownList based on the following values.\n            <para>Possible values are:</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Never</term>\n            <description>Never floats the label in the DropDownList when the placeholder is available.</description>\n            </item>\n            <item>\n            <term>Always</term>\n            <description>The floating label always floats above the DropDownList.</description>\n            </item>\n            <item>\n            <term>Auto</term>\n            <description>The floating label floats above the DropDownList after focusing it or when enters the value in it.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FloatLabelType"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the root element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the index of the selected item in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Index"}},{"Kind":"Components.Component","Name":"IndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32?>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the index changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IndexChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DropDownList. The property is depending on the FloatLabelType property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"PopupHeight","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the height of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupHeight"}},{"Kind":"Components.Component","Name":"PopupWidth","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the popup list. By default, the popup width sets based on the width of\n            the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupWidth"}},{"Kind":"Components.Component","Name":"Readonly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the boolean value whether the DropDownList allows the user to change the value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Readonly"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Specifies whether to show or hide the clear button.</para>\n            <para>When the clear button is clicked, `Value`, `Text`, and `Index` properties are reset to null.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"EnableVirtualization","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            The Virtual Scrolling feature is used to display a large amount of data that you require without buffering the entire load of a huge database records in the DropDowns, that is, when scrolling, the datamanager request is sent to fetch some amount of data from the server dynamically.\n            To achieve this scenario with DropDowns, set the EnableVirtualization to true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableVirtualization"}},{"Kind":"Components.Component","Name":"ItemsCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The data can be fetched in popup based on ItemsCount, when enabled the EnableVirtualization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemsCount"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the selected item in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            <para>Specifies the width of the component. By default, the component width sets based on the width of\n            its parent container.</para>\n            <para>You can also set the width in pixel values.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tab order of the DropDownList component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of input has changed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnInput","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input loses the focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input gets focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Enable or disable persisting component's state between page reloads.</para>\n            <para>If enabled,  the `Value` state will be persisted.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Value</term>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortOrder","TypeName":"Syncfusion.Blazor.DropDowns.SortOrder","IsEnum":true,"Documentation":"\n            <summary>\n            <para>Specifies the `SortOrder` to sort the data source.</para>\n            <para>The available type of sort orders are.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>None</term>\n            <description>The data source is not sorting.</description>\n            </item>\n            <item>\n            <term>Ascending</term>\n            <description>The data source is sorting with ascending order.</description>\n            </item>\n            <item>\n            <term>Descending</term>\n            <description>The data source is sorting with descending order.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortOrder"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            <para>Accepts the list items either through local or remote service and binds it to the component.</para>\n            <para>It can be an array of JSON Objects or an instance of `DataManager`.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            Accepts the external `Query` that execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"FilterType","TypeName":"Syncfusion.Blazor.DropDowns.FilterType","IsEnum":true,"Documentation":"\n            <summary>\n            Determines on which filter type, the component needs to be considered on search action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterType"}},{"Kind":"Components.Component","Name":"IgnoreCase","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>\n            <para>By default, consider the casing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreCase"}},{"Kind":"Components.Component","Name":"IgnoreAccent","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreAccent"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double","Documentation":"\n            <summary>\n            specifies the z-index value of the component popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>","Components.GenericTyped":"True"}},{"HashCode":961098129,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The DropDownList component contains a list of predefined values from which a single value can be chosen.\n            </summary>\n            <summary>\n            The DropDownList component contains a list of predefined values from which a single value can be chosen.\n            </summary>\n            <summary>\n            The DropDownList component contains a list of predefined values from which a single value can be chosen.\n            </summary>\n            <typeparam name=\"TValue\">Specifies the value type.</typeparam>\n            <typeparam name=\"TItem\">Specifies the type of SfDropDownList.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.SfDropDownList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the DropDownList component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When AllowFiltering is set to true, show the filter bar (search box) of the component.</para>\n            <para>The filter action retrieves matched items through the `Filtering` event based on the characters typed in the search TextBox.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the DropDownList. One or more custom CSS classes can be added to a DropDownList.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"FilterBarPlaceholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Accepts the value to be displayed as a watermark text on the filter bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterBarPlaceholder"}},{"Kind":"Components.Component","Name":"FloatLabelType","TypeName":"Syncfusion.Blazor.Inputs.FloatLabelType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the floating label behavior of the DropDownList that the placeholder text floats above the DropDownList based on the following values.\n            <para>Possible values are:</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Never</term>\n            <description>Never floats the label in the DropDownList when the placeholder is available.</description>\n            </item>\n            <item>\n            <term>Always</term>\n            <description>The floating label always floats above the DropDownList.</description>\n            </item>\n            <item>\n            <term>Auto</term>\n            <description>The floating label floats above the DropDownList after focusing it or when enters the value in it.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FloatLabelType"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the root element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the index of the selected item in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Index"}},{"Kind":"Components.Component","Name":"IndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32?>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the index changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IndexChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DropDownList. The property is depending on the FloatLabelType property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"PopupHeight","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the height of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupHeight"}},{"Kind":"Components.Component","Name":"PopupWidth","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the popup list. By default, the popup width sets based on the width of\n            the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupWidth"}},{"Kind":"Components.Component","Name":"Readonly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the boolean value whether the DropDownList allows the user to change the value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Readonly"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Specifies whether to show or hide the clear button.</para>\n            <para>When the clear button is clicked, `Value`, `Text`, and `Index` properties are reset to null.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"EnableVirtualization","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            The Virtual Scrolling feature is used to display a large amount of data that you require without buffering the entire load of a huge database records in the DropDowns, that is, when scrolling, the datamanager request is sent to fetch some amount of data from the server dynamically.\n            To achieve this scenario with DropDowns, set the EnableVirtualization to true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableVirtualization"}},{"Kind":"Components.Component","Name":"ItemsCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The data can be fetched in popup based on ItemsCount, when enabled the EnableVirtualization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemsCount"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the selected item in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            <para>Specifies the width of the component. By default, the component width sets based on the width of\n            its parent container.</para>\n            <para>You can also set the width in pixel values.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tab order of the DropDownList component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of input has changed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnInput","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input loses the focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input gets focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Enable or disable persisting component's state between page reloads.</para>\n            <para>If enabled,  the `Value` state will be persisted.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Value</term>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortOrder","TypeName":"Syncfusion.Blazor.DropDowns.SortOrder","IsEnum":true,"Documentation":"\n            <summary>\n            <para>Specifies the `SortOrder` to sort the data source.</para>\n            <para>The available type of sort orders are.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>None</term>\n            <description>The data source is not sorting.</description>\n            </item>\n            <item>\n            <term>Ascending</term>\n            <description>The data source is sorting with ascending order.</description>\n            </item>\n            <item>\n            <term>Descending</term>\n            <description>The data source is sorting with descending order.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortOrder"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            <para>Accepts the list items either through local or remote service and binds it to the component.</para>\n            <para>It can be an array of JSON Objects or an instance of `DataManager`.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            Accepts the external `Query` that execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"FilterType","TypeName":"Syncfusion.Blazor.DropDowns.FilterType","IsEnum":true,"Documentation":"\n            <summary>\n            Determines on which filter type, the component needs to be considered on search action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterType"}},{"Kind":"Components.Component","Name":"IgnoreCase","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>\n            <para>By default, consider the casing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreCase"}},{"Kind":"Components.Component","Name":"IgnoreAccent","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreAccent"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double","Documentation":"\n            <summary>\n            specifies the z-index value of the component popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1374281865,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.ChildContent","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfDropDownList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":833706673,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.ChildContent","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.DropDowns.SfDropDownList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1361410736,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.FooterTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"SfDropDownList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1994252863,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.FooterTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfDropDownList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1258468892,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"SfDropDownList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1588543840,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfDropDownList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1300450179,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.ValueTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValueTemplate","ParentTag":"SfDropDownList"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ValueTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.ValueTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1451105346,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.ValueTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValueTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfDropDownList"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ValueTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.ValueTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-660678626,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"SfDropDownList"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2012084884,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfDropDownList"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-92477503,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"SfDropDownList"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1813069771,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfDropDownList"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1690395604,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"SfDropDownList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-510314835,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfDropDownList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":942147165,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"SfDropDownList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":197660131,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfDropDownList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1863732350,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            ListBox component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.\n            It supports sorting, grouping, reordering and drag and drop of items.\n            </summary>\n            <summary>\n            ListBox component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.\n            It supports sorting, grouping, reordering and drag and drop of items.\n            </summary>\n            <summary>\n            ListBox component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.\n            It supports sorting, grouping, reordering and drag and drop of items.\n            </summary>\n            <summary>\n            ListBox component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.\n            It supports sorting, grouping, reordering and drag and drop of items.\n            </summary>\n            <summary>\n            ListBox component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.\n            It supports sorting, grouping, reordering and drag and drop of items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfListBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AllowDragAndDrop","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If 'allowDragAndDrop' is set to true, then you can perform drag and drop of the list item.\n            ListBox contains same 'scope' property enables drag and drop between multiple ListBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowDragAndDrop"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            To enable the filtering option in this component.\n            Filter action performs when type in search box and collect the matched item through `Filtering` event.\n            If searching character does not match, `noRecordsTemplate` property value will be shown.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the CSS classes to root element of this component, which helps to customize the\n            complete styles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"FilterBarPlaceholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Accepts the value to be displayed as a watermark text on the filter bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterBarPlaceholder"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the height of the ListBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"MaximumSelectionLength","TypeName":"System.Double","Documentation":"\n            <summary>\n            Sets limitation to the value selection.\n            based on the limitation, list selection will be prevented.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaximumSelectionLength"}},{"Kind":"Components.Component","Name":"Scope","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the connected ListBox reference to group sets of draggable and droppable ListBox.\n            A draggable ListBox with the scope reference will be accepted by the droppable.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Scope"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Sets the specified item to the selected state or gets the selected item in the ListBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional HTML attributes such as id, title etc., to the listbox element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Enable or disable persisting component's state between page reloads.</para>\n            <para>If enabled,  the `Value` state will be persisted.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Value</term>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortOrder","TypeName":"Syncfusion.Blazor.DropDowns.SortOrder","IsEnum":true,"Documentation":"\n            <summary>\n            <para>Specifies the `SortOrder` to sort the data source.</para>\n            <para>The available type of sort orders are.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>None</term>\n            <description>The data source is not sorting.</description>\n            </item>\n            <item>\n            <term>Ascending</term>\n            <description>The data source is sorting with ascending order.</description>\n            </item>\n            <item>\n            <term>Descending</term>\n            <description>The data source is sorting with descending order.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortOrder"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            <para>Accepts the list items either through local or remote service and binds it to the component.</para>\n            <para>It can be an array of JSON Objects or an instance of `DataManager`.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            Accepts the external `Query` that execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"FilterType","TypeName":"Syncfusion.Blazor.DropDowns.FilterType","IsEnum":true,"Documentation":"\n            <summary>\n            Determines on which filter type, the component needs to be considered on search action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterType"}},{"Kind":"Components.Component","Name":"IgnoreCase","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>\n            <para>By default, consider the casing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreCase"}},{"Kind":"Components.Component","Name":"IgnoreAccent","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreAccent"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double","Documentation":"\n            <summary>\n            specifies the z-index value of the component popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>","Components.GenericTyped":"True"}},{"HashCode":-542762507,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            ListBox component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.\n            It supports sorting, grouping, reordering and drag and drop of items.\n            </summary>\n            <summary>\n            ListBox component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.\n            It supports sorting, grouping, reordering and drag and drop of items.\n            </summary>\n            <summary>\n            ListBox component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.\n            It supports sorting, grouping, reordering and drag and drop of items.\n            </summary>\n            <summary>\n            ListBox component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.\n            It supports sorting, grouping, reordering and drag and drop of items.\n            </summary>\n            <summary>\n            ListBox component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.\n            It supports sorting, grouping, reordering and drag and drop of items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.SfListBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AllowDragAndDrop","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If 'allowDragAndDrop' is set to true, then you can perform drag and drop of the list item.\n            ListBox contains same 'scope' property enables drag and drop between multiple ListBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowDragAndDrop"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            To enable the filtering option in this component.\n            Filter action performs when type in search box and collect the matched item through `Filtering` event.\n            If searching character does not match, `noRecordsTemplate` property value will be shown.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the CSS classes to root element of this component, which helps to customize the\n            complete styles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"FilterBarPlaceholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Accepts the value to be displayed as a watermark text on the filter bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterBarPlaceholder"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the height of the ListBox component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"MaximumSelectionLength","TypeName":"System.Double","Documentation":"\n            <summary>\n            Sets limitation to the value selection.\n            based on the limitation, list selection will be prevented.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaximumSelectionLength"}},{"Kind":"Components.Component","Name":"Scope","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the connected ListBox reference to group sets of draggable and droppable ListBox.\n            A draggable ListBox with the scope reference will be accepted by the droppable.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Scope"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Sets the specified item to the selected state or gets the selected item in the ListBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional HTML attributes such as id, title etc., to the listbox element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Enable or disable persisting component's state between page reloads.</para>\n            <para>If enabled,  the `Value` state will be persisted.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Value</term>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortOrder","TypeName":"Syncfusion.Blazor.DropDowns.SortOrder","IsEnum":true,"Documentation":"\n            <summary>\n            <para>Specifies the `SortOrder` to sort the data source.</para>\n            <para>The available type of sort orders are.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>None</term>\n            <description>The data source is not sorting.</description>\n            </item>\n            <item>\n            <term>Ascending</term>\n            <description>The data source is sorting with ascending order.</description>\n            </item>\n            <item>\n            <term>Descending</term>\n            <description>The data source is sorting with descending order.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortOrder"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            <para>Accepts the list items either through local or remote service and binds it to the component.</para>\n            <para>It can be an array of JSON Objects or an instance of `DataManager`.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            Accepts the external `Query` that execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"FilterType","TypeName":"Syncfusion.Blazor.DropDowns.FilterType","IsEnum":true,"Documentation":"\n            <summary>\n            Determines on which filter type, the component needs to be considered on search action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterType"}},{"Kind":"Components.Component","Name":"IgnoreCase","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>\n            <para>By default, consider the casing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreCase"}},{"Kind":"Components.Component","Name":"IgnoreAccent","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreAccent"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double","Documentation":"\n            <summary>\n            specifies the z-index value of the component popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-874429911,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.ChildContent","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfListBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":154790241,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.ChildContent","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.DropDowns.SfListBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1808062845,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"SfListBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1930335306,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfListBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1595310651,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"SfListBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1203027455,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfListBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-950203064,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"SfListBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1811640115,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfListBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":468936927,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"SfListBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2080508807,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfListBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2061811153,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.ListBoxEvents<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the ListBox Events of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ListBoxEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.ListBoxEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.ListBoxEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnActionBegin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionBeginEventArgs>","Documentation":"\n            <summary>\n            Triggers before fetching data from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionBegin","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnActionComplete","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers after data is fetched successfully from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionComplete","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnActionFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDrop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.DropEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers before dropping the list item on another list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnDrop","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnItemRender","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.BeforeItemRenderEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers while rendering each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnItemRender","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ListBoxChangeEventArgs<TValue, TItem>>","Documentation":"\n            <summary>\n            Triggers while select / unselect the list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DragStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.DragEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers after dragging the list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DragStart","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Dropped","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.DragEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers before dropping the list item on another list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Dropped","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.FilteringEventArgs>","Documentation":"\n            <summary>\n            Triggers on typing a character in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSelected","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.ListBoxEvents<TValue, TItem>","Components.GenericTyped":"True"}},{"HashCode":-790456840,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.ListBoxEvents<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the ListBox Events of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.ListBoxEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.ListBoxEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.ListBoxEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnActionBegin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionBeginEventArgs>","Documentation":"\n            <summary>\n            Triggers before fetching data from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionBegin","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnActionComplete","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers after data is fetched successfully from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionComplete","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnActionFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDrop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.DropEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers before dropping the list item on another list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnDrop","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnItemRender","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.BeforeItemRenderEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers while rendering each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnItemRender","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ListBoxChangeEventArgs<TValue, TItem>>","Documentation":"\n            <summary>\n            Triggers while select / unselect the list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DragStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.DragEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers after dragging the list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DragStart","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Dropped","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.DragEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers before dropping the list item on another list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Dropped","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.FilteringEventArgs>","Documentation":"\n            <summary>\n            Triggers on typing a character in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSelected","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.ListBoxEvents<TValue, TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-850260293,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.ListBoxFieldSettings","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The Fields property maps the columns of the data table and binds the data to the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ListBoxFieldSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"GroupBy","TypeName":"System.String","Documentation":"\n            <summary>\n            Group the list items with it's related items by mapping groupBy field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupBy"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the list element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the icon class column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the text column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the value column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.ListBoxFieldSettings"}},{"HashCode":1358397718,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.ListBoxFieldSettings","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The Fields property maps the columns of the data table and binds the data to the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.ListBoxFieldSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"GroupBy","TypeName":"System.String","Documentation":"\n            <summary>\n            Group the list items with it's related items by mapping groupBy field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupBy"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the list element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the icon class column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the text column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the value column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.ListBoxFieldSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":948878431,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Defines the selection settings of List Box.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ListBoxSelectionSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CheckboxPosition","TypeName":"Syncfusion.Blazor.DropDowns.CheckBoxPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Set the position of the checkbox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CheckboxPosition"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"Syncfusion.Blazor.DropDowns.SelectionMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the selection modes. The possible values are\n             `Single`: Allows you to select a single item in the ListBox.\n             `Multiple`: Allows you to select more than one item in the ListBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"ShowCheckbox","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If 'showCheckbox' is set to true, then 'checkbox' will be visualized in the list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCheckbox"}},{"Kind":"Components.Component","Name":"ShowSelectAll","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows you to either show or hide the selectAll option on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowSelectAll"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings"}},{"HashCode":-508732230,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Defines the selection settings of List Box.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CheckboxPosition","TypeName":"Syncfusion.Blazor.DropDowns.CheckBoxPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Set the position of the checkbox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CheckboxPosition"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"Syncfusion.Blazor.DropDowns.SelectionMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the selection modes. The possible values are\n             `Single`: Allows you to select a single item in the ListBox.\n             `Multiple`: Allows you to select more than one item in the ListBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"ShowCheckbox","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If 'showCheckbox' is set to true, then 'checkbox' will be visualized in the list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCheckbox"}},{"Kind":"Components.Component","Name":"ShowSelectAll","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows you to either show or hide the selectAll option on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowSelectAll"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1517997947,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.ListBoxTemplates<TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Used to specify custom templates for rendering list in ListBox.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ListBoxTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.ListBoxTemplates<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the listbox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to listbox, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.ListBoxTemplates<TItem>","Components.GenericTyped":"True"}},{"HashCode":-775870516,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.ListBoxTemplates<TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Used to specify custom templates for rendering list in ListBox.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.ListBoxTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.ListBoxTemplates<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the listbox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to listbox, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.ListBoxTemplates<TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":204670412,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.ListBoxTemplates<TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the listbox.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"ListBoxTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.ListBoxTemplates<TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":209003732,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.ListBoxTemplates<TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the listbox.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.ListBoxTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.ListBoxTemplates<TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-300871266,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.ListBoxTemplates<TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to listbox, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"ListBoxTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.ListBoxTemplates<TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":193993908,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.ListBoxTemplates<TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to listbox, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.ListBoxTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.ListBoxTemplates<TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":81800155,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.ListBoxToolbarSettings","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Defines the ListBox tool bar settings.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ListBoxToolbarSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Items","TypeName":"System.String[]","Documentation":"\n            <summary>\n            Specifies the list of tools for dual ListBox.\n            The predefined tools are 'MoveUp', 'MoveDown', 'MoveTo', 'MoveFrom', 'MoveAllTo', and 'MoveAllFrom'.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.DropDowns.ToolBarPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions the toolbar before/after the ListBox.\n            The possible values are:\n            - Left: The toolbar will be positioned to the left of the ListBox.\n            - Right: The toolbar will be positioned to the right of the ListBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Position"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.ListBoxToolbarSettings"}},{"HashCode":-1892731715,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.ListBoxToolbarSettings","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Defines the ListBox tool bar settings.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.ListBoxToolbarSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Items","TypeName":"System.String[]","Documentation":"\n            <summary>\n            Specifies the list of tools for dual ListBox.\n            The predefined tools are 'MoveUp', 'MoveDown', 'MoveTo', 'MoveFrom', 'MoveAllTo', and 'MoveAllFrom'.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.DropDowns.ToolBarPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions the toolbar before/after the ListBox.\n            The possible values are:\n            - Left: The toolbar will be positioned to the left of the ListBox.\n            - Right: The toolbar will be positioned to the right of the ListBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Position"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.ListBoxToolbarSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1086891538,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.\n            </summary>\n            <summary>\n            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.\n            </summary>\n            <summary>\n            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.\n            </summary>\n            <summary>\n            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.\n            </summary>\n            <summary>\n            The MultiSelect component contains a list of predefined values from which a single value can be chosen.\n            </summary>\n            <summary>\n            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.\n            </summary>\n            <typeparam name=\"TValue\">Specifies the value type.</typeparam>\n            <typeparam name=\"TItem\">Specifies the type of SfMultiSelect.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfMultiSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the MultiSelect component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AllowCustomValue","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows user to add a\n            Custom value the value which is not present in the suggestion list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowCustomValue"}},{"Kind":"Components.Component","Name":"EnableVirtualization","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            The Virtual Scrolling feature is used to display a large amount of data that you require without buffering the entire load of a huge database records in the DropDowns, that is, when scrolling, the datamanager request is sent to fetch some amount of data from the server dynamically.\n            To achieve this scenario with DropDowns, set the EnableVirtualization to true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableVirtualization"}},{"Kind":"Components.Component","Name":"ItemsCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The data can be fetched in popup based on ItemsCount, when enabled the EnableVirtualization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemsCount"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>To enable the filtering option in this component.</para>\n            <para>Filter action performs when type in search box and collect the matched item through `Filtering` event.</para>\n            <para>If searching character does not match, `NoRecordsTemplate` property value will be shown.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"EnableChangeOnBlur","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>By default, the MultiSelect component fires the Change event while focus out the component.</para>\n            <para>If you want to fires the Change event on every value selection and remove, then disable the EnabledChangeOnBlur property.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableChangeOnBlur"}},{"Kind":"Components.Component","Name":"EnableCloseOnSelect","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Based on the property, when item get select popup visibility state will changed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableCloseOnSelect"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the MultiSelect. One or more custom CSS classes can be added to a MultiSelect.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"DelimiterChar","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the delimiter character for 'default' and 'delimiter' visibility modes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DelimiterChar"}},{"Kind":"Components.Component","Name":"EnableGroupCheckBox","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Specifies a boolean value that indicates the whether the grouped list items are\n            allowed to check by checking the group header in checkbox mode.</para>\n            <para>By default, there is no checkbox provided for group headers.</para>\n            <para>This property allows you to render checkbox for group headers and to select\n            all the grouped items at once.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableGroupCheckBox"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"EnableSelectionOrder","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Reorder the selected items in popup visibility state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableSelectionOrder"}},{"Kind":"Components.Component","Name":"FilterBarPlaceholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Accepts the value to be displayed as a watermark text on the filter bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterBarPlaceholder"}},{"Kind":"Components.Component","Name":"FloatLabelType","TypeName":"Syncfusion.Blazor.Inputs.FloatLabelType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the floating label behavior of the MultiSelect that the placeholder text floats above the MultiSelect based on the following values.\n            <para>Possible values are: </para>\n            <list type=\"bullet\">\n            <item>\n            <term>Never</term>\n            <description>Never floats the label in the MultiSelect when the placeholder is available.</description>\n            </item>\n            <item>\n            <term>Always</term>\n            <description>The floating label always floats above the MultiSelect.</description>\n            </item>\n            <item>\n            <term>Auto</term>\n            <description>The floating label floats above the MultiSelect after focusing it or when enters the value in it.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FloatLabelType"}},{"Kind":"Components.Component","Name":"HideSelectedItem","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Hides the selected item from the list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HideSelectedItem"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"MaximumSelectionLength","TypeName":"System.Int32","Documentation":"\n            <summary>\n            <para>Sets limitation to the value selection.</para>\n            <para>Based on the limitation, list selection will be prevented.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaximumSelectionLength"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"Syncfusion.Blazor.DropDowns.VisualMode","IsEnum":true,"Documentation":"\n            <summary>\n            configures visibility mode for component interaction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"OpenOnClick","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Whether to automatically open the popup when the control is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OpenOnClick"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in MultiSelect. The property is depending on the FloatLabelType property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"PopupHeight","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the height of the popup list. By default, it renders based on its list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupHeight"}},{"Kind":"Components.Component","Name":"PopupWidth","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the width of the popup list and percentage values has calculated based on input width.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupWidth"}},{"Kind":"Components.Component","Name":"Readonly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the boolean value whether the MultiSelect allows the user to change the value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Readonly"}},{"Kind":"Components.Component","Name":"SelectAllText","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the selectAllText to be displayed on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectAllText"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables close icon with the each selected item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"ShowDropDownIcon","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows you to either show or hide the DropDown button on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowDropDownIcon"}},{"Kind":"Components.Component","Name":"ShowSelectAll","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows you to either show or hide the selectAll option on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowSelectAll"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Selects the list item which maps the data `Text` field in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"UnSelectAllText","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the UnSelectAllText to be displayed on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"UnSelectAllText"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Selects the list item which maps the data `Value` field in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the width of the component. By default, it sizes based on its parent.\n            container dimension.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tab order of the DropDownList component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnKeyUp","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of input has changed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnInput","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input loses the focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input gets focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Enable or disable persisting component's state between page reloads.</para>\n            <para>If enabled,  the `Value` state will be persisted.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Value</term>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortOrder","TypeName":"Syncfusion.Blazor.DropDowns.SortOrder","IsEnum":true,"Documentation":"\n            <summary>\n            <para>Specifies the `SortOrder` to sort the data source.</para>\n            <para>The available type of sort orders are.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>None</term>\n            <description>The data source is not sorting.</description>\n            </item>\n            <item>\n            <term>Ascending</term>\n            <description>The data source is sorting with ascending order.</description>\n            </item>\n            <item>\n            <term>Descending</term>\n            <description>The data source is sorting with descending order.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortOrder"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            <para>Accepts the list items either through local or remote service and binds it to the component.</para>\n            <para>It can be an array of JSON Objects or an instance of `DataManager`.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            Accepts the external `Query` that execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"FilterType","TypeName":"Syncfusion.Blazor.DropDowns.FilterType","IsEnum":true,"Documentation":"\n            <summary>\n            Determines on which filter type, the component needs to be considered on search action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterType"}},{"Kind":"Components.Component","Name":"IgnoreCase","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>\n            <para>By default, consider the casing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreCase"}},{"Kind":"Components.Component","Name":"IgnoreAccent","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreAccent"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double","Documentation":"\n            <summary>\n            specifies the z-index value of the component popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>","Components.GenericTyped":"True"}},{"HashCode":1779703873,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.\n            </summary>\n            <summary>\n            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.\n            </summary>\n            <summary>\n            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.\n            </summary>\n            <summary>\n            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.\n            </summary>\n            <summary>\n            The MultiSelect component contains a list of predefined values from which a single value can be chosen.\n            </summary>\n            <summary>\n            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.\n            </summary>\n            <typeparam name=\"TValue\">Specifies the value type.</typeparam>\n            <typeparam name=\"TItem\">Specifies the type of SfMultiSelect.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.SfMultiSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id of the MultiSelect component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the expression for defining the value of the bound.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AllowCustomValue","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows user to add a\n            Custom value the value which is not present in the suggestion list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowCustomValue"}},{"Kind":"Components.Component","Name":"EnableVirtualization","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            The Virtual Scrolling feature is used to display a large amount of data that you require without buffering the entire load of a huge database records in the DropDowns, that is, when scrolling, the datamanager request is sent to fetch some amount of data from the server dynamically.\n            To achieve this scenario with DropDowns, set the EnableVirtualization to true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableVirtualization"}},{"Kind":"Components.Component","Name":"ItemsCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The data can be fetched in popup based on ItemsCount, when enabled the EnableVirtualization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemsCount"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>To enable the filtering option in this component.</para>\n            <para>Filter action performs when type in search box and collect the matched item through `Filtering` event.</para>\n            <para>If searching character does not match, `NoRecordsTemplate` property value will be shown.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"EnableChangeOnBlur","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>By default, the MultiSelect component fires the Change event while focus out the component.</para>\n            <para>If you want to fires the Change event on every value selection and remove, then disable the EnabledChangeOnBlur property.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableChangeOnBlur"}},{"Kind":"Components.Component","Name":"EnableCloseOnSelect","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Based on the property, when item get select popup visibility state will changed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableCloseOnSelect"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the MultiSelect. One or more custom CSS classes can be added to a MultiSelect.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"DelimiterChar","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the delimiter character for 'default' and 'delimiter' visibility modes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DelimiterChar"}},{"Kind":"Components.Component","Name":"EnableGroupCheckBox","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Specifies a boolean value that indicates the whether the grouped list items are\n            allowed to check by checking the group header in checkbox mode.</para>\n            <para>By default, there is no checkbox provided for group headers.</para>\n            <para>This property allows you to render checkbox for group headers and to select\n            all the grouped items at once.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableGroupCheckBox"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"EnableSelectionOrder","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Reorder the selected items in popup visibility state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableSelectionOrder"}},{"Kind":"Components.Component","Name":"FilterBarPlaceholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Accepts the value to be displayed as a watermark text on the filter bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterBarPlaceholder"}},{"Kind":"Components.Component","Name":"FloatLabelType","TypeName":"Syncfusion.Blazor.Inputs.FloatLabelType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the floating label behavior of the MultiSelect that the placeholder text floats above the MultiSelect based on the following values.\n            <para>Possible values are: </para>\n            <list type=\"bullet\">\n            <item>\n            <term>Never</term>\n            <description>Never floats the label in the MultiSelect when the placeholder is available.</description>\n            </item>\n            <item>\n            <term>Always</term>\n            <description>The floating label always floats above the MultiSelect.</description>\n            </item>\n            <item>\n            <term>Auto</term>\n            <description>The floating label floats above the MultiSelect after focusing it or when enters the value in it.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FloatLabelType"}},{"Kind":"Components.Component","Name":"HideSelectedItem","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Hides the selected item from the list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HideSelectedItem"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"MaximumSelectionLength","TypeName":"System.Int32","Documentation":"\n            <summary>\n            <para>Sets limitation to the value selection.</para>\n            <para>Based on the limitation, list selection will be prevented.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaximumSelectionLength"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"Syncfusion.Blazor.DropDowns.VisualMode","IsEnum":true,"Documentation":"\n            <summary>\n            configures visibility mode for component interaction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"OpenOnClick","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Whether to automatically open the popup when the control is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OpenOnClick"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in MultiSelect. The property is depending on the FloatLabelType property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"PopupHeight","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the height of the popup list. By default, it renders based on its list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupHeight"}},{"Kind":"Components.Component","Name":"PopupWidth","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the width of the popup list and percentage values has calculated based on input width.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupWidth"}},{"Kind":"Components.Component","Name":"Readonly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the boolean value whether the MultiSelect allows the user to change the value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Readonly"}},{"Kind":"Components.Component","Name":"SelectAllText","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the selectAllText to be displayed on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectAllText"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables close icon with the each selected item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"ShowDropDownIcon","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows you to either show or hide the DropDown button on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowDropDownIcon"}},{"Kind":"Components.Component","Name":"ShowSelectAll","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows you to either show or hide the selectAll option on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowSelectAll"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Selects the list item which maps the data `Text` field in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"UnSelectAllText","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the UnSelectAllText to be displayed on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"UnSelectAllText"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Selects the list item which maps the data `Value` field in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the value changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the width of the component. By default, it sizes based on its parent.\n            container dimension.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tab order of the DropDownList component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"\n            <summary>\n            Triggers when the content of input has changed and gets focus-out.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnKeyUp","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers each time when the value of input has changed.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnInput","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input loses the focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnBlur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"\n            <summary>\n            Triggers when the input gets focus.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"OnFocus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Enable or disable persisting component's state between page reloads.</para>\n            <para>If enabled,  the `Value` state will be persisted.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Value</term>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortOrder","TypeName":"Syncfusion.Blazor.DropDowns.SortOrder","IsEnum":true,"Documentation":"\n            <summary>\n            <para>Specifies the `SortOrder` to sort the data source.</para>\n            <para>The available type of sort orders are.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>None</term>\n            <description>The data source is not sorting.</description>\n            </item>\n            <item>\n            <term>Ascending</term>\n            <description>The data source is sorting with ascending order.</description>\n            </item>\n            <item>\n            <term>Descending</term>\n            <description>The data source is sorting with descending order.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortOrder"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            <para>Accepts the list items either through local or remote service and binds it to the component.</para>\n            <para>It can be an array of JSON Objects or an instance of `DataManager`.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            Accepts the external `Query` that execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"FilterType","TypeName":"Syncfusion.Blazor.DropDowns.FilterType","IsEnum":true,"Documentation":"\n            <summary>\n            Determines on which filter type, the component needs to be considered on search action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterType"}},{"Kind":"Components.Component","Name":"IgnoreCase","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>\n            <para>By default, consider the casing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreCase"}},{"Kind":"Components.Component","Name":"IgnoreAccent","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreAccent"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double","Documentation":"\n            <summary>\n            specifies the z-index value of the component popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2057054727,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.ChildContent","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1291506139,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.ChildContent","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the content that has to be passed.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.DropDowns.SfMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-715536814,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.ValueTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValueTemplate","ParentTag":"SfMultiSelect"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ValueTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.ValueTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1404208434,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.ValueTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValueTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfMultiSelect"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ValueTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.ValueTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":35824486,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.FooterTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"SfMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1881865400,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.FooterTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1321539873,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"SfMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1034263050,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-100784497,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"SfMultiSelect"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":338618060,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfMultiSelect"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":957446467,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"SfMultiSelect"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1924089072,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfMultiSelect"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1736698838,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"SfMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1191664320,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-353404399,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"SfMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1758203576,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.SfMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2109952501,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.MultiSelectEvents<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the MultiSelect Events of the component.\n            </summary>\n            <typeparam name=\"TValue\">Specifies the value type.</typeparam>\n            <typeparam name=\"TItem\">Specifies the type of MultiSelectEvents.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MultiSelectEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.MultiSelectEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.MultiSelectEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnActionBegin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionBeginEventArgs>","Documentation":"\n            <summary>\n            Triggers before fetching data from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionBegin","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnActionComplete","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers after data is fetched successfully from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionComplete","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnActionFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Exception>","Documentation":"\n            <summary>\n            Triggers when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.BeforeOpenEventArgs>","Documentation":"\n            <summary>\n            Fires when popup opens before animation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Blur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Event triggers when the input get focus-out.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Blur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs<TValue>>","Documentation":"\n            <summary>\n            Fires each time when selection changes happened in list items after model and input value get affected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChipSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ChipSelectedEventArgs<TItem>>","Documentation":"\n            <summary>\n            Event triggers when the chip selection.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipSelected","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.PopupEventArgs>","Documentation":"\n            <summary>\n            Triggers before the popup is closed. If you cancel this event, the popup remains opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CustomValueSpecifier","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.CustomValueEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers when the CustomValue is selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomValueSpecifier","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DataBound","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.DataBoundEventArgs>","Documentation":"\n            <summary>\n            Triggers when data source is populated in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataBound","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Filtering","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.FilteringEventArgs>","Documentation":"\n            <summary>\n            Triggers event,when user types a text in search box.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Filtering","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Focus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Event triggers when the input get focused.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Focus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.PopupEventArgs>","Documentation":"\n            <summary>\n            Fires when popup opens after animation completion.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ClosedEventArgs>","Documentation":"\n            <summary>\n            Triggers after the popup has been closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueRemoved","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.RemoveEventArgs<TItem>>","Documentation":"\n            <summary>\n            Fires after the selected item removed from the widget.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueRemoved","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnValueRemove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.RemoveEventArgs<TItem>>","Documentation":"\n            <summary>\n            Fires before the selected item removed from the widget.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValueRemove","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnValueSelect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.SelectEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValueSelect","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedAll","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.SelectAllEventArgs<TItem>>","Documentation":"\n            <summary>\n            Fires after select all process completion.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedAll","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Cleared","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Fires after cleared all item using clear icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Cleared","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnChipTag","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.TaggingEventArgs<TItem>>","Documentation":"\n            <summary>\n            Fires before set the selected item as chip in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChipTag","Components.EventCallback":"True","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectEvents<TValue, TItem>","Components.GenericTyped":"True"}},{"HashCode":903357727,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.MultiSelectEvents<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Specifies the MultiSelect Events of the component.\n            </summary>\n            <typeparam name=\"TValue\">Specifies the value type.</typeparam>\n            <typeparam name=\"TItem\">Specifies the type of MultiSelectEvents.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.MultiSelectEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.DropDowns.MultiSelectEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.MultiSelectEvents<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnActionBegin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionBeginEventArgs>","Documentation":"\n            <summary>\n            Triggers before fetching data from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionBegin","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnActionComplete","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers after data is fetched successfully from the remote server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionComplete","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnActionFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Exception>","Documentation":"\n            <summary>\n            Triggers when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.BeforeOpenEventArgs>","Documentation":"\n            <summary>\n            Fires when popup opens before animation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Blur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Event triggers when the input get focus-out.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Blur","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs<TValue>>","Documentation":"\n            <summary>\n            Fires each time when selection changes happened in list items after model and input value get affected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChipSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ChipSelectedEventArgs<TItem>>","Documentation":"\n            <summary>\n            Event triggers when the chip selection.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipSelected","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.PopupEventArgs>","Documentation":"\n            <summary>\n            Triggers before the popup is closed. If you cancel this event, the popup remains opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CustomValueSpecifier","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.CustomValueEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers when the CustomValue is selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomValueSpecifier","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DataBound","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.DataBoundEventArgs>","Documentation":"\n            <summary>\n            Triggers when data source is populated in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataBound","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Filtering","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.FilteringEventArgs>","Documentation":"\n            <summary>\n            Triggers event,when user types a text in search box.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Filtering","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Focus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Event triggers when the input get focused.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Focus","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.PopupEventArgs>","Documentation":"\n            <summary>\n            Fires when popup opens after animation completion.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.ClosedEventArgs>","Documentation":"\n            <summary>\n            Triggers after the popup has been closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueRemoved","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.RemoveEventArgs<TItem>>","Documentation":"\n            <summary>\n            Fires after the selected item removed from the widget.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueRemoved","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnValueRemove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.RemoveEventArgs<TItem>>","Documentation":"\n            <summary>\n            Fires before the selected item removed from the widget.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValueRemove","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnValueSelect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.SelectEventArgs<TItem>>","Documentation":"\n            <summary>\n            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValueSelect","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedAll","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.SelectAllEventArgs<TItem>>","Documentation":"\n            <summary>\n            Fires after select all process completion.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedAll","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Cleared","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Fires after cleared all item using clear icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Cleared","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnChipTag","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DropDowns.TaggingEventArgs<TItem>>","Documentation":"\n            <summary>\n            Fires before set the selected item as chip in the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChipTag","Components.EventCallback":"True","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectEvents<TValue, TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2030806631,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The Fields property maps the columns of the data table and binds the data to the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MultiSelectFieldSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"GroupBy","TypeName":"System.String","Documentation":"\n            <summary>\n            Group the list items with it's related items by mapping groupBy field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupBy"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the list element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the icon class column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the text column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the value column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings"}},{"HashCode":220257860,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The Fields property maps the columns of the data table and binds the data to the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"GroupBy","TypeName":"System.String","Documentation":"\n            <summary>\n            Group the list items with it's related items by mapping groupBy field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupBy"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            You can add the additional html attributes such as styles, class, and more to the list element.\n            If you configured both property and equivalent html attributes, then the component considers the property value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the icon class column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the text column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Maps the value column from data table for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-184010312,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The MulitSelect has been provided with several options to customize each list item, group title, selected value, header, and footer elements.\n            </summary>\n            <typeparam name=\"TItem\">Specifies the type of MultiSelectTemplates.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MultiSelectTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ValueTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>","Components.GenericTyped":"True"}},{"HashCode":1380522955,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The MulitSelect has been provided with several options to customize each list item, group title, selected value, header, and footer elements.\n            </summary>\n            <typeparam name=\"TItem\">Specifies the type of MultiSelectTemplates.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ValueTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1253436669,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.ValueTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValueTemplate","ParentTag":"MultiSelectTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ValueTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.ValueTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":963773793,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.ValueTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the selected list item in the input element of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValueTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ValueTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.ValueTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1949220670,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.FooterTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"MultiSelectTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":782902434,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.FooterTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1314405127,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"MultiSelectTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":405369085,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":123580871,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"MultiSelectTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-957774660,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":753545496,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MultiSelectTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1210505298,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1000073599,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"MultiSelectTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1423397788,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":910771960,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"MultiSelectTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-211969321,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.MultiSelectTemplates<TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-13751498,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns._Imports","AssemblyName":"Syncfusion.Blazor.DropDowns","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns._Imports"}},{"HashCode":1426187085,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns._Imports","AssemblyName":"Syncfusion.Blazor.DropDowns","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns._Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns._Imports","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1611263983,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The DropDowns has been provided with several options to customize each list item, group title, header, and footer elements.\n            </summary>\n            <typeparam name=\"TItem\">Specifies the type of DropDownsTemplates.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DropDownsTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>","Components.GenericTyped":"True"}},{"HashCode":-130768463,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            The DropDowns has been provided with several options to customize each list item, group title, header, and footer elements.\n            </summary>\n            <typeparam name=\"TItem\">Specifies the type of DropDownsTemplates.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1753141464,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.FooterTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"DropDownsTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1941511848,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.FooterTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the footer container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.FooterTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":573190093,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"DropDownsTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1307894758,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the header container of the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":673713304,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"DropDownsTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2031795143,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":169604142,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"DropDownsTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-489108760,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-138370517,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"DropDownsTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":393062420,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1334583062,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"DropDownsTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1456860456,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates<TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2118487773,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecord"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"IsFaiure","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            IsActionFaiure set to true, then the action failure template is show in popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsFaiure"}},{"Kind":"Components.Component","Name":"LocaleKey","TypeName":"System.String","Documentation":"\n            <summary>\n            Get the no record locale key for dropdowns component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LocaleKey"}},{"Kind":"Components.Component","Name":"FailureLocaleKey","TypeName":"System.String","Documentation":"\n            <summary>\n            Get the action failure locale key for dropdowns component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FailureLocaleKey"}},{"Kind":"Components.Component","Name":"LocaleValue","TypeName":"System.String","Documentation":"\n            <summary>\n            Get the no record locale value for dropdowns component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LocaleValue"}},{"Kind":"Components.Component","Name":"FailureLocaleValue","TypeName":"System.String","Documentation":"\n            <summary>\n            Get the action failure locale value for dropdowns component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FailureLocaleValue"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Enable or disable persisting component's state between page reloads.</para>\n            <para>If enabled,  the `Value` state will be persisted.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Value</term>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortOrder","TypeName":"Syncfusion.Blazor.DropDowns.SortOrder","IsEnum":true,"Documentation":"\n            <summary>\n            <para>Specifies the `SortOrder` to sort the data source.</para>\n            <para>The available type of sort orders are.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>None</term>\n            <description>The data source is not sorting.</description>\n            </item>\n            <item>\n            <term>Ascending</term>\n            <description>The data source is sorting with ascending order.</description>\n            </item>\n            <item>\n            <term>Descending</term>\n            <description>The data source is sorting with descending order.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortOrder"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            <para>Accepts the list items either through local or remote service and binds it to the component.</para>\n            <para>It can be an array of JSON Objects or an instance of `DataManager`.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            Accepts the external `Query` that execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"FilterType","TypeName":"Syncfusion.Blazor.DropDowns.FilterType","IsEnum":true,"Documentation":"\n            <summary>\n            Determines on which filter type, the component needs to be considered on search action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterType"}},{"Kind":"Components.Component","Name":"IgnoreCase","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>\n            <para>By default, consider the casing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreCase"}},{"Kind":"Components.Component","Name":"IgnoreAccent","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreAccent"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double","Documentation":"\n            <summary>\n            specifies the z-index value of the component popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>","Components.GenericTyped":"True"}},{"HashCode":-368650765,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.Internal.NoRecord"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"IsFaiure","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            IsActionFaiure set to true, then the action failure template is show in popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsFaiure"}},{"Kind":"Components.Component","Name":"LocaleKey","TypeName":"System.String","Documentation":"\n            <summary>\n            Get the no record locale key for dropdowns component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LocaleKey"}},{"Kind":"Components.Component","Name":"FailureLocaleKey","TypeName":"System.String","Documentation":"\n            <summary>\n            Get the action failure locale key for dropdowns component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FailureLocaleKey"}},{"Kind":"Components.Component","Name":"LocaleValue","TypeName":"System.String","Documentation":"\n            <summary>\n            Get the no record locale value for dropdowns component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LocaleValue"}},{"Kind":"Components.Component","Name":"FailureLocaleValue","TypeName":"System.String","Documentation":"\n            <summary>\n            Get the action failure locale value for dropdowns component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FailureLocaleValue"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>Enable or disable persisting component's state between page reloads.</para>\n            <para>If enabled,  the `Value` state will be persisted.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>Value</term>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.DropDowns.ComposedItemModel<TItem>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NoRecordsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoRecordsTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActionFailureTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionFailureTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortOrder","TypeName":"Syncfusion.Blazor.DropDowns.SortOrder","IsEnum":true,"Documentation":"\n            <summary>\n            <para>Specifies the `SortOrder` to sort the data source.</para>\n            <para>The available type of sort orders are.</para>\n            <list type=\"bullet\">\n            <item>\n            <term>None</term>\n            <description>The data source is not sorting.</description>\n            </item>\n            <item>\n            <term>Ascending</term>\n            <description>The data source is sorting with ascending order.</description>\n            </item>\n            <item>\n            <term>Descending</term>\n            <description>The data source is sorting with descending order.</description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortOrder"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a boolean value that indicates whether the component allows the user to interact with it.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            <para>Accepts the list items either through local or remote service and binds it to the component.</para>\n            <para>It can be an array of JSON Objects or an instance of `DataManager`.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            Accepts the external `Query` that execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"FilterType","TypeName":"Syncfusion.Blazor.DropDowns.FilterType","IsEnum":true,"Documentation":"\n            <summary>\n            Determines on which filter type, the component needs to be considered on search action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterType"}},{"Kind":"Components.Component","Name":"IgnoreCase","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>\n            <para>By default, consider the casing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreCase"}},{"Kind":"Components.Component","Name":"IgnoreAccent","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IgnoreAccent"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double","Documentation":"\n            <summary>\n            specifies the z-index value of the component popup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1133145730,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"NoRecord"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1176129707,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>.ItemTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to each list item present in the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.Internal.NoRecord"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1954349389,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"NoRecord"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1610899170,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the popup list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.Internal.NoRecord"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1256934534,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"NoRecord"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1453476179,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>.NoRecordsTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to popup list of component, when no data is available on the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoRecordsTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.Internal.NoRecord"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>.NoRecordsTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":573212799,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"NoRecord"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1466299659,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>.ActionFailureTemplate","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"\n            <summary>\n            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionFailureTemplate","ParentTag":"Syncfusion.Blazor.DropDowns.Internal.NoRecord"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DropDowns.Internal.NoRecord<TItem>.ActionFailureTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2004724616,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.AccordionAnimationCollapse","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the animation to appear while collapsing the Accordion item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccordionAnimationCollapse"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time duration to transform content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied when transforming the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}},{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.AnimationEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation effect for collapsing the Accordion item.\n            Default animation is given as SlideUp for collapsing accordion animation. You can also disable the animation by setting the animation effect as none.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionAnimationCollapse"}},{"HashCode":197204410,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.AccordionAnimationCollapse","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the animation to appear while collapsing the Accordion item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.AccordionAnimationCollapse"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time duration to transform content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied when transforming the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}},{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.AnimationEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation effect for collapsing the Accordion item.\n            Default animation is given as SlideUp for collapsing accordion animation. You can also disable the animation by setting the animation effect as none.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionAnimationCollapse","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1608373690,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.AccordionAnimationExpand","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the animation to appear while expanding the Accordion item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccordionAnimationExpand"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time duration to transform content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied when transforming the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}},{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.AnimationEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation effect for expanding the Accordion item.\n            Default animation is given as SlideDown for expanding accordion animation. You can also disable the animation by setting the animation effect as none.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionAnimationExpand"}},{"HashCode":1406234958,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.AccordionAnimationExpand","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the animation to appear while expanding the Accordion item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.AccordionAnimationExpand"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time duration to transform content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied when transforming the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}},{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.AnimationEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation effect for expanding the Accordion item.\n            Default animation is given as SlideDown for expanding accordion animation. You can also disable the animation by setting the animation effect as none.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionAnimationExpand","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":102858247,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.AccordionAnimationSettings","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            A class used for configuring the Accordion animation properties.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccordionAnimationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for the Accordion Animation Settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionAnimationSettings"}},{"HashCode":-335691945,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.AccordionAnimationSettings","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            A class used for configuring the Accordion animation properties.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.AccordionAnimationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for the Accordion Animation Settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionAnimationSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1211227024,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.AccordionAnimationSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for the Accordion Animation Settings.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccordionAnimationSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionAnimationSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-615541696,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.AccordionAnimationSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for the Accordion Animation Settings.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.AccordionAnimationSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionAnimationSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":222328740,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.AccordionEvents","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Configure event handlers to handle the events with the Accordion component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccordionEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Clicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.AccordionClickArgs>","Documentation":"\n            <summary>\n            The event triggers when clicking anywhere within the Accordion.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Clicked","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            The event triggers once the control rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            The event triggers when the control gets destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.ExpandedEventArgs>","Documentation":"\n            <summary>\n            The event triggers after the item gets expanded.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Expanded","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Expanding","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.ExpandEventArgs>","Documentation":"\n            <summary>\n            The event triggers before the item gets expanded.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Expanding","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Collapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.CollapsedEventArgs>","Documentation":"\n            <summary>\n            The event triggers after the item gets collapsed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Collapsed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Collapsing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.CollapseEventArgs>","Documentation":"\n            <summary>\n            The event triggers before the item gets collapsed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Collapsing","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionEvents"}},{"HashCode":-2121734904,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.AccordionEvents","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Configure event handlers to handle the events with the Accordion component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.AccordionEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Clicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.AccordionClickArgs>","Documentation":"\n            <summary>\n            The event triggers when clicking anywhere within the Accordion.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Clicked","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            The event triggers once the control rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            The event triggers when the control gets destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.ExpandedEventArgs>","Documentation":"\n            <summary>\n            The event triggers after the item gets expanded.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Expanded","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Expanding","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.ExpandEventArgs>","Documentation":"\n            <summary>\n            The event triggers before the item gets expanded.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Expanding","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Collapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.CollapsedEventArgs>","Documentation":"\n            <summary>\n            The event triggers after the item gets collapsed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Collapsed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Collapsing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.CollapseEventArgs>","Documentation":"\n            <summary>\n            The event triggers before the item gets collapsed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Collapsing","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionEvents","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-486516297,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.AccordionItem","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Defines accordion panels.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccordionItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for the Accordion item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sets the header to be displayed for the Accordion item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sets the content to be displayed for the Accordion item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContentTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the text content to be displayed for the Accordion item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the single/multiple classes (separated by a space) that should be used for Accordion item customization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the accordion item is disabled or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specify a Boolean value that indicates whether the accordion panel is expanded or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Expanded"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the header text to be displayed for the Accordion item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines an icon with the given custom CSS class that is to be rendered before the header text.\n            Add the css classes to the `IconCss` property and write the css styles to the defined class to set the images/icons.\n            Adding icon is applicable only to the header.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a Boolean value that indicates whether the accordion item is visible or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets Id attribute for accordion item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback of the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandedChanged","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionItem"}},{"HashCode":1969159757,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.AccordionItem","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Defines accordion panels.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.AccordionItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for the Accordion item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sets the header to be displayed for the Accordion item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sets the content to be displayed for the Accordion item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContentTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the text content to be displayed for the Accordion item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the single/multiple classes (separated by a space) that should be used for Accordion item customization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the accordion item is disabled or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specify a Boolean value that indicates whether the accordion panel is expanded or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Expanded"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the header text to be displayed for the Accordion item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines an icon with the given custom CSS class that is to be rendered before the header text.\n            Add the css classes to the `IconCss` property and write the css styles to the defined class to set the images/icons.\n            Adding icon is applicable only to the header.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a Boolean value that indicates whether the accordion item is visible or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets Id attribute for accordion item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback of the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandedChanged","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1896093856,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.AccordionItem.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for the Accordion item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccordionItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-82352081,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.AccordionItem.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for the Accordion item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.AccordionItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-529587262,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.AccordionItem.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Sets the header to be displayed for the Accordion item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"AccordionItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionItem.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":345119298,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.AccordionItem.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Sets the header to be displayed for the Accordion item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Syncfusion.Blazor.Navigations.AccordionItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionItem.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1671304841,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.AccordionItem.ContentTemplate","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Sets the content to be displayed for the Accordion item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"AccordionItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionItem.ContentTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":731241740,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.AccordionItem.ContentTemplate","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Sets the content to be displayed for the Accordion item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"Syncfusion.Blazor.Navigations.AccordionItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionItem.ContentTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1776218559,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.AccordionItems","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            A list of items that are used to configure the Accordion component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccordionItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for the Accordion items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionItems"}},{"HashCode":286659667,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.AccordionItems","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            A list of items that are used to configure the Accordion component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.AccordionItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for the Accordion items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionItems","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":942104316,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.AccordionItems.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for the Accordion items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccordionItems"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionItems.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1679899827,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.AccordionItems.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for the Accordion items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.AccordionItems"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionItems.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1951416722,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.SfAccordion","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Accordion is a vertically collapsible panel that displays one or more panels at a time.\n            </summary>\n            <summary>\n            Accordion is a vertically collapsible panel that displays one or more panels at a time.\n            </summary>\n            <summary>\n            Accordion is a vertically collapsible panel that displays one or more panels at a time.\n            </summary>\n            <summary>\n            Accordion is a vertically collapsible panel that displays one or more panels at a time.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfAccordion"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets ID attribute for the accordion element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for Accordion.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"LoadOnDemand","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable content of all the accordion are rendered on the initial load and maintained in the DOM.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LoadOnDemand"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"ExpandMode","TypeName":"Syncfusion.Blazor.Navigations.ExpandMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the options to expand a single or multiple panels at a time.\n            The possible values are:\n            - Single: Sets to expand only one Accordion item at a time.\n            - Multiple: Sets to expand more than one Accordion item at a time.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandMode"}},{"Kind":"Components.Component","Name":"ExpandedIndices","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Specifies the index of items that is expanded on the initial load.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandedIndices"}},{"Kind":"Components.Component","Name":"ExpandedIndicesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32[]>","Documentation":"\n            <summary>\n            Gets or sets a callback of the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandedIndicesChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the height of the Accordion that can be represented in pixels/percentage.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the Accordion that can be represented as pixels/percentage.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the html attributes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.SfAccordion"}},{"HashCode":-2083925643,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.SfAccordion","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Accordion is a vertically collapsible panel that displays one or more panels at a time.\n            </summary>\n            <summary>\n            Accordion is a vertically collapsible panel that displays one or more panels at a time.\n            </summary>\n            <summary>\n            Accordion is a vertically collapsible panel that displays one or more panels at a time.\n            </summary>\n            <summary>\n            Accordion is a vertically collapsible panel that displays one or more panels at a time.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.SfAccordion"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets ID attribute for the accordion element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for Accordion.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"LoadOnDemand","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable content of all the accordion are rendered on the initial load and maintained in the DOM.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LoadOnDemand"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"ExpandMode","TypeName":"Syncfusion.Blazor.Navigations.ExpandMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the options to expand a single or multiple panels at a time.\n            The possible values are:\n            - Single: Sets to expand only one Accordion item at a time.\n            - Multiple: Sets to expand more than one Accordion item at a time.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandMode"}},{"Kind":"Components.Component","Name":"ExpandedIndices","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Specifies the index of items that is expanded on the initial load.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandedIndices"}},{"Kind":"Components.Component","Name":"ExpandedIndicesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32[]>","Documentation":"\n            <summary>\n            Gets or sets a callback of the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandedIndicesChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the height of the Accordion that can be represented in pixels/percentage.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the Accordion that can be represented as pixels/percentage.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the html attributes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.SfAccordion","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1273062344,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.SfAccordion.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for Accordion.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfAccordion"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.SfAccordion.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1674020848,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.SfAccordion.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for Accordion.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.SfAccordion"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.SfAccordion.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":653569411,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.BreadcrumbItem","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            A class that represents breadcrumb component item of <see cref=\"T:Syncfusion.Blazor.Navigations.SfBreadcrumb\" /> component.\n            </summary>\n            <remarks>\n            You can render icon only, text only, icon and text breadcrumb item by specifying value to corresponding property.\n            Additional attributes can be added to Breadcrumb item using <c>@attributes</c> directive.\n            </remarks>\n            <example>\n            In the below code example, a basic Breadcrumb item has been added using <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> tag directive.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\" Url=\"https://blazor.syncfusion.com/demos/\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\" Url=\"https://blazor.syncfusion.com/demos/datagrid/overview\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\" Url=\"https://blazor.syncfusion.com/demos/menu-bar/default-functionalities\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Breadcrumb\" Url=\"https://blazor.syncfusion.com/demos/breadcrumb/default-functionalities\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BreadcrumbItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content for the Breadcrumb item. If the child content is not specified breadcrumb item is rendered using <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Text\" /> content.\n            </summary>\n            <value>\n            The template content. The default value in <c>null</c>.\n            </value>\n            <example>\n            In the below code example, content has been set to <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> using <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Text\" /> property and <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbItem.ChildContent\" /> property.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem><span>Components</span></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the text content of the Breadcrumb item.\n            </summary>\n            <value>\n            Accepts a string value. The default value is <c>String.Empty</c>.\n            </value>\n            <remarks>\n            Set child content within <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> tag directive, to render as HTML content.\n            </remarks>\n            <example>\n            In the below code example, content has been set to <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> using <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Text\" /> property and <c>ChildContent</c> property.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem>Home</BreadcrumbItem>\n                    <BreadcrumbItem><span>Components</span></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the Url of the Breadcrumb item and that will be navigated when clicked.\n            </summary>\n            <value>\n            Accepts Url string value. The default value is <c>String.Empty</c>.\n            </value>\n            <remarks>\n            When Url has not been set, you can customize the item navigation using <see cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ItemClicked\" /> event.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfBreadcrumb\">\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\" Url=\"https://blazor.syncfusion.com/demos/\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\" Url=\"https://blazor.syncfusion.com/demos/datagrid/overview\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\" Url=\"https://blazor.syncfusion.com/demos/menu-bar/default-functionalities\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"Url"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a CSS class string to include an icon or image for the breadcrumb item. \n            </summary>\n            <value>\n            Accepts a CSS class string separated by space to include an icon or image for the breadcrumb item. The default value is <c>String.Empty</c>.\n            </value>\n            <example>\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem IconCss=\"e-icons e-home\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether the Breadcrumb item is disabled or not.\n            </summary>\n            <value>\n            <c>true</c>, if the Breadcrumb item is disabled. The default value is <c>false</c>.\n            </value>\n            <example>\n            <code><![CDATA[\n            <SfBreadcrumb\">\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\" Url=\"https://blazor.syncfusion.com/demos/\"></BreadcrumbItem>\n                    <BreadcrumbItem Disabled=\"true\" Text=\"Components\" Url=\"https://blazor.syncfusion.com/demos/datagrid/overview\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\" Url=\"https://blazor.syncfusion.com/demos/menu-bar/default-functionalities\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the breadcrumb item element.\n            </summary>\n            <remarks>\n            Additional attributes can be added by specifying as inline attributes or by specifying <c>@attributes</c> directive.\n            </remarks>\n            <example>\n            In the below code example, title attribute added as inline in <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> tag directive.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\" title=\"Home\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.BreadcrumbItem"}},{"HashCode":-389035999,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.BreadcrumbItem","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            A class that represents breadcrumb component item of <see cref=\"T:Syncfusion.Blazor.Navigations.SfBreadcrumb\" /> component.\n            </summary>\n            <remarks>\n            You can render icon only, text only, icon and text breadcrumb item by specifying value to corresponding property.\n            Additional attributes can be added to Breadcrumb item using <c>@attributes</c> directive.\n            </remarks>\n            <example>\n            In the below code example, a basic Breadcrumb item has been added using <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> tag directive.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\" Url=\"https://blazor.syncfusion.com/demos/\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\" Url=\"https://blazor.syncfusion.com/demos/datagrid/overview\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\" Url=\"https://blazor.syncfusion.com/demos/menu-bar/default-functionalities\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Breadcrumb\" Url=\"https://blazor.syncfusion.com/demos/breadcrumb/default-functionalities\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.BreadcrumbItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content for the Breadcrumb item. If the child content is not specified breadcrumb item is rendered using <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Text\" /> content.\n            </summary>\n            <value>\n            The template content. The default value in <c>null</c>.\n            </value>\n            <example>\n            In the below code example, content has been set to <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> using <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Text\" /> property and <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbItem.ChildContent\" /> property.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem><span>Components</span></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the text content of the Breadcrumb item.\n            </summary>\n            <value>\n            Accepts a string value. The default value is <c>String.Empty</c>.\n            </value>\n            <remarks>\n            Set child content within <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> tag directive, to render as HTML content.\n            </remarks>\n            <example>\n            In the below code example, content has been set to <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> using <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Text\" /> property and <c>ChildContent</c> property.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem>Home</BreadcrumbItem>\n                    <BreadcrumbItem><span>Components</span></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the Url of the Breadcrumb item and that will be navigated when clicked.\n            </summary>\n            <value>\n            Accepts Url string value. The default value is <c>String.Empty</c>.\n            </value>\n            <remarks>\n            When Url has not been set, you can customize the item navigation using <see cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ItemClicked\" /> event.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfBreadcrumb\">\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\" Url=\"https://blazor.syncfusion.com/demos/\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\" Url=\"https://blazor.syncfusion.com/demos/datagrid/overview\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\" Url=\"https://blazor.syncfusion.com/demos/menu-bar/default-functionalities\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"Url"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a CSS class string to include an icon or image for the breadcrumb item. \n            </summary>\n            <value>\n            Accepts a CSS class string separated by space to include an icon or image for the breadcrumb item. The default value is <c>String.Empty</c>.\n            </value>\n            <example>\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem IconCss=\"e-icons e-home\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether the Breadcrumb item is disabled or not.\n            </summary>\n            <value>\n            <c>true</c>, if the Breadcrumb item is disabled. The default value is <c>false</c>.\n            </value>\n            <example>\n            <code><![CDATA[\n            <SfBreadcrumb\">\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\" Url=\"https://blazor.syncfusion.com/demos/\"></BreadcrumbItem>\n                    <BreadcrumbItem Disabled=\"true\" Text=\"Components\" Url=\"https://blazor.syncfusion.com/demos/datagrid/overview\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\" Url=\"https://blazor.syncfusion.com/demos/menu-bar/default-functionalities\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the breadcrumb item element.\n            </summary>\n            <remarks>\n            Additional attributes can be added by specifying as inline attributes or by specifying <c>@attributes</c> directive.\n            </remarks>\n            <example>\n            In the below code example, title attribute added as inline in <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> tag directive.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\" title=\"Home\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.BreadcrumbItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1467822394,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.BreadcrumbItem.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Gets or sets the child content for the Breadcrumb item. If the child content is not specified breadcrumb item is rendered using <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Text\" /> content.\n            </summary>\n            <value>\n            The template content. The default value in <c>null</c>.\n            </value>\n            <example>\n            In the below code example, content has been set to <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> using <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Text\" /> property and <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbItem.ChildContent\" /> property.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem><span>Components</span></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BreadcrumbItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.BreadcrumbItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1558330061,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.BreadcrumbItem.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Gets or sets the child content for the Breadcrumb item. If the child content is not specified breadcrumb item is rendered using <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Text\" /> content.\n            </summary>\n            <value>\n            The template content. The default value in <c>null</c>.\n            </value>\n            <example>\n            In the below code example, content has been set to <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> using <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Text\" /> property and <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbItem.ChildContent\" /> property.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem><span>Components</span></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.BreadcrumbItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.BreadcrumbItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1223168560,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.BreadcrumbItems","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Represents a collection of <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" />.\n            </summary>\n            <remarks>\n            To generate dynamic <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> based on collection, use <c>@foreach</c> within <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItems\" /> tag directive.\n            </remarks>\n            <example>\n            In the below code example, a basic Breadcrumb has been rendered using <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItems\" /> tag directive.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BreadcrumbItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Specifies the child content for the Breadcrumb items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.BreadcrumbItems"}},{"HashCode":-1262150141,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.BreadcrumbItems","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Represents a collection of <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" />.\n            </summary>\n            <remarks>\n            To generate dynamic <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> based on collection, use <c>@foreach</c> within <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItems\" /> tag directive.\n            </remarks>\n            <example>\n            In the below code example, a basic Breadcrumb has been rendered using <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItems\" /> tag directive.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.BreadcrumbItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Specifies the child content for the Breadcrumb items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.BreadcrumbItems","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-38273129,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.BreadcrumbItems.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <exclude />\n            <summary>\n            Specifies the child content for the Breadcrumb items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BreadcrumbItems"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.BreadcrumbItems.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1351644155,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.BreadcrumbItems.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <exclude />\n            <summary>\n            Specifies the child content for the Breadcrumb items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.BreadcrumbItems"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.BreadcrumbItems.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1909723327,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.BreadcrumbTemplates","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Represents template options in <see cref=\"T:Syncfusion.Blazor.Navigations.SfBreadcrumb\" /> component.\n            </summary>\n            <remarks>\n            <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate\" /> or <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate\" /> can be set <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbTemplates\" /> tag directive.\n            To access template's context parameter use <c>@context</c> in both <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate\" /> and <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate\" />.\n            </remarks>\n            <example>\n            In the below code example, both <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate\" /> and <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate\" /> has been specified.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\"></BreadcrumbItem>\n                </BreadcrumbItems>\n                <BreadcrumbTemplates>\n                    <ItemTemplate>\n                        <i>@context.Text</i>\n                    </ItemTemplate>\n                    <SeparatorTemplate>\n                        <span class=\"e-icons e-arrow\"></span>\n                    </SeparatorTemplate>\n                </BreadcrumbTemplates>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BreadcrumbTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Navigations.BreadcrumbItem>","Documentation":"\n            <summary>\n            Gets or sets template as <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" />, that defines custom appearance of breadcrumb items.\n            Here, context refers to the <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> for which the template is applied.\n            </summary>\n            <value>\n            A template content that specifies the visualization of breadcrumb items. The default value in <c>null</c>.\n            </value>\n            <remarks>\n            The <c>ItemTemplate</c> used to define appearance of breadcrumb items. Use the template’s context parameter to access the <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> properties.\n            Specify <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate\" /> within <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbTemplates\" /> tag directive.\n            </remarks>        \n            <example>\n            In the below code example, <b>italic</b> style Breadcrumb item text has been rendered using <c>ItemTemplate</c>.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\"></BreadcrumbItem>\n                </BreadcrumbItems>\n                <BreadcrumbTemplates>\n                    <ItemTemplate>\n                        <i>@context.Text</i>\n                    </ItemTemplate>\n                </BreadcrumbTemplates>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SeparatorTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<(Syncfusion.Blazor.Navigations.BreadcrumbItem PreviousItem, Syncfusion.Blazor.Navigations.BreadcrumbItem NextItem)>","Documentation":"\n            <summary>\n            Gets or sets template as <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" />, that defines custom appearance of breadcrumb items separator.\n            Here, context refers to the <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> for previous and current item which the template is applied.\n            </summary>\n            <value>\n            A template content that specifies the visualization of breadcrumb items separator. The default value in <c>null</c>.\n            </value>\n            <remarks>\n            The <c>SeparatorTemplate</c> used to define appearance of breadcrumb items separator. Use the template’s context parameter to access the previous and current <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> properties.\n            Specify <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate\" /> within <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbTemplates\" /> tag directive.\n            </remarks>\n            <example>\n            In the below code example, caret icon is rendered as Breadcrumb items separator using <c>SeparatorTemplate</c>.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\"></BreadcrumbItem>\n                </BreadcrumbItems>\n                <BreadcrumbTemplates>\n                    <SeparatorTemplate>\n                        <span class=\"e-icons e-arrow\"></span>\n                    </SeparatorTemplate>\n                </BreadcrumbTemplates>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"SeparatorTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.BreadcrumbTemplates"}},{"HashCode":272078671,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.BreadcrumbTemplates","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Represents template options in <see cref=\"T:Syncfusion.Blazor.Navigations.SfBreadcrumb\" /> component.\n            </summary>\n            <remarks>\n            <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate\" /> or <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate\" /> can be set <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbTemplates\" /> tag directive.\n            To access template's context parameter use <c>@context</c> in both <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate\" /> and <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate\" />.\n            </remarks>\n            <example>\n            In the below code example, both <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate\" /> and <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate\" /> has been specified.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\"></BreadcrumbItem>\n                </BreadcrumbItems>\n                <BreadcrumbTemplates>\n                    <ItemTemplate>\n                        <i>@context.Text</i>\n                    </ItemTemplate>\n                    <SeparatorTemplate>\n                        <span class=\"e-icons e-arrow\"></span>\n                    </SeparatorTemplate>\n                </BreadcrumbTemplates>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.BreadcrumbTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Navigations.BreadcrumbItem>","Documentation":"\n            <summary>\n            Gets or sets template as <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" />, that defines custom appearance of breadcrumb items.\n            Here, context refers to the <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> for which the template is applied.\n            </summary>\n            <value>\n            A template content that specifies the visualization of breadcrumb items. The default value in <c>null</c>.\n            </value>\n            <remarks>\n            The <c>ItemTemplate</c> used to define appearance of breadcrumb items. Use the template’s context parameter to access the <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> properties.\n            Specify <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate\" /> within <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbTemplates\" /> tag directive.\n            </remarks>        \n            <example>\n            In the below code example, <b>italic</b> style Breadcrumb item text has been rendered using <c>ItemTemplate</c>.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\"></BreadcrumbItem>\n                </BreadcrumbItems>\n                <BreadcrumbTemplates>\n                    <ItemTemplate>\n                        <i>@context.Text</i>\n                    </ItemTemplate>\n                </BreadcrumbTemplates>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SeparatorTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<(Syncfusion.Blazor.Navigations.BreadcrumbItem PreviousItem, Syncfusion.Blazor.Navigations.BreadcrumbItem NextItem)>","Documentation":"\n            <summary>\n            Gets or sets template as <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" />, that defines custom appearance of breadcrumb items separator.\n            Here, context refers to the <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> for previous and current item which the template is applied.\n            </summary>\n            <value>\n            A template content that specifies the visualization of breadcrumb items separator. The default value in <c>null</c>.\n            </value>\n            <remarks>\n            The <c>SeparatorTemplate</c> used to define appearance of breadcrumb items separator. Use the template’s context parameter to access the previous and current <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> properties.\n            Specify <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate\" /> within <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbTemplates\" /> tag directive.\n            </remarks>\n            <example>\n            In the below code example, caret icon is rendered as Breadcrumb items separator using <c>SeparatorTemplate</c>.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\"></BreadcrumbItem>\n                </BreadcrumbItems>\n                <BreadcrumbTemplates>\n                    <SeparatorTemplate>\n                        <span class=\"e-icons e-arrow\"></span>\n                    </SeparatorTemplate>\n                </BreadcrumbTemplates>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"SeparatorTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.BreadcrumbTemplates","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":982404947,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Gets or sets template as <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" />, that defines custom appearance of breadcrumb items.\n            Here, context refers to the <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> for which the template is applied.\n            </summary>\n            <value>\n            A template content that specifies the visualization of breadcrumb items. The default value in <c>null</c>.\n            </value>\n            <remarks>\n            The <c>ItemTemplate</c> used to define appearance of breadcrumb items. Use the template’s context parameter to access the <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> properties.\n            Specify <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate\" /> within <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbTemplates\" /> tag directive.\n            </remarks>        \n            <example>\n            In the below code example, <b>italic</b> style Breadcrumb item text has been rendered using <c>ItemTemplate</c>.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\"></BreadcrumbItem>\n                </BreadcrumbItems>\n                <BreadcrumbTemplates>\n                    <ItemTemplate>\n                        <i>@context.Text</i>\n                    </ItemTemplate>\n                </BreadcrumbTemplates>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"BreadcrumbTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1553191238,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Gets or sets template as <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" />, that defines custom appearance of breadcrumb items.\n            Here, context refers to the <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> for which the template is applied.\n            </summary>\n            <value>\n            A template content that specifies the visualization of breadcrumb items. The default value in <c>null</c>.\n            </value>\n            <remarks>\n            The <c>ItemTemplate</c> used to define appearance of breadcrumb items. Use the template’s context parameter to access the <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> properties.\n            Specify <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate\" /> within <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbTemplates\" /> tag directive.\n            </remarks>        \n            <example>\n            In the below code example, <b>italic</b> style Breadcrumb item text has been rendered using <c>ItemTemplate</c>.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\"></BreadcrumbItem>\n                </BreadcrumbItems>\n                <BreadcrumbTemplates>\n                    <ItemTemplate>\n                        <i>@context.Text</i>\n                    </ItemTemplate>\n                </BreadcrumbTemplates>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Syncfusion.Blazor.Navigations.BreadcrumbTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":185963632,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Gets or sets template as <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" />, that defines custom appearance of breadcrumb items separator.\n            Here, context refers to the <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> for previous and current item which the template is applied.\n            </summary>\n            <value>\n            A template content that specifies the visualization of breadcrumb items separator. The default value in <c>null</c>.\n            </value>\n            <remarks>\n            The <c>SeparatorTemplate</c> used to define appearance of breadcrumb items separator. Use the template’s context parameter to access the previous and current <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> properties.\n            Specify <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate\" /> within <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbTemplates\" /> tag directive.\n            </remarks>\n            <example>\n            In the below code example, caret icon is rendered as Breadcrumb items separator using <c>SeparatorTemplate</c>.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\"></BreadcrumbItem>\n                </BreadcrumbItems>\n                <BreadcrumbTemplates>\n                    <SeparatorTemplate>\n                        <span class=\"e-icons e-arrow\"></span>\n                    </SeparatorTemplate>\n                </BreadcrumbTemplates>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SeparatorTemplate","ParentTag":"BreadcrumbTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'SeparatorTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-824949381,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Gets or sets template as <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" />, that defines custom appearance of breadcrumb items separator.\n            Here, context refers to the <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> for previous and current item which the template is applied.\n            </summary>\n            <value>\n            A template content that specifies the visualization of breadcrumb items separator. The default value in <c>null</c>.\n            </value>\n            <remarks>\n            The <c>SeparatorTemplate</c> used to define appearance of breadcrumb items separator. Use the template’s context parameter to access the previous and current <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> properties.\n            Specify <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate\" /> within <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbTemplates\" /> tag directive.\n            </remarks>\n            <example>\n            In the below code example, caret icon is rendered as Breadcrumb items separator using <c>SeparatorTemplate</c>.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\"></BreadcrumbItem>\n                </BreadcrumbItems>\n                <BreadcrumbTemplates>\n                    <SeparatorTemplate>\n                        <span class=\"e-icons e-arrow\"></span>\n                    </SeparatorTemplate>\n                </BreadcrumbTemplates>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SeparatorTemplate","ParentTag":"Syncfusion.Blazor.Navigations.BreadcrumbTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'SeparatorTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-324878197,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.SfBreadcrumb","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Breadcrumb component is a graphical user interface that helps to identify or highlight the current location within a hierarchical structure of websites.\n            The aim is to make the user aware of their current position in a hierarchy of website links.\n            </summary>\n            <remarks>\n            Breadcrumb items can be populated either by specifying <see cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.Url\" /> property or by specifying <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> within <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItems\" /> tag directive.\n            <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate\" /> and <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate\" /> can be used to customize the Breadcrumb component UI using <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbTemplates\" /> tag directive.\n            </remarks>\n            <example>\n            In the below code example, a basic Breadcrumb component initialized with <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItems\" /> tag directive.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\" Url=\"https://blazor.syncfusion.com/demos/\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\" Url=\"https://blazor.syncfusion.com/demos/datagrid/overview\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\" Url=\"https://blazor.syncfusion.com/demos/menu-bar/default-functionalities\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Breadcrumb\" Url=\"https://blazor.syncfusion.com/demos/breadcrumb/default-functionalities\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfBreadcrumb"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the Url based on which the Breadcrumb items are generated.\n            </summary>\n            <value>\n            The value as a Url string to generate Breadcrumb items. The default value is <c>String.Empty</c>.\n            </value>\n            <remarks>\n            You can specify only absolute Url to this property.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfBreadcrumb Url=\"https://blazor.syncfusion.com/demos/breadcrumb/navigation\">\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n            <seealso cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItems\" />\n        ","Metadata":{"Common.PropertyName":"Url"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Navigations.BreadcrumbItem>","Documentation":"\n            <summary>\n            Gets or sets the list of breadcrumb items that will be populated using the <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItems\" /> tag directive. \n            </summary>\n            <value>\n            <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItems\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ActiveItem","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Url\" /> of the active breadcrumb item.\n            </summary>\n            <value>\n            This property contains Url string of active breadcrumb item.\n            </value>\n            <remarks>\n            This property is updated only when the <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Url\" /> has value.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems ActiveItem=\"@activeItem\">\n                    <BreadcrumbItem Text=\"Home\" Url=\"https://blazor.syncfusion.com/demos/\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\" Url=\"https://blazor.syncfusion.com/demos/datagrid/overview\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\" Url=\"https://blazor.syncfusion.com/demos/menu-bar/default-functionalities\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Breadcrumb\" Url=\"https://blazor.syncfusion.com/demos/breadcrumb/default-functionalities\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            @code {\n                private string activeItem = \"https://blazor.syncfusion.com/demos/menu-bar/default-functionalities\";\n            }\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"ActiveItem"}},{"Kind":"Components.Component","Name":"MaxItems","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets the maximum number of breadcrumb items to be visible in the breadcrumb component.\n            If the number of items exceeds this count, then items are rendered based on <see cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.OverflowMode\" /> property. \n            </summary>\n            <value>\n            The number of breadcrumb items to be visible in breadcrumb component. The default value is <c>0</c>. \n            </value>\n            <remarks>\n            The <see cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.MaxItems\" /> is applicable only if the number of <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> is greater than <c>2</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxItems"}},{"Kind":"Components.Component","Name":"OverflowMode","TypeName":"Syncfusion.Blazor.Navigations.BreadcrumbOverflowMode","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets a value that indicates how to display breadcrumb items when the breadcrumb items count exceeds <see cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.MaxItems\" />.\n            </summary>\n            <value>\n            One of the <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbOverflowMode\" /> enumeration. The default value is <see cref=\"F:Syncfusion.Blazor.Navigations.BreadcrumbOverflowMode.Menu\" />\n            </value>\n            <remarks>\n            If the <c>OverflowMode</c> is <c>Hidden</c>, the exceeded items will be hidden and while clicking on the previous item, the hidden item will become visible.\n            If the <c>OverflowMode</c> is <c>Collapsed</c>,  only the first and last items will be visible, and the remaining items will be hidden with collapsed icon.\n            When the collapsed icon is clicked, all items become visible and scroll will be enabled if the space is not enough to show all items. \n            If the <c>OverflowMode</c> is <c>Menu</c>, it shows the number of breadcrumb items that can be accommodated within the container space, and creates a sub menu with the remaining items.\n            If the <c>OverflowMode</c> is <c>Wrap</c>, it wraps the items on multiple lines when the Breadcrumb’s width exceeds the container space.\n            If the <c>OverflowMode</c> is <c>Scroll</c>, it shows an HTML scroll bar when the Breadcrumb’s width exceeds the container space.\n            If the <c>OverflowMode</c> is <c>None</c>, it shows all the items on a single line.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"OverflowMode"}},{"Kind":"Components.Component","Name":"EnableNavigation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether the built-in item navigation is enabled or not. The breadcrumb component navigates to url based on the item clicked by user.\n            </summary>\n            <value>\n            <c>true</c>, if built-in item navigation is enabled; otherwise, <b>false</b>.The default value is <c>true</c>.\n            </value>\n            <remarks>\n            You can handle navigation in using <see cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ItemClicked\" /> event by setting <see cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.EnableNavigation\" /> as <c>false</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"EnableNavigation"}},{"Kind":"Components.Component","Name":"EnableActiveItemNavigation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether the navigation is enabled for active item (last breadcrumb item).\n            </summary>\n            <value>\n            <c>true</c>, if the navigation is enabled for last breadcrumb item and it is clickable. otherwise, <b>false</b>.The default value is <c>false</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"EnableActiveItemNavigation"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether to persist component's state between page reloads. When set to <c>true</c>, the <see cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ActiveItem\" /> property is persisted.\n            </summary>\n            <value>\n            <c>true</c>, if the component's state persistence is enabled. The default value is <c>false</c>.\n            </value>\n            <remarks>\n            Component's <see cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ActiveItem\" /> property will be stored in browser local storage to persist component's state when page reloads.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether the right to left direction is enabled for breadcrumb component.\n            </summary>\n            <value>\n            <c>true</c>, if the right to left direction is enabled for breadcrumb component. The default value is <c>false</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether the breadcrumb component is disabled or not.\n            </summary>\n            <value>\n            <c>true</c>, if the breadcrumb component is disabled. The default value is <c>false</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will applied to the Breadcrumb container element.\n            </summary>\n            <remarks>\n            Additional attributes can be added by specifying as inline attributes or by specifying <c>@attributes</c> directive.\n            </remarks>\n            <example>\n            In the below code example, Breadcrumb width has been specified as style attribute in <see cref=\"T:Syncfusion.Blazor.Navigations.SfBreadcrumb\" /> tag directive.\n            <code><![CDATA[\n            <SfBreadcrumb style=\"width:200px\">\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\" Url=\"https://blazor.syncfusion.com/demos/\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\" Url=\"https://blazor.syncfusion.com/demos/datagrid/overview\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\" Url=\"https://blazor.syncfusion.com/demos/menu-bar/default-functionalities\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Breadcrumb\" Url=\"https://blazor.syncfusion.com/demos/breadcrumb/default-functionalities\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the child content of Breadcrumb component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActiveItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets a callback that updates the bound active item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActiveItemChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ItemRendering","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.BreadcrumbItemRenderingEventArgs>","Documentation":"\n            <summary>\n            Gets or sets an event callback that is raised while rendering <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" />.\n            </summary>\n            <remarks>\n            You can customize the breadcrumb items rendering using <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItemRenderingEventArgs\" />.\n            </remarks>\n            <example>\n            In the below code example, the breadcrumb item text is changed to lower casing using <c>ItemRendering</c> event.\n            <code><![CDATA[\n            <SfBreadcrumb ItemRendering=\"@ItemRendering\">\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Program Files\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Commom Files\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Services\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Config.json\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            @code {\n                private void ItemRendering(BreadcrumbItemRenderingEventArgs args) {\n                    args.Item.Text = args.Item.Text.ToLower();\n                }\n            }\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"ItemRendering","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ItemClicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.BreadcrumbClickedEventArgs>","Documentation":"\n            <summary>\n            Gets or sets an event callback that is raised when the <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> is clicked. \n            </summary>\n            <remarks>\n            You can customize the item navigation using <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbClickedEventArgs\" /> by setting <seealso cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.EnableNavigation\" /> as <c>false</c>.\n            The event is raised for UI based click only.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            @inject NavigationManager NavigationManager\n            <SfBreadcrumb ItemClicked=\"@ItemClicked\" EnableNavigation=\"false\">\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Program Files\" Url=\"programfiles\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Commom Files\" Url=\"commomfiles\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Services\" Url=\"services\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Config\" Url=\"config\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            @code {\n                private void ItemClicked(BreadcrumbClickedEventArgs args) {\n                    NavigationManager.NavigateTo(args.Item.Url);\n                }\n            }\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"ItemClicked","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.SfBreadcrumb"}},{"HashCode":-1944172386,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.SfBreadcrumb","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Breadcrumb component is a graphical user interface that helps to identify or highlight the current location within a hierarchical structure of websites.\n            The aim is to make the user aware of their current position in a hierarchy of website links.\n            </summary>\n            <remarks>\n            Breadcrumb items can be populated either by specifying <see cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.Url\" /> property or by specifying <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> within <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItems\" /> tag directive.\n            <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate\" /> and <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate\" /> can be used to customize the Breadcrumb component UI using <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbTemplates\" /> tag directive.\n            </remarks>\n            <example>\n            In the below code example, a basic Breadcrumb component initialized with <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItems\" /> tag directive.\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\" Url=\"https://blazor.syncfusion.com/demos/\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\" Url=\"https://blazor.syncfusion.com/demos/datagrid/overview\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\" Url=\"https://blazor.syncfusion.com/demos/menu-bar/default-functionalities\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Breadcrumb\" Url=\"https://blazor.syncfusion.com/demos/breadcrumb/default-functionalities\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.SfBreadcrumb"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the Url based on which the Breadcrumb items are generated.\n            </summary>\n            <value>\n            The value as a Url string to generate Breadcrumb items. The default value is <c>String.Empty</c>.\n            </value>\n            <remarks>\n            You can specify only absolute Url to this property.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfBreadcrumb Url=\"https://blazor.syncfusion.com/demos/breadcrumb/navigation\">\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n            <seealso cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItems\" />\n        ","Metadata":{"Common.PropertyName":"Url"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Navigations.BreadcrumbItem>","Documentation":"\n            <summary>\n            Gets or sets the list of breadcrumb items that will be populated using the <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItems\" /> tag directive. \n            </summary>\n            <value>\n            <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItems\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ActiveItem","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Url\" /> of the active breadcrumb item.\n            </summary>\n            <value>\n            This property contains Url string of active breadcrumb item.\n            </value>\n            <remarks>\n            This property is updated only when the <see cref=\"P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Url\" /> has value.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfBreadcrumb>\n                <BreadcrumbItems ActiveItem=\"@activeItem\">\n                    <BreadcrumbItem Text=\"Home\" Url=\"https://blazor.syncfusion.com/demos/\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\" Url=\"https://blazor.syncfusion.com/demos/datagrid/overview\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\" Url=\"https://blazor.syncfusion.com/demos/menu-bar/default-functionalities\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Breadcrumb\" Url=\"https://blazor.syncfusion.com/demos/breadcrumb/default-functionalities\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            @code {\n                private string activeItem = \"https://blazor.syncfusion.com/demos/menu-bar/default-functionalities\";\n            }\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"ActiveItem"}},{"Kind":"Components.Component","Name":"MaxItems","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets the maximum number of breadcrumb items to be visible in the breadcrumb component.\n            If the number of items exceeds this count, then items are rendered based on <see cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.OverflowMode\" /> property. \n            </summary>\n            <value>\n            The number of breadcrumb items to be visible in breadcrumb component. The default value is <c>0</c>. \n            </value>\n            <remarks>\n            The <see cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.MaxItems\" /> is applicable only if the number of <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> is greater than <c>2</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxItems"}},{"Kind":"Components.Component","Name":"OverflowMode","TypeName":"Syncfusion.Blazor.Navigations.BreadcrumbOverflowMode","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets a value that indicates how to display breadcrumb items when the breadcrumb items count exceeds <see cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.MaxItems\" />.\n            </summary>\n            <value>\n            One of the <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbOverflowMode\" /> enumeration. The default value is <see cref=\"F:Syncfusion.Blazor.Navigations.BreadcrumbOverflowMode.Menu\" />\n            </value>\n            <remarks>\n            If the <c>OverflowMode</c> is <c>Hidden</c>, the exceeded items will be hidden and while clicking on the previous item, the hidden item will become visible.\n            If the <c>OverflowMode</c> is <c>Collapsed</c>,  only the first and last items will be visible, and the remaining items will be hidden with collapsed icon.\n            When the collapsed icon is clicked, all items become visible and scroll will be enabled if the space is not enough to show all items. \n            If the <c>OverflowMode</c> is <c>Menu</c>, it shows the number of breadcrumb items that can be accommodated within the container space, and creates a sub menu with the remaining items.\n            If the <c>OverflowMode</c> is <c>Wrap</c>, it wraps the items on multiple lines when the Breadcrumb’s width exceeds the container space.\n            If the <c>OverflowMode</c> is <c>Scroll</c>, it shows an HTML scroll bar when the Breadcrumb’s width exceeds the container space.\n            If the <c>OverflowMode</c> is <c>None</c>, it shows all the items on a single line.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"OverflowMode"}},{"Kind":"Components.Component","Name":"EnableNavigation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether the built-in item navigation is enabled or not. The breadcrumb component navigates to url based on the item clicked by user.\n            </summary>\n            <value>\n            <c>true</c>, if built-in item navigation is enabled; otherwise, <b>false</b>.The default value is <c>true</c>.\n            </value>\n            <remarks>\n            You can handle navigation in using <see cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ItemClicked\" /> event by setting <see cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.EnableNavigation\" /> as <c>false</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"EnableNavigation"}},{"Kind":"Components.Component","Name":"EnableActiveItemNavigation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether the navigation is enabled for active item (last breadcrumb item).\n            </summary>\n            <value>\n            <c>true</c>, if the navigation is enabled for last breadcrumb item and it is clickable. otherwise, <b>false</b>.The default value is <c>false</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"EnableActiveItemNavigation"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether to persist component's state between page reloads. When set to <c>true</c>, the <see cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ActiveItem\" /> property is persisted.\n            </summary>\n            <value>\n            <c>true</c>, if the component's state persistence is enabled. The default value is <c>false</c>.\n            </value>\n            <remarks>\n            Component's <see cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ActiveItem\" /> property will be stored in browser local storage to persist component's state when page reloads.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether the right to left direction is enabled for breadcrumb component.\n            </summary>\n            <value>\n            <c>true</c>, if the right to left direction is enabled for breadcrumb component. The default value is <c>false</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether the breadcrumb component is disabled or not.\n            </summary>\n            <value>\n            <c>true</c>, if the breadcrumb component is disabled. The default value is <c>false</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will applied to the Breadcrumb container element.\n            </summary>\n            <remarks>\n            Additional attributes can be added by specifying as inline attributes or by specifying <c>@attributes</c> directive.\n            </remarks>\n            <example>\n            In the below code example, Breadcrumb width has been specified as style attribute in <see cref=\"T:Syncfusion.Blazor.Navigations.SfBreadcrumb\" /> tag directive.\n            <code><![CDATA[\n            <SfBreadcrumb style=\"width:200px\">\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Home\" Url=\"https://blazor.syncfusion.com/demos/\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Components\" Url=\"https://blazor.syncfusion.com/demos/datagrid/overview\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Navigations\" Url=\"https://blazor.syncfusion.com/demos/menu-bar/default-functionalities\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Breadcrumb\" Url=\"https://blazor.syncfusion.com/demos/breadcrumb/default-functionalities\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the child content of Breadcrumb component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ActiveItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets a callback that updates the bound active item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActiveItemChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ItemRendering","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.BreadcrumbItemRenderingEventArgs>","Documentation":"\n            <summary>\n            Gets or sets an event callback that is raised while rendering <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" />.\n            </summary>\n            <remarks>\n            You can customize the breadcrumb items rendering using <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItemRenderingEventArgs\" />.\n            </remarks>\n            <example>\n            In the below code example, the breadcrumb item text is changed to lower casing using <c>ItemRendering</c> event.\n            <code><![CDATA[\n            <SfBreadcrumb ItemRendering=\"@ItemRendering\">\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Program Files\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Commom Files\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Services\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Config.json\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            @code {\n                private void ItemRendering(BreadcrumbItemRenderingEventArgs args) {\n                    args.Item.Text = args.Item.Text.ToLower();\n                }\n            }\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"ItemRendering","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ItemClicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.BreadcrumbClickedEventArgs>","Documentation":"\n            <summary>\n            Gets or sets an event callback that is raised when the <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbItem\" /> is clicked. \n            </summary>\n            <remarks>\n            You can customize the item navigation using <see cref=\"T:Syncfusion.Blazor.Navigations.BreadcrumbClickedEventArgs\" /> by setting <seealso cref=\"P:Syncfusion.Blazor.Navigations.SfBreadcrumb.EnableNavigation\" /> as <c>false</c>.\n            The event is raised for UI based click only.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            @inject NavigationManager NavigationManager\n            <SfBreadcrumb ItemClicked=\"@ItemClicked\" EnableNavigation=\"false\">\n                <BreadcrumbItems>\n                    <BreadcrumbItem Text=\"Program Files\" Url=\"programfiles\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Commom Files\" Url=\"commomfiles\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Services\" Url=\"services\"></BreadcrumbItem>\n                    <BreadcrumbItem Text=\"Config\" Url=\"config\"></BreadcrumbItem>\n                </BreadcrumbItems>\n            </SfBreadcrumb>\n            @code {\n                private void ItemClicked(BreadcrumbClickedEventArgs args) {\n                    NavigationManager.NavigateTo(args.Item.Url);\n                }\n            }\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"ItemClicked","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.SfBreadcrumb","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-420593610,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.SfBreadcrumb.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the child content of Breadcrumb component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfBreadcrumb"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.SfBreadcrumb.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1249647001,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.SfBreadcrumb.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the child content of Breadcrumb component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.SfBreadcrumb"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.SfBreadcrumb.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":80649378,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.SfContextMenu<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            ContextMenu is a graphical user interface that appears on the user right click/touch hold operation.\n            </summary>\n            <summary>\n            ContextMenu is a graphical user interface that appears on the user right click/touch hold operation.\n            </summary>\n            <summary>\n            ContextMenu is a graphical user interface that appears on the user right click/touch hold operation.\n            </summary>\n            <summary>\n            ContextMenu is a graphical user interface that appears on the user right click/touch hold operation.\n            </summary>\n            <summary>\n            ContextMenu is a graphical user interface that appears on the user right click/touch hold operation.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfContextMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.SfContextMenu<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Filter","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the filter selector for elements inside the target in that the context menu will be opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Filter"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies target element selector in which the ContextMenu should be opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"ShowOn","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the ContextMenu triggering event name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowOn"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child content for menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the Menu container.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<TValue>","Documentation":"\n            <summary>\n            Specifies menu items with its properties which will be rendered as ContextMenu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ShowItemOnClick","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to show the sub menu or not on click.\n            When set to true, the sub menu will open only on mouse click.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowItemOnClick"}},{"Kind":"Components.Component","Name":"EnableScrolling","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to enable / disable the scrollable option in Menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableScrolling"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.SfContextMenu<TValue>","Components.GenericTyped":"True"}},{"HashCode":-241047430,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.SfContextMenu<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            ContextMenu is a graphical user interface that appears on the user right click/touch hold operation.\n            </summary>\n            <summary>\n            ContextMenu is a graphical user interface that appears on the user right click/touch hold operation.\n            </summary>\n            <summary>\n            ContextMenu is a graphical user interface that appears on the user right click/touch hold operation.\n            </summary>\n            <summary>\n            ContextMenu is a graphical user interface that appears on the user right click/touch hold operation.\n            </summary>\n            <summary>\n            ContextMenu is a graphical user interface that appears on the user right click/touch hold operation.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.SfContextMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.SfContextMenu<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Filter","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the filter selector for elements inside the target in that the context menu will be opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Filter"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies target element selector in which the ContextMenu should be opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"ShowOn","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the ContextMenu triggering event name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowOn"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child content for menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the Menu container.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<TValue>","Documentation":"\n            <summary>\n            Specifies menu items with its properties which will be rendered as ContextMenu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ShowItemOnClick","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to show the sub menu or not on click.\n            When set to true, the sub menu will open only on mouse click.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowItemOnClick"}},{"Kind":"Components.Component","Name":"EnableScrolling","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to enable / disable the scrollable option in Menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableScrolling"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.SfContextMenu<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1762994707,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.SfContextMenu<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child content for menu.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfContextMenu"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.SfContextMenu<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1974600595,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.SfContextMenu<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child content for menu.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.SfContextMenu"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.SfContextMenu<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1755892929,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.MenuAnimationSettings","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the animation settings for the menu open.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MenuAnimationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the time duration to transform object.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied while transform.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}},{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.Navigations.MenuEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the effect that shown in the sub menu transform.\n            The possible effects are:\n             None: Specifies the sub menu transform with no animation effect.\n             SlideDown: Specifies the sub menu transform with slide down effect.\n             ZoomIn: Specifies the sub menu transform with zoom in effect.\n             FadeIn: Specifies the sub menu transform with fade in effect.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.MenuAnimationSettings"}},{"HashCode":-1724780915,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.MenuAnimationSettings","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the animation settings for the menu open.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.MenuAnimationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the time duration to transform object.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied while transform.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}},{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.Navigations.MenuEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the effect that shown in the sub menu transform.\n            The possible effects are:\n             None: Specifies the sub menu transform with no animation effect.\n             SlideDown: Specifies the sub menu transform with slide down effect.\n             ZoomIn: Specifies the sub menu transform with zoom in effect.\n             FadeIn: Specifies the sub menu transform with fade in effect.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.MenuAnimationSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":933083908,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.MenuEvents<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Used to configure the menu events.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MenuEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.MenuEvents<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers before closing the menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnItemRender","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.MenuEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers while rendering each menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnItemRender","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers before opening the menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.OpenCloseMenuEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers while closing the menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.OpenCloseMenuEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers while opening the menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.MenuEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers while selecting menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSelected","Components.EventCallback":"True","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.MenuEvents<TValue>","Components.GenericTyped":"True"}},{"HashCode":-1074987716,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.MenuEvents<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Used to configure the menu events.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.MenuEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.MenuEvents<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers before closing the menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnItemRender","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.MenuEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers while rendering each menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnItemRender","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers before opening the menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.OpenCloseMenuEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers while closing the menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.OpenCloseMenuEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers while opening the menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.MenuEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers while selecting menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSelected","Components.EventCallback":"True","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.MenuEvents<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1346146360,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.MenuFieldSettings","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Configures the field options of the Menu.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MenuFieldSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Children","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the children field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Children"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS icon field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"ItemId","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the itemId field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemId"}},{"Kind":"Components.Component","Name":"ParentId","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the parentId field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParentId"}},{"Kind":"Components.Component","Name":"Separator","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the separator field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Separator"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the disabled field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Hidden","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the hidden field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hidden"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the URL field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Url"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the @attributes (additional attributes) field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.MenuFieldSettings"}},{"HashCode":1677855513,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.MenuFieldSettings","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Configures the field options of the Menu.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.MenuFieldSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Children","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the children field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Children"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS icon field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"ItemId","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the itemId field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemId"}},{"Kind":"Components.Component","Name":"ParentId","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the parentId field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParentId"}},{"Kind":"Components.Component","Name":"Separator","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the separator field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Separator"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the disabled field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Hidden","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the hidden field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hidden"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the URL field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Url"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the @attributes (additional attributes) field for Menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.MenuFieldSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1558882341,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.MenuItem","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Used to configure the items which is going to render as menu.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MenuItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space for the menu Item that is used to include an icon.\n            Menu Item can include font icon and sprite image.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id for menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Navigations.MenuItem>","Documentation":"\n            <summary>\n            Specifies the sub menu items that is the array of MenuItem.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Separator","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies separator between the menu items. Separator are either horizontal or vertical lines used to group menu items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Separator"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Used to enable or disable the menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Hidden","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Used to hide or show the menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hidden"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies text for menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies URL for menu item that creates the anchor link to navigate to the url provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Url"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional HTML attributes such as style, title etc., to the menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.MenuItem"}},{"HashCode":1141878144,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.MenuItem","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Used to configure the items which is going to render as menu.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.MenuItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space for the menu Item that is used to include an icon.\n            Menu Item can include font icon and sprite image.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id for menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Navigations.MenuItem>","Documentation":"\n            <summary>\n            Specifies the sub menu items that is the array of MenuItem.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Separator","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies separator between the menu items. Separator are either horizontal or vertical lines used to group menu items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Separator"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Used to enable or disable the menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Hidden","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Used to hide or show the menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hidden"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies text for menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies URL for menu item that creates the anchor link to navigate to the url provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Url"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional HTML attributes such as style, title etc., to the menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.MenuItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":208899597,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.MenuItem.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MenuItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.MenuItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-869010442,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.MenuItem.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.MenuItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.MenuItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1641932962,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.MenuItems","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            A list of items that is used to configure menu items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MenuItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.MenuItems"}},{"HashCode":-959287179,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.MenuItems","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            A list of items that is used to configure menu items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.MenuItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.MenuItems","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-155905355,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.MenuItems.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MenuItems"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.MenuItems.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1316312756,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.MenuItems.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.MenuItems"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.MenuItems.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-879233468,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.MenuTemplates<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Used to specify templates for rendering menu items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MenuTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.MenuTemplates<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TValue>","Documentation":"\n            <summary>\n            Specifies the template for Menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Template","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.MenuTemplates<TValue>","Components.GenericTyped":"True"}},{"HashCode":-966820383,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.MenuTemplates<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Used to specify templates for rendering menu items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.MenuTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.MenuTemplates<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TValue>","Documentation":"\n            <summary>\n            Specifies the template for Menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Template","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.MenuTemplates<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1114964265,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.MenuTemplates<TValue>.Template","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the template for Menu.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"MenuTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.MenuTemplates<TValue>.Template","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-546476424,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.MenuTemplates<TValue>.Template","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the template for Menu.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"Syncfusion.Blazor.Navigations.MenuTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.MenuTemplates<TValue>.Template","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1787724335,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.SfMenu<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Menu is a graphical user interface that serve as navigation headers for your application.\n            </summary>\n            <summary>\n            Menu is a graphical user interface that serve as navigation headers for your application.\n            </summary>\n            <summary>\n            Menu is a graphical user interface that serve as navigation headers for your application.\n            </summary>\n            <summary>\n            Menu is a graphical user interface that serve as navigation headers for your application.\n            </summary>\n            <summary>\n            Menu is a graphical user interface that serve as navigation headers for your application.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.SfMenu<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"HamburgerMode","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to enable / disable the hamburger mode in Menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HamburgerMode"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"Syncfusion.Blazor.Navigations.Orientation","IsEnum":true,"Documentation":"\n            <summary>\n            Specified the orientation of Menu whether it can be horizontal or vertical.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies target element to open/close Menu while click in Hamburger mode.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the title text for hamburger mode in Menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child content for menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the Menu container.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<TValue>","Documentation":"\n            <summary>\n            Specifies menu items with its properties which will be rendered as ContextMenu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ShowItemOnClick","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to show the sub menu or not on click.\n            When set to true, the sub menu will open only on mouse click.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowItemOnClick"}},{"Kind":"Components.Component","Name":"EnableScrolling","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to enable / disable the scrollable option in Menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableScrolling"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.SfMenu<TValue>","Components.GenericTyped":"True"}},{"HashCode":528106196,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.SfMenu<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Menu is a graphical user interface that serve as navigation headers for your application.\n            </summary>\n            <summary>\n            Menu is a graphical user interface that serve as navigation headers for your application.\n            </summary>\n            <summary>\n            Menu is a graphical user interface that serve as navigation headers for your application.\n            </summary>\n            <summary>\n            Menu is a graphical user interface that serve as navigation headers for your application.\n            </summary>\n            <summary>\n            Menu is a graphical user interface that serve as navigation headers for your application.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.SfMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.SfMenu<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"HamburgerMode","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to enable / disable the hamburger mode in Menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HamburgerMode"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"Syncfusion.Blazor.Navigations.Orientation","IsEnum":true,"Documentation":"\n            <summary>\n            Specified the orientation of Menu whether it can be horizontal or vertical.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies target element to open/close Menu while click in Hamburger mode.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the title text for hamburger mode in Menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child content for menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the Menu container.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<TValue>","Documentation":"\n            <summary>\n            Specifies menu items with its properties which will be rendered as ContextMenu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ShowItemOnClick","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to show the sub menu or not on click.\n            When set to true, the sub menu will open only on mouse click.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowItemOnClick"}},{"Kind":"Components.Component","Name":"EnableScrolling","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to enable / disable the scrollable option in Menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableScrolling"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.SfMenu<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1608115810,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.SfMenu<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child content for menu.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfMenu"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.SfMenu<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1015367028,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.SfMenu<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child content for menu.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.SfMenu"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.SfMenu<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-711623849,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.SfSidebar","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Partial Class SfSidebar.\n            </summary>\n            <summary>\n            Partial Class SfSidebar.\n            </summary>\n            <summary>\n            Partial Class SfSidebar.\n            </summary>\n            <summary>\n            Partial Class SfSidebar.\n            </summary>\n            <summary>\n            The SfSidebar component is an expandable and collapsible component that typically acts as a side container to place primary or secondary content alongside the main content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfSidebar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Changed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the state(expand/collapse) of the component is changed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Changed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.EventArgs>","Documentation":"\n            <summary>\n            Triggers when the component is ready to close.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component gets destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.EventArgs>","Documentation":"\n            <summary>\n            Triggers when the component is ready to open.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets id attribute for the sidebar element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the child content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Animate","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the animation transitions on expanding or collapsing the Sidebar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animate"}},{"Kind":"Components.Component","Name":"CloseOnDocumentClick","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether the Sidebar needs to be closed or not when the document area is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CloseOnDocumentClick"}},{"Kind":"Components.Component","Name":"DockSize","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the size of the Sidebar in dock state. Dock size can be set in pixel values.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DockSize"}},{"Kind":"Components.Component","Name":"EnableDock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the docking state of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableDock"}},{"Kind":"Components.Component","Name":"EnableGestures","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables the expand or collapse while swiping in the touch devices.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableGestures"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the persisting component's state between page reloads. If enabled, isOpen state will be persisted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering Sidebar in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"IsOpen","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the Sidebar component is open or close.\n            When the Sidebar type is set to `Auto`,\n            the component will be expanded in the desktop and collapsed in the mobile mode regardless of the isOpen property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsOpen"}},{"Kind":"Components.Component","Name":"IsOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback of the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MediaQuery","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the media query string for resolution, when opens the Sidebar.\n            Example: assigning media query value to '(min-width: 600px)' will open the sidebar component only when the provided resolution is met else the sidebar will be in closed state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MediaQuery"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.Navigations.SidebarPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the position of the Sidebar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"ShowBackdrop","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to apply overlay options to the main content or not when the Sidebar is in an open state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowBackdrop"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"\n            <summary>\n            Allows to place the sidebar inside the target element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Navigations.SidebarType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the expanding types of the Sidebar.\n            `Over` - The sidebar floats over the main content area.\n            `Push` - The sidebar pushes the main content area to appear side-by-side and shrinks the main content within the screen width.\n            `Slide` - The sidebar translates the x and y positions of the main content area based on the sidebar width.\n            The main content area will not be adjusted within the screen width.\n             `Auto` - Sidebar with `Over` type in mobile resolution and `Push` type in other higher resolutions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the Sidebar. By default, the width of the Sidebar sets based on the size of its content.\n            Width can also be set in pixel values.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the z-index of the Sidebar. It is applicable only when sidebar act as the overlay type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.SfSidebar"}},{"HashCode":-1508611534,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.SfSidebar","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Partial Class SfSidebar.\n            </summary>\n            <summary>\n            Partial Class SfSidebar.\n            </summary>\n            <summary>\n            Partial Class SfSidebar.\n            </summary>\n            <summary>\n            Partial Class SfSidebar.\n            </summary>\n            <summary>\n            The SfSidebar component is an expandable and collapsible component that typically acts as a side container to place primary or secondary content alongside the main content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.SfSidebar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Changed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.ChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the state(expand/collapse) of the component is changed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Changed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.EventArgs>","Documentation":"\n            <summary>\n            Triggers when the component is ready to close.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component gets destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.EventArgs>","Documentation":"\n            <summary>\n            Triggers when the component is ready to open.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets id attribute for the sidebar element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the child content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Animate","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the animation transitions on expanding or collapsing the Sidebar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animate"}},{"Kind":"Components.Component","Name":"CloseOnDocumentClick","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether the Sidebar needs to be closed or not when the document area is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CloseOnDocumentClick"}},{"Kind":"Components.Component","Name":"DockSize","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the size of the Sidebar in dock state. Dock size can be set in pixel values.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DockSize"}},{"Kind":"Components.Component","Name":"EnableDock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the docking state of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableDock"}},{"Kind":"Components.Component","Name":"EnableGestures","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables the expand or collapse while swiping in the touch devices.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableGestures"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the persisting component's state between page reloads. If enabled, isOpen state will be persisted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering Sidebar in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"IsOpen","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the Sidebar component is open or close.\n            When the Sidebar type is set to `Auto`,\n            the component will be expanded in the desktop and collapsed in the mobile mode regardless of the isOpen property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsOpen"}},{"Kind":"Components.Component","Name":"IsOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback of the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MediaQuery","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the media query string for resolution, when opens the Sidebar.\n            Example: assigning media query value to '(min-width: 600px)' will open the sidebar component only when the provided resolution is met else the sidebar will be in closed state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MediaQuery"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.Navigations.SidebarPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the position of the Sidebar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"ShowBackdrop","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to apply overlay options to the main content or not when the Sidebar is in an open state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowBackdrop"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"\n            <summary>\n            Allows to place the sidebar inside the target element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Navigations.SidebarType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the expanding types of the Sidebar.\n            `Over` - The sidebar floats over the main content area.\n            `Push` - The sidebar pushes the main content area to appear side-by-side and shrinks the main content within the screen width.\n            `Slide` - The sidebar translates the x and y positions of the main content area based on the sidebar width.\n            The main content area will not be adjusted within the screen width.\n             `Auto` - Sidebar with `Over` type in mobile resolution and `Push` type in other higher resolutions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the Sidebar. By default, the width of the Sidebar sets based on the size of its content.\n            Width can also be set in pixel values.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the z-index of the Sidebar. It is applicable only when sidebar act as the overlay type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional input attributes such as disabled, value, and more to the root element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.SfSidebar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-188770671,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.SfSidebar.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the child content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfSidebar"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.SfSidebar.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1144131927,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.SfSidebar.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the child content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.SfSidebar"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.SfSidebar.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":274317922,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.SfTab","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Tab is a content panel to show multiple contents in a compact space. Also, only one tab is active at a time. Each Tab item has an associated content, that will be displayed based on the active Tab.\n            </summary>\n            <summary>\n            Tab is a content panel to show multiple contents in a compact space. Also, only one tab is active at a time. Each Tab item has an associated content, that will be displayed based on the active Tab.\n            </summary>\n            <summary>\n            Tab is a content panel to show multiple contents in a compact space. Also, only one tab is active at a time. Each Tab item has an associated content, that will be displayed based on the active Tab.\n            </summary>\n            <summary>\n            Tab is a content panel to show multiple contents in a compact space. Also, only one tab is active at a time. Each Tab item has an associated content, that will be displayed based on the active Tab.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfTab"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets ID attribute for the tab element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for Tab.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Navigations.TabAnimationSettings","Documentation":"\n            <summary>\n            Specifies the animation settings of the Tabs component. The animation effect can be applied to activate the tab with duration and delay.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the CSS classes to the root element of the Tabs that helps to customize the component styles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            If enabled, the tab’s selected item will be persisted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"AllowDragAndDrop","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the Tab allows drag and drop over tab items. Tab item has been reordered based on the dropped item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowDragAndDrop"}},{"Kind":"Components.Component","Name":"DragArea","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the area in which the draggable element movement will be occurring. Outside that area will be restricted\n            for the draggable element movement. By default, the draggable element movement occurs with Tabitems.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DragArea"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left (RTL) direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"HeaderPlacement","TypeName":"Syncfusion.Blazor.Navigations.HeaderPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the orientation of the Tab header.\n            The possible values are:\n            - Top: Places the Tab header on the top.\n            - Bottom: Places the Tab header at the bottom.\n            - Left: Places the Tab header at the left.\n            - Right: Places the Tab header at the right.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderPlacement"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the height of the Tabs component. By default, Tab height is set based on the height of its parent.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Navigations.TabItem>","Documentation":"\n            <summary>\n            A list of items that are used to configure the Tabs component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"LoadOn","TypeName":"Syncfusion.Blazor.Navigations.ContentLoad","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the modes for the Tab content.\n            The possible modes are:\n            `Dynamic` Load the Tab content dynamically, which is rendering its content when switching its header.\n            `Init` Loads all the tab contents on initial loading.\n            `Demand` Loads the Tab content when required but keeps the content once it is rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LoadOn"}},{"Kind":"Components.Component","Name":"Locale","TypeName":"System.String","Documentation":"\n            <summary>\n            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Locale"}},{"Kind":"Components.Component","Name":"OverflowMode","TypeName":"Syncfusion.Blazor.Navigations.OverflowMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the display mode which will be applied when the Tabs exceeds the viewing area.\n            The possible modes are:\n            - Scrollable: All the elements will be displayed in a single line with horizontal scrolling enabled.\n            - Popup: Tab container will hold the items that can be placed within the available space and the rest of the items will be moved to the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OverflowMode"}},{"Kind":"Components.Component","Name":"ScrollStep","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the scrolling distance that applies when scrolling in Tab and enabled Scrollable mode.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ScrollStep"}},{"Kind":"Components.Component","Name":"SelectedItem","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the index for activating the Tab item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedItem"}},{"Kind":"Components.Component","Name":"SelectedItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"\n            <summary>\n            Gets or sets a callback of the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedItemChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether to show the close button in the Tab header or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCloseButton"}},{"Kind":"Components.Component","Name":"ReorderActiveTab","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether to re-order tab items to show active tab item in the header area or popup when OverflowMode is Popup.\n            </summary>\n            <value>\n            true, if active tab item should be visible in header area instead of pop-up; otherwise, false. The default value is true.\n            </value>\n            <remarks>\n            <see cref=\"P:Syncfusion.Blazor.Navigations.SfTab.ReorderActiveTab\" /> Property is only applicable when OverflowMode is popup.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ReorderActiveTab"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the Tabs component. By default, Tab width sets based on the width of its parent.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the tab element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.SfTab"}},{"HashCode":1360850139,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.SfTab","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Tab is a content panel to show multiple contents in a compact space. Also, only one tab is active at a time. Each Tab item has an associated content, that will be displayed based on the active Tab.\n            </summary>\n            <summary>\n            Tab is a content panel to show multiple contents in a compact space. Also, only one tab is active at a time. Each Tab item has an associated content, that will be displayed based on the active Tab.\n            </summary>\n            <summary>\n            Tab is a content panel to show multiple contents in a compact space. Also, only one tab is active at a time. Each Tab item has an associated content, that will be displayed based on the active Tab.\n            </summary>\n            <summary>\n            Tab is a content panel to show multiple contents in a compact space. Also, only one tab is active at a time. Each Tab item has an associated content, that will be displayed based on the active Tab.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.SfTab"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets ID attribute for the tab element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for Tab.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Navigations.TabAnimationSettings","Documentation":"\n            <summary>\n            Specifies the animation settings of the Tabs component. The animation effect can be applied to activate the tab with duration and delay.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the CSS classes to the root element of the Tabs that helps to customize the component styles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            If enabled, the tab’s selected item will be persisted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"AllowDragAndDrop","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the Tab allows drag and drop over tab items. Tab item has been reordered based on the dropped item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowDragAndDrop"}},{"Kind":"Components.Component","Name":"DragArea","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the area in which the draggable element movement will be occurring. Outside that area will be restricted\n            for the draggable element movement. By default, the draggable element movement occurs with Tabitems.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DragArea"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left (RTL) direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"HeaderPlacement","TypeName":"Syncfusion.Blazor.Navigations.HeaderPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the orientation of the Tab header.\n            The possible values are:\n            - Top: Places the Tab header on the top.\n            - Bottom: Places the Tab header at the bottom.\n            - Left: Places the Tab header at the left.\n            - Right: Places the Tab header at the right.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderPlacement"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the height of the Tabs component. By default, Tab height is set based on the height of its parent.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Navigations.TabItem>","Documentation":"\n            <summary>\n            A list of items that are used to configure the Tabs component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"LoadOn","TypeName":"Syncfusion.Blazor.Navigations.ContentLoad","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the modes for the Tab content.\n            The possible modes are:\n            `Dynamic` Load the Tab content dynamically, which is rendering its content when switching its header.\n            `Init` Loads all the tab contents on initial loading.\n            `Demand` Loads the Tab content when required but keeps the content once it is rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LoadOn"}},{"Kind":"Components.Component","Name":"Locale","TypeName":"System.String","Documentation":"\n            <summary>\n            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Locale"}},{"Kind":"Components.Component","Name":"OverflowMode","TypeName":"Syncfusion.Blazor.Navigations.OverflowMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the display mode which will be applied when the Tabs exceeds the viewing area.\n            The possible modes are:\n            - Scrollable: All the elements will be displayed in a single line with horizontal scrolling enabled.\n            - Popup: Tab container will hold the items that can be placed within the available space and the rest of the items will be moved to the popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OverflowMode"}},{"Kind":"Components.Component","Name":"ScrollStep","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the scrolling distance that applies when scrolling in Tab and enabled Scrollable mode.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ScrollStep"}},{"Kind":"Components.Component","Name":"SelectedItem","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the index for activating the Tab item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedItem"}},{"Kind":"Components.Component","Name":"SelectedItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"\n            <summary>\n            Gets or sets a callback of the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedItemChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether to show the close button in the Tab header or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCloseButton"}},{"Kind":"Components.Component","Name":"ReorderActiveTab","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether to re-order tab items to show active tab item in the header area or popup when OverflowMode is Popup.\n            </summary>\n            <value>\n            true, if active tab item should be visible in header area instead of pop-up; otherwise, false. The default value is true.\n            </value>\n            <remarks>\n            <see cref=\"P:Syncfusion.Blazor.Navigations.SfTab.ReorderActiveTab\" /> Property is only applicable when OverflowMode is popup.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ReorderActiveTab"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the Tabs component. By default, Tab width sets based on the width of its parent.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the tab element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.SfTab","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-63986076,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.SfTab.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for Tab.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfTab"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.SfTab.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1520917539,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.SfTab.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for Tab.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.SfTab"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.SfTab.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1547283588,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TabAnimationNext","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the animation to appear when moving to the next Tab content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TabAnimationNext"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time duration to transform content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied when transforming the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}},{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.AnimationEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation effect for displaying the next Tab content.\n            Default animation is given as SlideRightIn for next tab animation. You can also disable the animation by setting the animation effect as none.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TabAnimationNext"}},{"HashCode":667288384,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TabAnimationNext","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the animation to appear when moving to the next Tab content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.TabAnimationNext"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time duration to transform content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied when transforming the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}},{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.AnimationEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation effect for displaying the next Tab content.\n            Default animation is given as SlideRightIn for next tab animation. You can also disable the animation by setting the animation effect as none.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TabAnimationNext","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":771832014,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TabAnimationPrevious","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the animation to appear when moving to the previous Tab content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TabAnimationPrevious"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time duration to transform the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied when transforming the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}},{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.AnimationEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation effect for displaying the previous Tab content.\n            Default animation is given as SlideLeftIn for previous tab animation. You can also disable the animation by setting the animation effect as none.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TabAnimationPrevious"}},{"HashCode":274321022,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TabAnimationPrevious","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the animation to appear when moving to the previous Tab content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.TabAnimationPrevious"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time duration to transform the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied when transforming the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}},{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.AnimationEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation effect for displaying the previous Tab content.\n            Default animation is given as SlideLeftIn for previous tab animation. You can also disable the animation by setting the animation effect as none.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TabAnimationPrevious","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1156034261,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TabAnimationSettings","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            A class used for configuring the Tab animation properties.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TabAnimationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for the Tab Animation Settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Next","TypeName":"Syncfusion.Blazor.Navigations.TabAnimationNext","Documentation":"\n            <summary>\n            Specifies the animation to appear when moving to the next Tab content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Next"}},{"Kind":"Components.Component","Name":"Previous","TypeName":"Syncfusion.Blazor.Navigations.TabAnimationPrevious","Documentation":"\n            <summary>\n            Specifies the animation to appear when moving to the previous Tab content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Previous"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TabAnimationSettings"}},{"HashCode":544323958,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TabAnimationSettings","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            A class used for configuring the Tab animation properties.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.TabAnimationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for the Tab Animation Settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Next","TypeName":"Syncfusion.Blazor.Navigations.TabAnimationNext","Documentation":"\n            <summary>\n            Specifies the animation to appear when moving to the next Tab content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Next"}},{"Kind":"Components.Component","Name":"Previous","TypeName":"Syncfusion.Blazor.Navigations.TabAnimationPrevious","Documentation":"\n            <summary>\n            Specifies the animation to appear when moving to the previous Tab content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Previous"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TabAnimationSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1705629733,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.TabAnimationSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for the Tab Animation Settings.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TabAnimationSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.TabAnimationSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-861963242,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.TabAnimationSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for the Tab Animation Settings.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.TabAnimationSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.TabAnimationSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-980980178,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TabEvents","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Configure event handlers to handle the events with the Tabs component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TabEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Added","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.AddEventArgs>","Documentation":"\n            <summary>\n            The event triggers after adding the item to the Tabs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Added","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Adding","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.AddEventArgs>","Documentation":"\n            <summary>\n            The event triggers before adding the tab item to the Tabs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Adding","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            The event triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            The event triggers when the component gets destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Removed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.RemoveEventArgs>","Documentation":"\n            <summary>\n            The event triggers after removing the item from the Tabs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Removed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Removing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.RemoveEventArgs>","Documentation":"\n            <summary>\n            The event triggers before removing the item from the Tabs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Removing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.SelectEventArgs>","Documentation":"\n            <summary>\n            The event triggers after the tab item gets selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Selecting","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.SelectingEventArgs>","Documentation":"\n            <summary>\n            The event triggers before the tab item gets selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selecting","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDragStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.DragEventArgs>","Documentation":"\n            <summary>\n            The event triggers when the Tab item drag starts.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnDragStart","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Dragged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.DragEventArgs>","Documentation":"\n            <summary>\n            The event triggers after the tab item gets dropped.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Dragged","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TabEvents"}},{"HashCode":798337091,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TabEvents","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Configure event handlers to handle the events with the Tabs component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.TabEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Added","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.AddEventArgs>","Documentation":"\n            <summary>\n            The event triggers after adding the item to the Tabs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Added","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Adding","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.AddEventArgs>","Documentation":"\n            <summary>\n            The event triggers before adding the tab item to the Tabs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Adding","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            The event triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            The event triggers when the component gets destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Removed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.RemoveEventArgs>","Documentation":"\n            <summary>\n            The event triggers after removing the item from the Tabs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Removed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Removing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.RemoveEventArgs>","Documentation":"\n            <summary>\n            The event triggers before removing the item from the Tabs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Removing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.SelectEventArgs>","Documentation":"\n            <summary>\n            The event triggers after the tab item gets selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Selecting","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.SelectingEventArgs>","Documentation":"\n            <summary>\n            The event triggers before the tab item gets selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selecting","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDragStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.DragEventArgs>","Documentation":"\n            <summary>\n            The event triggers when the Tab item drag starts.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnDragStart","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Dragged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.DragEventArgs>","Documentation":"\n            <summary>\n            The event triggers after the tab item gets dropped.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Dragged","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TabEvents","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1931407981,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TabHeader","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            A class used for configuring the Tab header properties.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TabHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the icon class that is used to render an icon in the Tab header.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"System.String","Documentation":"\n            <summary>\n            Options for positioning the icon in the Tab item header. This property depends on the `IconCss` property.\n            The possible values are:\n            - left: Places the icon to the `left` of the item.\n            - top: Places the icon on the `top` of the item.\n            - right: Places the icon to the `right` end of the item.\n            - bottom: Places the icon at the `bottom` of the item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the display text of the Tab header.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TabHeader"}},{"HashCode":382318613,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TabHeader","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            A class used for configuring the Tab header properties.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.TabHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the icon class that is used to render an icon in the Tab header.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"System.String","Documentation":"\n            <summary>\n            Options for positioning the icon in the Tab item header. This property depends on the `IconCss` property.\n            The possible values are:\n            - left: Places the icon to the `left` of the item.\n            - top: Places the icon on the `top` of the item.\n            - right: Places the icon to the `right` end of the item.\n            - bottom: Places the icon at the `bottom` of the item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the display text of the Tab header.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TabHeader","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":719109983,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TabItem","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            An item object that is used to configure the Tab.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TabItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for the Tab item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content template of the Tab item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContentTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the content of Tab item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the CSS classes to the Tab item to customize its styles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the control is disabled or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Syncfusion.Blazor.Navigations.TabHeader","Documentation":"\n            <summary>\n            The object used for configuring the Tab item header properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the header content of the Tab item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the tab is visible or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Visible"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TabItem"}},{"HashCode":1518087343,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TabItem","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            An item object that is used to configure the Tab.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.TabItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for the Tab item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the content template of the Tab item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContentTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the content of Tab item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the CSS classes to the Tab item to customize its styles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the control is disabled or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Syncfusion.Blazor.Navigations.TabHeader","Documentation":"\n            <summary>\n            The object used for configuring the Tab item header properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the header content of the Tab item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the tab is visible or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Visible"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TabItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1094992251,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.TabItem.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for the Tab item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TabItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.TabItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1894157127,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.TabItem.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for the Tab item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.TabItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.TabItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1729412738,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.TabItem.ContentTemplate","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the content template of the Tab item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"TabItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.TabItem.ContentTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":707934321,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.TabItem.ContentTemplate","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the content template of the Tab item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"Syncfusion.Blazor.Navigations.TabItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.TabItem.ContentTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2011935448,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.TabItem.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the header content of the Tab item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"TabItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.TabItem.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":978924506,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.TabItem.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the header content of the Tab item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Syncfusion.Blazor.Navigations.TabItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.TabItem.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1860116023,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TabItems","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            A list of items that are used to configure the Tabs component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TabItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for the Tab items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TabItems"}},{"HashCode":-73422441,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TabItems","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            A list of items that are used to configure the Tabs component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.TabItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for the Tab items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TabItems","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1362792318,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.TabItems.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for the Tab items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TabItems"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.TabItems.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-222637809,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.TabItems.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for the Tab items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.TabItems"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.TabItems.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":986982692,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.SfToolbar","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            The Toolbar control contains a group of commands that are aligned horizontally.\n            </summary>\n            <summary>\n            The Toolbar control contains a group of commands that are aligned horizontally.\n            </summary>\n            <summary>\n            The Toolbar control contains a group of commands that are aligned horizontally.\n            </summary>\n            <summary>\n            The Toolbar control contains a group of commands that are aligned horizontally.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfToolbar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets ID attribute for toolbar element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for Toolbar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AllowKeyboard","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When this property is set to true, it allows the keyboard interaction in toolbar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowKeyboard"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the CSS classes to root element of the Toolbar that helps to customize component styles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableCollision","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the popup collision.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableCollision"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the height of the Toolbar in pixels/number/percentage. Number value is considered as pixels.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Navigations.ToolbarItem>","Documentation":"\n            <summary>\n            A list of items that is used to configure Toolbar commands.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"OverflowMode","TypeName":"Syncfusion.Blazor.Navigations.OverflowMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the Toolbar display mode when Toolbar content exceeds the viewing area.\n            Possible modes are:\n            - Scrollable: All the elements are displayed in a single line with horizontal scrolling enabled.\n            - Popup: Prioritized elements are displayed on the Toolbar and the rest of elements are moved to the popup.\n            - MultiRow: Displays the overflow toolbar items as an in-line of a toolbar.\n            - Extended: Hide the overflowing toolbar items in the next row.  Show the overflowing toolbar items when you click the expand icons.\n            If the popup content overflows the height of the page, the rest of the elements will be hidden.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OverflowMode"}},{"Kind":"Components.Component","Name":"ScrollStep","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the scrolling distance in scroller.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ScrollStep"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the Toolbar in pixels/numbers/percentage. Number value is considered as pixels.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the toolbar element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.SfToolbar"}},{"HashCode":1141640929,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.SfToolbar","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            The Toolbar control contains a group of commands that are aligned horizontally.\n            </summary>\n            <summary>\n            The Toolbar control contains a group of commands that are aligned horizontally.\n            </summary>\n            <summary>\n            The Toolbar control contains a group of commands that are aligned horizontally.\n            </summary>\n            <summary>\n            The Toolbar control contains a group of commands that are aligned horizontally.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.SfToolbar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets ID attribute for toolbar element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for Toolbar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AllowKeyboard","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When this property is set to true, it allows the keyboard interaction in toolbar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowKeyboard"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the CSS classes to root element of the Toolbar that helps to customize component styles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableCollision","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the popup collision.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableCollision"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the height of the Toolbar in pixels/number/percentage. Number value is considered as pixels.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Navigations.ToolbarItem>","Documentation":"\n            <summary>\n            A list of items that is used to configure Toolbar commands.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"OverflowMode","TypeName":"Syncfusion.Blazor.Navigations.OverflowMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the Toolbar display mode when Toolbar content exceeds the viewing area.\n            Possible modes are:\n            - Scrollable: All the elements are displayed in a single line with horizontal scrolling enabled.\n            - Popup: Prioritized elements are displayed on the Toolbar and the rest of elements are moved to the popup.\n            - MultiRow: Displays the overflow toolbar items as an in-line of a toolbar.\n            - Extended: Hide the overflowing toolbar items in the next row.  Show the overflowing toolbar items when you click the expand icons.\n            If the popup content overflows the height of the page, the rest of the elements will be hidden.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OverflowMode"}},{"Kind":"Components.Component","Name":"ScrollStep","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the scrolling distance in scroller.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ScrollStep"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the Toolbar in pixels/numbers/percentage. Number value is considered as pixels.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the toolbar element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.SfToolbar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":698982239,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.SfToolbar.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for Toolbar.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfToolbar"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.SfToolbar.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-601021394,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.SfToolbar.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for Toolbar.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.SfToolbar"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.SfToolbar.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1178271889,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.ToolbarItem","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            An item object that is used to configure Toolbar commands.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ToolbarItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for Toolbar item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.ClickEventArgs>","Documentation":"\n            <summary>\n            Event triggers when click the toolbar item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Align","TypeName":"Syncfusion.Blazor.Navigations.ItemAlign","IsEnum":true,"Documentation":"\n             <summary>\n             Specifies the location for aligning Toolbar items on the Toolbar. Each command will be aligned according to the `Align` property.\n             Possible values are:\n             - Left: To align commands to the left side of the Toolbar.\n             - Center: To align commands at the center of the Toolbar.\n             - Right: To align commands to the right side of the Toolbar.\n            \n             </summary>\n        ","Metadata":{"Common.PropertyName":"Align"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines single/multiple classes (separated by space) to be used for customization of commands.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether an item should be disabled or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Defines htmlAttributes used to add custom attributes to Toolbar command.\n            Supports HTML attributes such as style, class, etc.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the unique ID to be used with button or input element of Toolbar items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Overflow","TypeName":"Syncfusion.Blazor.Navigations.OverflowOption","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the Toolbar command display area when an element's content is too large to fit available space.\n            This is applicable only to `Popup` mode. Possible values are:\n            - Show:  Always shows the item as the primary priority on the Toolbar.\n            - Hide: Always shows the item as the secondary priority on the popup.\n            - None: No priority for display, and as per normal order moves to popup when content exceeds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Overflow"}},{"Kind":"Components.Component","Name":"PrefixIcon","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines single/multiple classes separated by space used to specify an icon for the button.\n            The icon will be positioned before the text content if text is available, otherwise the icon alone will be rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PrefixIcon"}},{"Kind":"Components.Component","Name":"ShowAlwaysInPopup","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Defines the priority of items to display it in popup always.\n            It allows to maintain toolbar item on popup always but it does not work for toolbar priority items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowAlwaysInPopup"}},{"Kind":"Components.Component","Name":"ShowTextOn","TypeName":"Syncfusion.Blazor.Navigations.DisplayMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies where the button text will be displayed on popup mode of the Toolbar.\n            Possible values are:\n            - Toolbar:  Text will be displayed on Toolbar only.\n            - Overflow: Text will be displayed only when content overflows to popup.\n            - Both: Text will be displayed on popup and Toolbar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowTextOn"}},{"Kind":"Components.Component","Name":"SuffixIcon","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines single/multiple classes separated by space used to specify an icon for the button.\n            The icon will be positioned after the text content if text is available.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SuffixIcon"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n             <summary>\n             Specifies the HTML element/element ID as a string that can be added as a Toolbar command.\n            \n             </summary>\n        ","Metadata":{"Common.PropertyName":"Template","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text to be displayed on the Toolbar button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"TooltipText","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text to be displayed on hovering the Toolbar button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipText"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Navigations.ItemType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the types of command to be rendered in the Toolbar.\n            Supported types are:\n            - Button: Creates the Button control with its given properties like text, prefixIcon, etc.\n            - Separator: Adds a horizontal line that separates the Toolbar commands.\n            - Input: Creates an input element that is applicable to template rendering with Syncfusion controls like DropDownList,\n            AutoComplete, etc.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether an item should be hidden or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the Toolbar button commands.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.ToolbarItem"}},{"HashCode":711183511,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.ToolbarItem","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            An item object that is used to configure Toolbar commands.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.ToolbarItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for Toolbar item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.ClickEventArgs>","Documentation":"\n            <summary>\n            Event triggers when click the toolbar item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Align","TypeName":"Syncfusion.Blazor.Navigations.ItemAlign","IsEnum":true,"Documentation":"\n             <summary>\n             Specifies the location for aligning Toolbar items on the Toolbar. Each command will be aligned according to the `Align` property.\n             Possible values are:\n             - Left: To align commands to the left side of the Toolbar.\n             - Center: To align commands at the center of the Toolbar.\n             - Right: To align commands to the right side of the Toolbar.\n            \n             </summary>\n        ","Metadata":{"Common.PropertyName":"Align"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines single/multiple classes (separated by space) to be used for customization of commands.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether an item should be disabled or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Defines htmlAttributes used to add custom attributes to Toolbar command.\n            Supports HTML attributes such as style, class, etc.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the unique ID to be used with button or input element of Toolbar items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Overflow","TypeName":"Syncfusion.Blazor.Navigations.OverflowOption","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the Toolbar command display area when an element's content is too large to fit available space.\n            This is applicable only to `Popup` mode. Possible values are:\n            - Show:  Always shows the item as the primary priority on the Toolbar.\n            - Hide: Always shows the item as the secondary priority on the popup.\n            - None: No priority for display, and as per normal order moves to popup when content exceeds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Overflow"}},{"Kind":"Components.Component","Name":"PrefixIcon","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines single/multiple classes separated by space used to specify an icon for the button.\n            The icon will be positioned before the text content if text is available, otherwise the icon alone will be rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PrefixIcon"}},{"Kind":"Components.Component","Name":"ShowAlwaysInPopup","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Defines the priority of items to display it in popup always.\n            It allows to maintain toolbar item on popup always but it does not work for toolbar priority items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowAlwaysInPopup"}},{"Kind":"Components.Component","Name":"ShowTextOn","TypeName":"Syncfusion.Blazor.Navigations.DisplayMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies where the button text will be displayed on popup mode of the Toolbar.\n            Possible values are:\n            - Toolbar:  Text will be displayed on Toolbar only.\n            - Overflow: Text will be displayed only when content overflows to popup.\n            - Both: Text will be displayed on popup and Toolbar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowTextOn"}},{"Kind":"Components.Component","Name":"SuffixIcon","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines single/multiple classes separated by space used to specify an icon for the button.\n            The icon will be positioned after the text content if text is available.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SuffixIcon"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n             <summary>\n             Specifies the HTML element/element ID as a string that can be added as a Toolbar command.\n            \n             </summary>\n        ","Metadata":{"Common.PropertyName":"Template","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text to be displayed on the Toolbar button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"TooltipText","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text to be displayed on hovering the Toolbar button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipText"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Navigations.ItemType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the types of command to be rendered in the Toolbar.\n            Supported types are:\n            - Button: Creates the Button control with its given properties like text, prefixIcon, etc.\n            - Separator: Adds a horizontal line that separates the Toolbar commands.\n            - Input: Creates an input element that is applicable to template rendering with Syncfusion controls like DropDownList,\n            AutoComplete, etc.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether an item should be hidden or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the Toolbar button commands.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.ToolbarItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1955757721,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.ToolbarItem.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for Toolbar item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ToolbarItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.ToolbarItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1906533551,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.ToolbarItem.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for Toolbar item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.ToolbarItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.ToolbarItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1034405706,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.ToolbarItem.Template","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n             <summary>\n             Specifies the HTML element/element ID as a string that can be added as a Toolbar command.\n            \n             </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"ToolbarItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.ToolbarItem.Template","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2054916650,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.ToolbarItem.Template","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n             <summary>\n             Specifies the HTML element/element ID as a string that can be added as a Toolbar command.\n            \n             </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"Syncfusion.Blazor.Navigations.ToolbarItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.ToolbarItem.Template","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-606454167,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.ToolbarItems","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            A list of items that is used to configure Toolbar commands.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ToolbarItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for Toolbar items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.ToolbarItems"}},{"HashCode":315434988,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.ToolbarItems","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            A list of items that is used to configure Toolbar commands.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.ToolbarItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child Content for Toolbar items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.ToolbarItems","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-593666527,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.ToolbarItems.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for Toolbar items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ToolbarItems"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.ToolbarItems.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":270567737,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.ToolbarItems.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child Content for Toolbar items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.ToolbarItems"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.ToolbarItems.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1340386466,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the TreeView component.\n            </summary>\n            <summary>\n            Specifies the TreeView component.\n            </summary>\n            <summary>\n            SfTreeView component.\n            </summary>\n            <summary>\n            The TreeView component is used to represent hierarchical data in a tree like structure with advanced functions to edit, drag and drop, select with CheckBox and more.\n            TreeView can be populated from a data source such as an array of data's or from DataManager.\n            </summary>\n            <typeparam name=\"TValue\">\"TValue parameter\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfTreeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.SfTreeView<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Get the RenderFragment content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AllowDragAndDrop","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the TreeView allows drag and drop of nodes. To drag and drop a node in\n            desktop, hold the mouse on the node, drag it to the target node and drop the node by releasing\n            the mouse. For touch devices, drag and drop operation is performed by touch, touch move\n            and touch end.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowDragAndDrop"}},{"Kind":"Components.Component","Name":"AllowEditing","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables editing of the text in the TreeView node. When `AllowEditing` property is set\n            to true, the TreeView allows you to edit the node by double clicking the node or by navigating to\n            the node and pressing F2 key.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowEditing"}},{"Kind":"Components.Component","Name":"AllowMultiSelection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables multi-selection of nodes. To select multiple nodes:\n             Select the nodes by holding down the CTRL key while clicking on the nodes.\n             Select consecutive nodes by clicking the first node to select and hold down the SHIFT key\n            and click the last node to select.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowMultiSelection"}},{"Kind":"Components.Component","Name":"AllowTextWrap","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables to wrap the text in the TreeView node. \n            When the `AllowTextWrap` property is set to true, the TreeView node text content will wrap to the next line\n            when its text content exceeds the width of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowTextWrap"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings","Documentation":"\n            <summary>\n            Specifies the type of animation applied on expanding and collapsing the nodes along with duration.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"AutoCheck","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allow us to specify the parent and child nodes to get auto check while we check or uncheck a node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoCheck"}},{"Kind":"Components.Component","Name":"CheckedNodes","TypeName":"System.String[]","Documentation":"\n            <summary>\n            The `CheckedNodes` property is used to set the nodes that need to be checked or\n            get the ID of nodes that are currently checked in the TreeView component.\n            The `checkedNodes` property depends upon the value of `showCheckBox` property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CheckedNodes"}},{"Kind":"Components.Component","Name":"CheckedNodesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the checked nodes changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CheckedNodesChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS classes to be added with root element of the TreeView to help customize the appearance of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the TreeView component is disabled or not.\n            When set to true, user interaction will not be occurred in TreeView.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"DropArea","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the area in which the draggable element movement will be occurring. Outside that area will be restricted\n            for the draggable element movement. By default, the draggable element movement occurs in the entire page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropArea"}},{"Kind":"Components.Component","Name":"EnableHtmlSanitizer","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Defines whether to allow the cross-scripting site or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableHtmlSanitizer"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables persisting TreeView state between page reloads. If enabled, following APIs will persist.\n            1. `SelectedNodes` - Represents the nodes that are selected in the TreeView component.\n            2. `checkedNodes`  - Represents the nodes that are checked in the TreeView component.\n            3. `expandedNodes` - Represents the nodes that are expanded in the TreeView component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"ExpandOn","TypeName":"Syncfusion.Blazor.Navigations.ExpandAction","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the action on which the node expands or collapses. The available actions are,\n             `Click` - The expand/collapse operation happens when you single-click the node in both desktop and mobile devices.\n             `DblClick` - The expand/collapse operation happens when you double-click the node in both desktop and mobile devices.\n             `None` - The expand/collapse operation will not happen when you single-click or double-click the node in both desktop\n             and mobile devices.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandOn"}},{"Kind":"Components.Component","Name":"ExpandedNodes","TypeName":"System.String[]","Documentation":"\n            <summary>\n            Represents the expanded nodes in the TreeView component. We can set the nodes that need to be\n            expanded or get the ID of the nodes that are currently expanded by using this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandedNodes"}},{"Kind":"Components.Component","Name":"ExpandedNodesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the expanded nodes changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandedNodesChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Fields","TypeName":"Syncfusion.Blazor.Navigations.TreeViewFieldsSettings<TValue>","Documentation":"\n            <summary>\n            Specifies the data source and mapping fields to render TreeView nodes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Fields","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FullRowNavigable","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If this property is set to true, then the entire TreeView node will be navigate-able instead of text element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FullRowNavigable"}},{"Kind":"Components.Component","Name":"FullRowSelect","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            On enabling this property, the entire row of the TreeView node gets selected by clicking a node.\n            When disabled only the corresponding node's text gets selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FullRowSelect"}},{"Kind":"Components.Component","Name":"LoadOnDemand","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            By default, the load on demand (Lazy load) is set to true. By disabling this property, all the tree nodes are rendered at the\n            beginning itself.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LoadOnDemand"}},{"Kind":"Components.Component","Name":"SelectedNodes","TypeName":"System.String[]","Documentation":"\n            <summary>\n            Represents the selected nodes in the TreeView component. We can set the nodes that need to be\n            selected or get the ID of the nodes that are currently selected by using this property.\n            On enabling `AllowMultiSelection` property we can select multiple nodes and on disabling\n            it we can select only a single node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedNodes"}},{"Kind":"Components.Component","Name":"SelectedNodesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the selected nodes changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedNodesChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ShowCheckBox","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates that the nodes will display CheckBoxes in the TreeView.\n            The CheckBox will be displayed next to the expand/collapse icon of the node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCheckBox"}},{"Kind":"Components.Component","Name":"SortOrder","TypeName":"Syncfusion.Blazor.Navigations.SortOrder","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies a value that indicates whether the nodes are sorted in the ascending or descending order,\n            or are not sorted at all. The available types of sort order are,\n             `None` - The nodes are not sorted.\n             `Ascending` - The nodes are sorted in the ascending order.\n             `Descending` - The nodes are sorted in the ascending order.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortOrder"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Specify the HtmlAttributes for TreeView.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"TreeViewTemplates","TypeName":"Syncfusion.Blazor.Navigations.TreeViewTemplates<TValue>","Documentation":"\n            <summary>\n            Specifies the custom item template of TreeView Node item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TreeViewTemplates","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets id attribute for the treeview element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>","Components.GenericTyped":"True"}},{"HashCode":485488647,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the TreeView component.\n            </summary>\n            <summary>\n            Specifies the TreeView component.\n            </summary>\n            <summary>\n            SfTreeView component.\n            </summary>\n            <summary>\n            The TreeView component is used to represent hierarchical data in a tree like structure with advanced functions to edit, drag and drop, select with CheckBox and more.\n            TreeView can be populated from a data source such as an array of data's or from DataManager.\n            </summary>\n            <typeparam name=\"TValue\">\"TValue parameter\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.SfTreeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.SfTreeView<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Get the RenderFragment content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AllowDragAndDrop","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the TreeView allows drag and drop of nodes. To drag and drop a node in\n            desktop, hold the mouse on the node, drag it to the target node and drop the node by releasing\n            the mouse. For touch devices, drag and drop operation is performed by touch, touch move\n            and touch end.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowDragAndDrop"}},{"Kind":"Components.Component","Name":"AllowEditing","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables editing of the text in the TreeView node. When `AllowEditing` property is set\n            to true, the TreeView allows you to edit the node by double clicking the node or by navigating to\n            the node and pressing F2 key.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowEditing"}},{"Kind":"Components.Component","Name":"AllowMultiSelection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables multi-selection of nodes. To select multiple nodes:\n             Select the nodes by holding down the CTRL key while clicking on the nodes.\n             Select consecutive nodes by clicking the first node to select and hold down the SHIFT key\n            and click the last node to select.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowMultiSelection"}},{"Kind":"Components.Component","Name":"AllowTextWrap","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables to wrap the text in the TreeView node. \n            When the `AllowTextWrap` property is set to true, the TreeView node text content will wrap to the next line\n            when its text content exceeds the width of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowTextWrap"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings","Documentation":"\n            <summary>\n            Specifies the type of animation applied on expanding and collapsing the nodes along with duration.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"AutoCheck","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allow us to specify the parent and child nodes to get auto check while we check or uncheck a node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoCheck"}},{"Kind":"Components.Component","Name":"CheckedNodes","TypeName":"System.String[]","Documentation":"\n            <summary>\n            The `CheckedNodes` property is used to set the nodes that need to be checked or\n            get the ID of nodes that are currently checked in the TreeView component.\n            The `checkedNodes` property depends upon the value of `showCheckBox` property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CheckedNodes"}},{"Kind":"Components.Component","Name":"CheckedNodesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the checked nodes changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CheckedNodesChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS classes to be added with root element of the TreeView to help customize the appearance of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the TreeView component is disabled or not.\n            When set to true, user interaction will not be occurred in TreeView.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"DropArea","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the area in which the draggable element movement will be occurring. Outside that area will be restricted\n            for the draggable element movement. By default, the draggable element movement occurs in the entire page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropArea"}},{"Kind":"Components.Component","Name":"EnableHtmlSanitizer","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Defines whether to allow the cross-scripting site or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableHtmlSanitizer"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables persisting TreeView state between page reloads. If enabled, following APIs will persist.\n            1. `SelectedNodes` - Represents the nodes that are selected in the TreeView component.\n            2. `checkedNodes`  - Represents the nodes that are checked in the TreeView component.\n            3. `expandedNodes` - Represents the nodes that are expanded in the TreeView component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"ExpandOn","TypeName":"Syncfusion.Blazor.Navigations.ExpandAction","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the action on which the node expands or collapses. The available actions are,\n             `Click` - The expand/collapse operation happens when you single-click the node in both desktop and mobile devices.\n             `DblClick` - The expand/collapse operation happens when you double-click the node in both desktop and mobile devices.\n             `None` - The expand/collapse operation will not happen when you single-click or double-click the node in both desktop\n             and mobile devices.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandOn"}},{"Kind":"Components.Component","Name":"ExpandedNodes","TypeName":"System.String[]","Documentation":"\n            <summary>\n            Represents the expanded nodes in the TreeView component. We can set the nodes that need to be\n            expanded or get the ID of the nodes that are currently expanded by using this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandedNodes"}},{"Kind":"Components.Component","Name":"ExpandedNodesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the expanded nodes changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandedNodesChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Fields","TypeName":"Syncfusion.Blazor.Navigations.TreeViewFieldsSettings<TValue>","Documentation":"\n            <summary>\n            Specifies the data source and mapping fields to render TreeView nodes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Fields","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FullRowNavigable","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If this property is set to true, then the entire TreeView node will be navigate-able instead of text element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FullRowNavigable"}},{"Kind":"Components.Component","Name":"FullRowSelect","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            On enabling this property, the entire row of the TreeView node gets selected by clicking a node.\n            When disabled only the corresponding node's text gets selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FullRowSelect"}},{"Kind":"Components.Component","Name":"LoadOnDemand","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            By default, the load on demand (Lazy load) is set to true. By disabling this property, all the tree nodes are rendered at the\n            beginning itself.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LoadOnDemand"}},{"Kind":"Components.Component","Name":"SelectedNodes","TypeName":"System.String[]","Documentation":"\n            <summary>\n            Represents the selected nodes in the TreeView component. We can set the nodes that need to be\n            selected or get the ID of the nodes that are currently selected by using this property.\n            On enabling `AllowMultiSelection` property we can select multiple nodes and on disabling\n            it we can select only a single node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedNodes"}},{"Kind":"Components.Component","Name":"SelectedNodesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the selected nodes changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedNodesChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ShowCheckBox","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates that the nodes will display CheckBoxes in the TreeView.\n            The CheckBox will be displayed next to the expand/collapse icon of the node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCheckBox"}},{"Kind":"Components.Component","Name":"SortOrder","TypeName":"Syncfusion.Blazor.Navigations.SortOrder","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies a value that indicates whether the nodes are sorted in the ascending or descending order,\n            or are not sorted at all. The available types of sort order are,\n             `None` - The nodes are not sorted.\n             `Ascending` - The nodes are sorted in the ascending order.\n             `Descending` - The nodes are sorted in the ascending order.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortOrder"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Specify the HtmlAttributes for TreeView.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"TreeViewTemplates","TypeName":"Syncfusion.Blazor.Navigations.TreeViewTemplates<TValue>","Documentation":"\n            <summary>\n            Specifies the custom item template of TreeView Node item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TreeViewTemplates","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets id attribute for the treeview element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2010725184,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <exclude />\n            <summary>\n            Get the RenderFragment content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfTreeView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":315962471,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <exclude />\n            <summary>\n            Get the RenderFragment content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.SfTreeView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-983557156,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TreeViewAnimationCollapse","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the animation to appear while collapsing the TreeView item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewAnimationCollapse"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.AnimationEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation effect for collapsing the TreeView node.\n            Default animation is given as SlideUp. You can also disable the animation by setting the animation effect as None.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time duration to transform content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied when transforming the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewAnimationCollapse"}},{"HashCode":1262587398,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TreeViewAnimationCollapse","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the animation to appear while collapsing the TreeView item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.TreeViewAnimationCollapse"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.AnimationEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation effect for collapsing the TreeView node.\n            Default animation is given as SlideUp. You can also disable the animation by setting the animation effect as None.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time duration to transform content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied when transforming the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewAnimationCollapse","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-858822941,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TreeViewAnimationExpand","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the animation to appear while expanding the TreeView item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewAnimationExpand"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.AnimationEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation effect for expanding the TreeView node.\n            Default animation is given as SlideDown. You can also disable the animation by setting the animation effect as None.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time duration to transform content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied when transforming the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewAnimationExpand"}},{"HashCode":930963150,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TreeViewAnimationExpand","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the animation to appear while expanding the TreeView item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.TreeViewAnimationExpand"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.AnimationEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation effect for expanding the TreeView node.\n            Default animation is given as SlideDown. You can also disable the animation by setting the animation effect as None.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time duration to transform content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied when transforming the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewAnimationExpand","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1684510713,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TreeViewEvents<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            The TreeView allows us to control the component by using events.\n            </summary>\n            <typeparam name=\"TValue\">\"Tvalue paramter\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.TreeViewEvents<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnActionFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.FailureEventArgs>","Documentation":"\n            <summary>\n            Triggers when any TreeView action failed to fetch the desired results.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.ActionEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView control is created successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DataBound","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.DataBoundEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers when data source is populated in the TreeView.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataBound","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DataSourceChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.DataSourceChangedEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers when data source is changed in the TreeView. The data source will be changed after performing some operation like\n            drag and drop, node editing, adding and removing node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSourceChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.ActionEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView control is destroyed successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnNodeRender","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeRenderEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers before the TreeView node is appended to the TreeView element. It helps to customize specific nodes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnNodeRender","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs>","Documentation":"\n            <summary>\n            Triggers when key press is successful. It helps to customize the operations at key press.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnKeyPress","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeChecked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeCheckEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node is checked/unchecked successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeChecked","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeChecking","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeCheckEventArgs>","Documentation":"\n            <summary>\n            Triggers before the TreeView node is to be checked/unchecked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeChecking","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeClicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeClickEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node is clicked successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeClicked","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeCollapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeExpandEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node collapses successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeCollapsed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeCollapsing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeExpandEventArgs>","Documentation":"\n            <summary>\n            Triggers before the TreeView node collapses.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeCollapsing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnNodeDragStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.DragAndDropEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node drag (move) starts.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnNodeDragStart","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnNodeDragStop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.DragAndDropEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node dragging (move) stops.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnNodeDragStop","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnNodeDragged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.DragAndDropEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node drag (move) is stopped.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnNodeDragged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeDropped","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.DragAndDropEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node is dropped on target element successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeDropped","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeEdited","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeEditEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node is renamed successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeEdited","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeEditing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeEditEventArgs>","Documentation":"\n            <summary>\n            Triggers before the TreeView node is renamed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeEditing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeExpanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeExpandEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node expands successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeExpanded","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeExpanding","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeExpandEventArgs>","Documentation":"\n            <summary>\n            Triggers before the TreeView node is to be expanded.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeExpanding","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeSelectEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node is selected/unselected successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeSelected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeSelecting","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeSelectEventArgs>","Documentation":"\n            <summary>\n            Triggers before the TreeView node is selected/unselected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeSelecting","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewEvents<TValue>","Components.GenericTyped":"True"}},{"HashCode":1217125119,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TreeViewEvents<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            The TreeView allows us to control the component by using events.\n            </summary>\n            <typeparam name=\"TValue\">\"Tvalue paramter\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.TreeViewEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.TreeViewEvents<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnActionFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.FailureEventArgs>","Documentation":"\n            <summary>\n            Triggers when any TreeView action failed to fetch the desired results.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.ActionEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView control is created successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DataBound","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.DataBoundEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers when data source is populated in the TreeView.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataBound","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DataSourceChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.DataSourceChangedEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers when data source is changed in the TreeView. The data source will be changed after performing some operation like\n            drag and drop, node editing, adding and removing node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSourceChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.ActionEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView control is destroyed successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnNodeRender","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeRenderEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers before the TreeView node is appended to the TreeView element. It helps to customize specific nodes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnNodeRender","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs>","Documentation":"\n            <summary>\n            Triggers when key press is successful. It helps to customize the operations at key press.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnKeyPress","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeChecked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeCheckEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node is checked/unchecked successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeChecked","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeChecking","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeCheckEventArgs>","Documentation":"\n            <summary>\n            Triggers before the TreeView node is to be checked/unchecked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeChecking","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeClicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeClickEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node is clicked successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeClicked","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeCollapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeExpandEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node collapses successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeCollapsed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeCollapsing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeExpandEventArgs>","Documentation":"\n            <summary>\n            Triggers before the TreeView node collapses.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeCollapsing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnNodeDragStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.DragAndDropEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node drag (move) starts.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnNodeDragStart","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnNodeDragStop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.DragAndDropEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node dragging (move) stops.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnNodeDragStop","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnNodeDragged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.DragAndDropEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node drag (move) is stopped.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnNodeDragged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeDropped","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.DragAndDropEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node is dropped on target element successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeDropped","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeEdited","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeEditEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node is renamed successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeEdited","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeEditing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeEditEventArgs>","Documentation":"\n            <summary>\n            Triggers before the TreeView node is renamed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeEditing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeExpanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeExpandEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node expands successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeExpanded","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeExpanding","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeExpandEventArgs>","Documentation":"\n            <summary>\n            Triggers before the TreeView node is to be expanded.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeExpanding","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeSelectEventArgs>","Documentation":"\n            <summary>\n            Triggers when the TreeView node is selected/unselected successfully.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeSelected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"NodeSelecting","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.NodeSelectEventArgs>","Documentation":"\n            <summary>\n            Triggers before the TreeView node is selected/unselected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeSelecting","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewEvents<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2126530450,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TreeViewFieldChild<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n             A class used for configuring the TreeView child element fields properties.\n            </summary>\n            <typeparam name=\"TValue\">\"Specifies the Tvalue paramater\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewFieldChild"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.TreeViewFieldChild<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the Treeview child content.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Child","TypeName":"System.String","Documentation":"\n            <summary>\n            Binds the field settings for child nodes or mapping field for nested nodes objects that contain array of JSON objects.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Child"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Documentation":"\n            <summary>\n            Specifies the array of JavaScript objects or instance of DataManager to populate the nodes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for expand state of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Expanded"}},{"Kind":"Components.Component","Name":"HasChildren","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for hasChildren to check whether a node has child nodes or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HasChildren"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for htmlAttributes to be added to the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for icon class of each TreeView node that will be added before the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the ID field mapped in dataSource.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"ImageUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for image URL of each TreeView node where image will be added before the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImageUrl"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the field for checked state of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"NavigateUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for navigateUrl to be added as hyper-link of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NavigateUrl"}},{"Kind":"Components.Component","Name":"ParentID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the parent ID field mapped in dataSource.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParentID"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            This paramter will execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for selected state of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"TableName","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the table name used to fetch data from a specific table in the server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TableName"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for text displayed as TreeView node's display text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for tooltip that will be displayed as hovering text of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewFieldChild<TValue>","Components.GenericTyped":"True"}},{"HashCode":767931882,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TreeViewFieldChild<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n             A class used for configuring the TreeView child element fields properties.\n            </summary>\n            <typeparam name=\"TValue\">\"Specifies the Tvalue paramater\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.TreeViewFieldChild"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.TreeViewFieldChild<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the Treeview child content.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Child","TypeName":"System.String","Documentation":"\n            <summary>\n            Binds the field settings for child nodes or mapping field for nested nodes objects that contain array of JSON objects.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Child"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Documentation":"\n            <summary>\n            Specifies the array of JavaScript objects or instance of DataManager to populate the nodes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for expand state of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Expanded"}},{"Kind":"Components.Component","Name":"HasChildren","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for hasChildren to check whether a node has child nodes or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HasChildren"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for htmlAttributes to be added to the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for icon class of each TreeView node that will be added before the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the ID field mapped in dataSource.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"ImageUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for image URL of each TreeView node where image will be added before the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImageUrl"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the field for checked state of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"NavigateUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for navigateUrl to be added as hyper-link of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NavigateUrl"}},{"Kind":"Components.Component","Name":"ParentID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the parent ID field mapped in dataSource.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParentID"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            This paramter will execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for selected state of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"TableName","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the table name used to fetch data from a specific table in the server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TableName"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for text displayed as TreeView node's display text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for tooltip that will be displayed as hovering text of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewFieldChild<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":976306058,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.TreeViewFieldChild<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the Treeview child content.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TreeViewFieldChild"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewFieldChild<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1072434975,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.TreeViewFieldChild<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the Treeview child content.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.TreeViewFieldChild"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewFieldChild<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-67504401,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TreeViewFieldsSettings<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n             A class used for configuring the TreeView fields setting properties.\n            </summary>\n            <typeparam name=\"TValue\">\"Specifies the TValue parameter\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewFieldsSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.TreeViewFieldsSettings<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the child content.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DataSourceChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<TValue>>","Documentation":"\n            <summary>\n            Invokes when data source changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSourceChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Child","TypeName":"System.String","Documentation":"\n            <summary>\n            Binds the field settings for child nodes or mapping field for nested nodes objects that contain array of JSON objects.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Child"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Documentation":"\n            <summary>\n            Specifies the array of JavaScript objects or instance of DataManager to populate the nodes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for expand state of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Expanded"}},{"Kind":"Components.Component","Name":"HasChildren","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for hasChildren to check whether a node has child nodes or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HasChildren"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for htmlAttributes to be added to the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for icon class of each TreeView node that will be added before the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the ID field mapped in dataSource.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"ImageUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for image URL of each TreeView node where image will be added before the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImageUrl"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the field for checked state of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"NavigateUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for navigateUrl to be added as hyper-link of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NavigateUrl"}},{"Kind":"Components.Component","Name":"ParentID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the parent ID field mapped in dataSource.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParentID"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            This paramter will execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for selected state of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"TableName","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the table name used to fetch data from a specific table in the server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TableName"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for text displayed as TreeView node's display text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for tooltip that will be displayed as hovering text of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewFieldsSettings<TValue>","Components.GenericTyped":"True"}},{"HashCode":2015183455,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TreeViewFieldsSettings<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n             A class used for configuring the TreeView fields setting properties.\n            </summary>\n            <typeparam name=\"TValue\">\"Specifies the TValue parameter\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.TreeViewFieldsSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.TreeViewFieldsSettings<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the child content.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DataSourceChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<TValue>>","Documentation":"\n            <summary>\n            Invokes when data source changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSourceChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Child","TypeName":"System.String","Documentation":"\n            <summary>\n            Binds the field settings for child nodes or mapping field for nested nodes objects that contain array of JSON objects.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Child"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Documentation":"\n            <summary>\n            Specifies the array of JavaScript objects or instance of DataManager to populate the nodes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for expand state of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Expanded"}},{"Kind":"Components.Component","Name":"HasChildren","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for hasChildren to check whether a node has child nodes or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HasChildren"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for htmlAttributes to be added to the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for icon class of each TreeView node that will be added before the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the ID field mapped in dataSource.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"ImageUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for image URL of each TreeView node where image will be added before the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImageUrl"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the field for checked state of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"NavigateUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for navigateUrl to be added as hyper-link of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NavigateUrl"}},{"Kind":"Components.Component","Name":"ParentID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the parent ID field mapped in dataSource.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParentID"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            This paramter will execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for selected state of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"TableName","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the table name used to fetch data from a specific table in the server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TableName"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for text displayed as TreeView node's display text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for tooltip that will be displayed as hovering text of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewFieldsSettings<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2114752370,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.TreeViewFieldsSettings<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the child content.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TreeViewFieldsSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewFieldsSettings<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":811098127,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.TreeViewFieldsSettings<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the child content.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.TreeViewFieldsSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewFieldsSettings<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1662952535,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            A class used for configuring the TreeView animation properties.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewNodeAnimationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Child Content for the Treeview Animation Settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Collapse","TypeName":"Syncfusion.Blazor.Navigations.TreeViewAnimationCollapse","Documentation":"\n            <summary>\n            Specifies the animation to appear when collapsing the TreeView item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Collapse"}},{"Kind":"Components.Component","Name":"Expand","TypeName":"Syncfusion.Blazor.Navigations.TreeViewAnimationExpand","Documentation":"\n            <summary>\n            Specifies the animation to appear when expanding the TreeView item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Expand"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings"}},{"HashCode":-2046114665,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            A class used for configuring the TreeView animation properties.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Child Content for the Treeview Animation Settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Collapse","TypeName":"Syncfusion.Blazor.Navigations.TreeViewAnimationCollapse","Documentation":"\n            <summary>\n            Specifies the animation to appear when collapsing the TreeView item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Collapse"}},{"Kind":"Components.Component","Name":"Expand","TypeName":"Syncfusion.Blazor.Navigations.TreeViewAnimationExpand","Documentation":"\n            <summary>\n            Specifies the animation to appear when expanding the TreeView item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Expand"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2111398932,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <exclude />\n            <summary>\n            Child Content for the Treeview Animation Settings.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TreeViewNodeAnimationSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1403904990,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <exclude />\n            <summary>\n            Child Content for the Treeview Animation Settings.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1011237501,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TreeViewTemplates<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            The TreeView component allows you to customize the look of TreeView nodes using Templates.\n            </summary>\n            <typeparam name=\"TValue\">\"Specifies the Tvalue\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.TreeViewTemplates<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"NodeTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TValue>","Documentation":"\n            <summary>\n            Specifies the NodeTemplate.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewTemplates<TValue>","Components.GenericTyped":"True"}},{"HashCode":-848056893,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.TreeViewTemplates<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            The TreeView component allows you to customize the look of TreeView nodes using Templates.\n            </summary>\n            <typeparam name=\"TValue\">\"Specifies the Tvalue\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.TreeViewTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.TreeViewTemplates<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"NodeTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TValue>","Documentation":"\n            <summary>\n            Specifies the NodeTemplate.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NodeTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewTemplates<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1497068431,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.TreeViewTemplates<TValue>.NodeTemplate","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the NodeTemplate.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NodeTemplate","ParentTag":"TreeViewTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NodeTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewTemplates<TValue>.NodeTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1286533843,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.TreeViewTemplates<TValue>.NodeTemplate","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the NodeTemplate.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NodeTemplate","ParentTag":"Syncfusion.Blazor.Navigations.TreeViewTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NodeTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewTemplates<TValue>.NodeTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1938085668,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.ToolbarEvents","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ToolbarEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Clicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.ClickEventArgs>","Documentation":"\n            <summary>\n            The event will be fired on clicking the Toolbar elements.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Clicked","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            The event will be fired when the control is rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            The event will be fired when the control gets destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.ToolbarEvents"}},{"HashCode":-510722968,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.ToolbarEvents","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.ToolbarEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Clicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Navigations.ClickEventArgs>","Documentation":"\n            <summary>\n            The event will be fired on clicking the Toolbar elements.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Clicked","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            The event will be fired when the control is rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            The event will be fired when the control gets destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.ToolbarEvents","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1748309645,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations._Imports","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations._Imports"}},{"HashCode":1598910783,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations._Imports","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations._Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations._Imports","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":176930628,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.AccordionItemRender","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the accordion item renderer.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccordionItemRender"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Item","TypeName":"Syncfusion.Blazor.Navigations.AccordionItem","Documentation":"\n            <summary>\n            Gets or sets the accordion item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Item"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.AccordionItemRender"}},{"HashCode":-178783178,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.AccordionItemRender","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the accordion item renderer.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.Internal.AccordionItemRender"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Item","TypeName":"Syncfusion.Blazor.Navigations.AccordionItem","Documentation":"\n            <summary>\n            Gets or sets the accordion item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Item"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.AccordionItemRender","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":368208870,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.SfMenuBase<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfMenuBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.Internal.SfMenuBase<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child content for menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the Menu container.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<TValue>","Documentation":"\n            <summary>\n            Specifies menu items with its properties which will be rendered as ContextMenu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ShowItemOnClick","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to show the sub menu or not on click.\n            When set to true, the sub menu will open only on mouse click.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowItemOnClick"}},{"Kind":"Components.Component","Name":"EnableScrolling","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to enable / disable the scrollable option in Menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableScrolling"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.SfMenuBase<TValue>","Components.GenericTyped":"True"}},{"HashCode":-1778089985,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.SfMenuBase<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.Internal.SfMenuBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.Internal.SfMenuBase<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child content for menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the Menu container.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<TValue>","Documentation":"\n            <summary>\n            Specifies menu items with its properties which will be rendered as ContextMenu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ShowItemOnClick","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to show the sub menu or not on click.\n            When set to true, the sub menu will open only on mouse click.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowItemOnClick"}},{"Kind":"Components.Component","Name":"EnableScrolling","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to enable / disable the scrollable option in Menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableScrolling"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.SfMenuBase<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2071010613,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.Internal.SfMenuBase<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child content for menu.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfMenuBase"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.SfMenuBase<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-128783517,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Navigations.Internal.SfMenuBase<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Child content for menu.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Navigations.Internal.SfMenuBase"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.SfMenuBase<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":264026813,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.CreateMenuItems<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CreateMenuItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.Internal.CreateMenuItems<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.Navigations.Internal.CreateMenuItems<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<TItem>","Metadata":{"Common.PropertyName":"Items","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"MenuClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"MenuClass"}},{"Kind":"Components.Component","Name":"ContainerClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"ContainerClass"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.CreateMenuItems<TValue, TItem>","Components.GenericTyped":"True"}},{"HashCode":-1053176528,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.CreateMenuItems<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.Internal.CreateMenuItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.Internal.CreateMenuItems<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.Navigations.Internal.CreateMenuItems<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<TItem>","Metadata":{"Common.PropertyName":"Items","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"MenuClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"MenuClass"}},{"Kind":"Components.Component","Name":"ContainerClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"ContainerClass"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.CreateMenuItems<TValue, TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":50312346,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.CreateMenuItem<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CreateMenuItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.Internal.CreateMenuItem<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.Navigations.Internal.CreateMenuItem<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<TItem>","Metadata":{"Common.PropertyName":"Items","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.CreateMenuItem<TValue, TItem>","Components.GenericTyped":"True"}},{"HashCode":1833071695,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.CreateMenuItem<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.Internal.CreateMenuItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.Internal.CreateMenuItem<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Syncfusion.Blazor.Navigations.Internal.CreateMenuItem<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<TItem>","Metadata":{"Common.PropertyName":"Items","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.CreateMenuItem<TValue, TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-648501028,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.ToolbarContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies toolbar content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ToolbarContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Item","TypeName":"Syncfusion.Blazor.Navigations.ItemModel","Documentation":"\n            <summary>\n            Defines the toolbar item model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Item"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines toolbar item index.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Index"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.ToolbarContent"}},{"HashCode":487308164,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.ToolbarContent","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies toolbar content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.Internal.ToolbarContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Item","TypeName":"Syncfusion.Blazor.Navigations.ItemModel","Documentation":"\n            <summary>\n            Defines the toolbar item model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Item"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines toolbar item index.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Index"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.ToolbarContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-824261730,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.ComplexListItems<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the complex list items.\n            </summary>\n            <typeparam name=\"TValue\">\"TypeParam\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ComplexListItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.Internal.ComplexListItems<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TreeOptions","TypeName":"Syncfusion.Blazor.Navigations.Internal.TreeOptions<TValue>","Documentation":"\n            <summary>\n            Specifies the TreeOption field values.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TreeOptions","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"HasChild","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the treeview node has child or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HasChild"}},{"Kind":"Components.Component","Name":"MappedData","TypeName":"Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping<System.Collections.Generic.List<TValue>>","Documentation":"\n            <summary>\n            Specifies the Treeview mapped data values.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MappedData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"RandomID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the Treeview node data id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RandomID"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the index position of Treeview node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Index"}},{"Kind":"Components.Component","Name":"ListModel","TypeName":"Syncfusion.Blazor.Navigations.Internal.ListModel","Documentation":"\n            <summary>\n            Specifies the treeview list base option model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListModel"}},{"Kind":"Components.Component","Name":"ListData","TypeName":"TValue","Documentation":"\n            <summary>\n            Specifies the datasource of list element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TreeNodeLevel","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tree node level of treeview nodes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TreeNodeLevel"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.ComplexListItems<TValue>","Components.GenericTyped":"True"}},{"HashCode":-615504692,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.ComplexListItems<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the complex list items.\n            </summary>\n            <typeparam name=\"TValue\">\"TypeParam\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.Internal.ComplexListItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.Internal.ComplexListItems<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TreeOptions","TypeName":"Syncfusion.Blazor.Navigations.Internal.TreeOptions<TValue>","Documentation":"\n            <summary>\n            Specifies the TreeOption field values.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TreeOptions","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"HasChild","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the treeview node has child or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HasChild"}},{"Kind":"Components.Component","Name":"MappedData","TypeName":"Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping<System.Collections.Generic.List<TValue>>","Documentation":"\n            <summary>\n            Specifies the Treeview mapped data values.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MappedData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"RandomID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the Treeview node data id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RandomID"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the index position of Treeview node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Index"}},{"Kind":"Components.Component","Name":"ListModel","TypeName":"Syncfusion.Blazor.Navigations.Internal.ListModel","Documentation":"\n            <summary>\n            Specifies the treeview list base option model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListModel"}},{"Kind":"Components.Component","Name":"ListData","TypeName":"TValue","Documentation":"\n            <summary>\n            Specifies the datasource of list element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TreeNodeLevel","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tree node level of treeview nodes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TreeNodeLevel"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.ComplexListItems<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1809312303,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the ComplexCreateList.\n            </summary>\n            <typeparam name=\"TValue\">\"TypeParam\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CreateListFromComplex"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ListData","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Documentation":"\n            <summary>\n            Specifies the datasource of list element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TreeOptions","TypeName":"Syncfusion.Blazor.Navigations.Internal.TreeOptions<TValue>","Documentation":"\n            <summary>\n            Specifies the TreeOption field values.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TreeOptions","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TreeItemCreating","TypeName":"System.Action<Syncfusion.Blazor.Navigations.Internal.TreeItemCreatedArgs<TValue>>","Documentation":"\n            <summary>\n            Specifies the TreeItemCreating event.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TreeItemCreating","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TreeNodeLevel","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tree node level of treeview nodes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TreeNodeLevel"}},{"Kind":"Components.Component","Name":"ListModel","TypeName":"Syncfusion.Blazor.Navigations.Internal.ListModel","Documentation":"\n            <summary>\n            Specifies the treeview list base option model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListModel"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex<TValue>","Components.GenericTyped":"True"}},{"HashCode":-1529893541,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the ComplexCreateList.\n            </summary>\n            <typeparam name=\"TValue\">\"TypeParam\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ListData","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Documentation":"\n            <summary>\n            Specifies the datasource of list element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TreeOptions","TypeName":"Syncfusion.Blazor.Navigations.Internal.TreeOptions<TValue>","Documentation":"\n            <summary>\n            Specifies the TreeOption field values.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TreeOptions","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TreeItemCreating","TypeName":"System.Action<Syncfusion.Blazor.Navigations.Internal.TreeItemCreatedArgs<TValue>>","Documentation":"\n            <summary>\n            Specifies the TreeItemCreating event.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TreeItemCreating","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TreeNodeLevel","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tree node level of treeview nodes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TreeNodeLevel"}},{"Kind":"Components.Component","Name":"ListModel","TypeName":"Syncfusion.Blazor.Navigations.Internal.ListModel","Documentation":"\n            <summary>\n            Specifies the treeview list base option model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListModel"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-865899599,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.TreeViewListItems<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <exclude />\n            <summary>\n            Specifies the TreeViewListItems class.\n            </summary>\n            <typeparam name=\"TValue\">\"TypeParam\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewListItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.Internal.TreeViewListItems<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.TreeViewListItems<TValue>","Components.GenericTyped":"True"}},{"HashCode":515545351,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.TreeViewListItems<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <exclude />\n            <summary>\n            Specifies the TreeViewListItems class.\n            </summary>\n            <typeparam name=\"TValue\">\"TypeParam\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.Internal.TreeViewListItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.Internal.TreeViewListItems<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.TreeViewListItems<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-826010296,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.AnimationSettingsModel","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies class for expand / collapse animation settings.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AnimationSettingsModel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time duration to transform content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied when transforming the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.AnimationSettingsModel"}},{"HashCode":-1153841585,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.AnimationSettingsModel","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies class for expand / collapse animation settings.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.Internal.AnimationSettingsModel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time duration to transform content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied when transforming the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.AnimationSettingsModel","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1064087300,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.AnimationExpandModel","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the class for expand animation settings.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AnimationExpandModel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.AnimationEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation effect for expanding the TreeView node.\n            Default animation is given as SlideDown. You can also disable the animation by setting the animation effect as None.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time duration to transform content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied when transforming the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.AnimationExpandModel"}},{"HashCode":188453428,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.AnimationExpandModel","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the class for expand animation settings.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.Internal.AnimationExpandModel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.AnimationEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation effect for expanding the TreeView node.\n            Default animation is given as SlideDown. You can also disable the animation by setting the animation effect as None.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time duration to transform content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied when transforming the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.AnimationExpandModel","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1383627569,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.AnimationCollapseModel","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the class for collapse animation settings.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AnimationCollapseModel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.AnimationEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation effect for collapsing the TreeView node.\n            Default animation is given as SlideUp. You can also disable the animation by setting the animation effect as None.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time duration to transform content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied when transforming the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.AnimationCollapseModel"}},{"HashCode":1521305496,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.AnimationCollapseModel","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            Specifies the class for collapse animation settings.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.Internal.AnimationCollapseModel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.AnimationEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation effect for collapsing the TreeView node.\n            Default animation is given as SlideUp. You can also disable the animation by setting the animation effect as None.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time duration to transform content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the easing effect applied when transforming the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.AnimationCollapseModel","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2007252049,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.ListGeneration<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            List generation of TreeView component.\n            </summary>\n            <typeparam name=\"TValue\">\"TValue paramater\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ListGeneration"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.Internal.ListGeneration<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ListData","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Documentation":"\n            <summary>\n            Specifies the datasource of list element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TreeOptions","TypeName":"Syncfusion.Blazor.Navigations.Internal.TreeOptions<TValue>","Documentation":"\n            <summary>\n            Specifies the TreeOption field values.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TreeOptions","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TreeItemCreating","TypeName":"System.Action<Syncfusion.Blazor.Navigations.Internal.TreeItemCreatedArgs<TValue>>","Documentation":"\n            <summary>\n            Specifies the TreeItemCreating event.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TreeItemCreating","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TreeNodeLevel","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tree node level of treeview nodes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TreeNodeLevel"}},{"Kind":"Components.Component","Name":"ListModel","TypeName":"Syncfusion.Blazor.Navigations.Internal.ListModel","Documentation":"\n            <summary>\n            Specifies the treeview list base option model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListModel"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.ListGeneration<TValue>","Components.GenericTyped":"True"}},{"HashCode":-1938590874,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.ListGeneration<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n            List generation of TreeView component.\n            </summary>\n            <typeparam name=\"TValue\">\"TValue paramater\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.Internal.ListGeneration"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.Internal.ListGeneration<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ListData","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Documentation":"\n            <summary>\n            Specifies the datasource of list element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TreeOptions","TypeName":"Syncfusion.Blazor.Navigations.Internal.TreeOptions<TValue>","Documentation":"\n            <summary>\n            Specifies the TreeOption field values.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TreeOptions","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TreeItemCreating","TypeName":"System.Action<Syncfusion.Blazor.Navigations.Internal.TreeItemCreatedArgs<TValue>>","Documentation":"\n            <summary>\n            Specifies the TreeItemCreating event.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TreeItemCreating","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TreeNodeLevel","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the tree node level of treeview nodes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TreeNodeLevel"}},{"Kind":"Components.Component","Name":"ListModel","TypeName":"Syncfusion.Blazor.Navigations.Internal.ListModel","Documentation":"\n            <summary>\n            Specifies the treeview list base option model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListModel"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.ListGeneration<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1140924841,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n             A class used for configuring the TreeView fields setting properties.\n            </summary>\n            <typeparam name=\"TValue\">\"Specifies the Tvalue parameter\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewCommonFieldsSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Child","TypeName":"System.String","Documentation":"\n            <summary>\n            Binds the field settings for child nodes or mapping field for nested nodes objects that contain array of JSON objects.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Child"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Documentation":"\n            <summary>\n            Specifies the array of JavaScript objects or instance of DataManager to populate the nodes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for expand state of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Expanded"}},{"Kind":"Components.Component","Name":"HasChildren","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for hasChildren to check whether a node has child nodes or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HasChildren"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for htmlAttributes to be added to the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for icon class of each TreeView node that will be added before the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the ID field mapped in dataSource.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"ImageUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for image URL of each TreeView node where image will be added before the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImageUrl"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the field for checked state of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"NavigateUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for navigateUrl to be added as hyper-link of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NavigateUrl"}},{"Kind":"Components.Component","Name":"ParentID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the parent ID field mapped in dataSource.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParentID"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            This paramter will execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for selected state of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"TableName","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the table name used to fetch data from a specific table in the server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TableName"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for text displayed as TreeView node's display text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for tooltip that will be displayed as hovering text of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings<TValue>","Components.GenericTyped":"True"}},{"HashCode":-2060961519,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"\n            <summary>\n             A class used for configuring the TreeView fields setting properties.\n            </summary>\n            <typeparam name=\"TValue\">\"Specifies the Tvalue parameter\".</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Child","TypeName":"System.String","Documentation":"\n            <summary>\n            Binds the field settings for child nodes or mapping field for nested nodes objects that contain array of JSON objects.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Child"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Documentation":"\n            <summary>\n            Specifies the array of JavaScript objects or instance of DataManager to populate the nodes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for expand state of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Expanded"}},{"Kind":"Components.Component","Name":"HasChildren","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for hasChildren to check whether a node has child nodes or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HasChildren"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for htmlAttributes to be added to the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for icon class of each TreeView node that will be added before the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the ID field mapped in dataSource.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"ImageUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for image URL of each TreeView node where image will be added before the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImageUrl"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the field for checked state of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"NavigateUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for navigateUrl to be added as hyper-link of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NavigateUrl"}},{"Kind":"Components.Component","Name":"ParentID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the parent ID field mapped in dataSource.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParentID"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            This paramter will execute along with data processing.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for selected state of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"TableName","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the table name used to fetch data from a specific table in the server.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TableName"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for text displayed as TreeView node's display text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the mapping field for tooltip that will be displayed as hovering text of the TreeView node.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1642073725,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.BreadcrumbSeparator","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BreadcrumbSeparator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"PreviousIndex","TypeName":"System.Int32","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the index of Breadcrumb's item which is rendered before the separator.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PreviousIndex"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.BreadcrumbSeparator"}},{"HashCode":1713443538,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.BreadcrumbSeparator","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.Internal.BreadcrumbSeparator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"PreviousIndex","TypeName":"System.Int32","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the index of Breadcrumb's item which is rendered before the separator.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PreviousIndex"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.BreadcrumbSeparator","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2010613788,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.CreateBreadcrumbItem","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CreateBreadcrumbItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Item","TypeName":"Syncfusion.Blazor.Navigations.BreadcrumbItem","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the item in the list of Breadcrumb items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Item"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the index of the item in the list of Breadcrumb items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Index"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.CreateBreadcrumbItem"}},{"HashCode":1550730027,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.CreateBreadcrumbItem","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.Internal.CreateBreadcrumbItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Item","TypeName":"Syncfusion.Blazor.Navigations.BreadcrumbItem","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the item in the list of Breadcrumb items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Item"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the index of the item in the list of Breadcrumb items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Index"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.CreateBreadcrumbItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1288705621,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.CreateBreadcrumbItems","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CreateBreadcrumbItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Navigations.BreadcrumbItem>","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the list of Breadcrumb items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.CreateBreadcrumbItems"}},{"HashCode":-1140758017,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.CreateBreadcrumbItems","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.Internal.CreateBreadcrumbItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Navigations.BreadcrumbItem>","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the list of Breadcrumb items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.CreateBreadcrumbItems","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":461575924,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.TabHeaderTemplate","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TabHeaderTemplate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Item","TypeName":"Syncfusion.Blazor.Navigations.TabItem","Metadata":{"Common.PropertyName":"Item"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.TabHeaderTemplate"}},{"HashCode":204619670,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.TabHeaderTemplate","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.Internal.TabHeaderTemplate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Item","TypeName":"Syncfusion.Blazor.Navigations.TabItem","Metadata":{"Common.PropertyName":"Item"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.TabHeaderTemplate","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1789705155,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.EventRegister","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EventRegister"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Handler","TypeName":"System.Action<Syncfusion.Blazor.Navigations.Internal.ToolbarEventArgs>","Metadata":{"Common.PropertyName":"Handler","Components.DelegateSignature":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.EventRegister"}},{"HashCode":126539381,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Navigations.Internal.EventRegister","AssemblyName":"Syncfusion.Blazor.Navigations","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.Internal.EventRegister"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Handler","TypeName":"System.Action<Syncfusion.Blazor.Navigations.Internal.ToolbarEventArgs>","Metadata":{"Common.PropertyName":"Handler","Components.DelegateSignature":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Navigations.Internal.EventRegister","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1381182153,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.ToastAnimationSettings","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Specifies the show and hide animation settings of Toast.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ToastAnimationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HideSettings","TypeName":"Syncfusion.Blazor.Notifications.ToastHideAnimationSettings","Documentation":"\n            <summary>\n            Specifies the animation to appear when hiding the Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HideSettings"}},{"Kind":"Components.Component","Name":"ShowSettings","TypeName":"Syncfusion.Blazor.Notifications.ToastShowAnimationSettings","Documentation":"\n            <summary>\n            Specifies the animation to appear when showing the Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowSettings"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastAnimationSettings"}},{"HashCode":-1627917536,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.ToastAnimationSettings","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Specifies the show and hide animation settings of Toast.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Notifications.ToastAnimationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HideSettings","TypeName":"Syncfusion.Blazor.Notifications.ToastHideAnimationSettings","Documentation":"\n            <summary>\n            Specifies the animation to appear when hiding the Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HideSettings"}},{"Kind":"Components.Component","Name":"ShowSettings","TypeName":"Syncfusion.Blazor.Notifications.ToastShowAnimationSettings","Documentation":"\n            <summary>\n            Specifies the animation to appear when showing the Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowSettings"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastAnimationSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":683475045,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.ToastAnimationSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ToastAnimationSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastAnimationSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1706146826,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.ToastAnimationSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Notifications.ToastAnimationSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastAnimationSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-460642501,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.ToastButton","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Provides data to configure the Toast button properties.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ToastButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Specifies the click event binding of action buttons created within Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text `Content` of the Button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the class/multiple classes separated by a space in the Button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the Button is `Disabled`.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left (RTL) direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the class/multiple classes separated by a space for the Button that is used to include an icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.Buttons.IconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions the icon before or after the text content in the Button.\n            The possible values are: Left: The icon will be positioned to the left of the text content.\n            Right: The icon will be positioned to the right of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"IsPrimary","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows the appearance of the Button to be enhanced and visually appealing when set to `true`.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrimary"}},{"Kind":"Components.Component","Name":"IsToggle","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Makes the Button toggle, when set to `true`.\n            When you click it, the state changes from normal to active.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsToggle"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Notifications.ButtonType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the type of the button.\n            Possible values are Button, Submit, and Reset.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastButton"}},{"HashCode":302673837,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.ToastButton","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Provides data to configure the Toast button properties.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Notifications.ToastButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Specifies the click event binding of action buttons created within Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text `Content` of the Button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the class/multiple classes separated by a space in the Button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the Button is `Disabled`.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in the right to left (RTL) direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the class/multiple classes separated by a space for the Button that is used to include an icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.Buttons.IconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions the icon before or after the text content in the Button.\n            The possible values are: Left: The icon will be positioned to the left of the text content.\n            Right: The icon will be positioned to the right of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"IsPrimary","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows the appearance of the Button to be enhanced and visually appealing when set to `true`.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrimary"}},{"Kind":"Components.Component","Name":"IsToggle","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Makes the Button toggle, when set to `true`.\n            When you click it, the state changes from normal to active.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsToggle"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Notifications.ButtonType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the type of the button.\n            Possible values are Button, Submit, and Reset.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":121760361,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.ToastButtons","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            A list of buttons that are used to configure the Toast buttons.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ToastButtons"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastButtons"}},{"HashCode":123670353,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.ToastButtons","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            A list of buttons that are used to configure the Toast buttons.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Notifications.ToastButtons"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastButtons","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1386960241,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.ToastButtons.ChildContent","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ToastButtons"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastButtons.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-570918709,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.ToastButtons.ChildContent","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Notifications.ToastButtons"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastButtons.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1299863255,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.ToastEvents","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Configure the event handlers to handle the events with Toast component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ToastEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Notifications.ToastBeforeOpenArgs>","Documentation":"\n            <summary>\n            Triggers the event before the toast shown.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Notifications.ToastBeforeCloseArgs>","Documentation":"\n            <summary>\n            Triggers the event before the toast close.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Notifications.ToastClickEventArgs>","Documentation":"\n            <summary>\n            The event will be fired while clicking on the Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Notifications.ToastCloseArgs>","Documentation":"\n            <summary>\n            Trigger the event after the Toast hides.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers the event after the Toast gets created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers the event after the Toast gets destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Notifications.ToastOpenArgs>","Documentation":"\n            <summary>\n            Triggers the event after the Toast shown on the target container.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastEvents"}},{"HashCode":-959595590,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.ToastEvents","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Configure the event handlers to handle the events with Toast component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Notifications.ToastEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Notifications.ToastBeforeOpenArgs>","Documentation":"\n            <summary>\n            Triggers the event before the toast shown.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Notifications.ToastBeforeCloseArgs>","Documentation":"\n            <summary>\n            Triggers the event before the toast close.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Notifications.ToastClickEventArgs>","Documentation":"\n            <summary>\n            The event will be fired while clicking on the Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Notifications.ToastCloseArgs>","Documentation":"\n            <summary>\n            Trigger the event after the Toast hides.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers the event after the Toast gets created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers the event after the Toast gets destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Notifications.ToastOpenArgs>","Documentation":"\n            <summary>\n            Triggers the event after the Toast shown on the target container.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastEvents","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-937510076,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.ToastHideAnimationSettings","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Specifies the animation to appear while hiding the Toast.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ToastHideAnimationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the duration to animate.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"Syncfusion.Blazor.Notifications.ToastEasing","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation timing function.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}},{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.Notifications.ToastEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation name that should be applied on while opening and closing the toast.\n            If the user sets Fade animation, the toast will open with the `FadeIn` effect and close with the `FadeOut` effect.\n            The following are the list of animation effects available to configure to the toast:\n            1. Fade\n            2. FadeZoom\n            3. FlipLeftDown\n            4. FlipLeftUp\n            5. FlipRightDown\n            6. FlipRightUp\n            7. FlipXDown\n            8. FlipXUp\n            9. FlipYLeft\n            10. FlipYRight\n            11. SlideBottom\n            12. SlideLeft\n            13. SlideRight\n            14. SlideTop\n            15. Zoom\n            16. None.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastHideAnimationSettings"}},{"HashCode":-650763066,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.ToastHideAnimationSettings","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Specifies the animation to appear while hiding the Toast.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Notifications.ToastHideAnimationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the duration to animate.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"Syncfusion.Blazor.Notifications.ToastEasing","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation timing function.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}},{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.Notifications.ToastEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation name that should be applied on while opening and closing the toast.\n            If the user sets Fade animation, the toast will open with the `FadeIn` effect and close with the `FadeOut` effect.\n            The following are the list of animation effects available to configure to the toast:\n            1. Fade\n            2. FadeZoom\n            3. FlipLeftDown\n            4. FlipLeftUp\n            5. FlipRightDown\n            6. FlipRightUp\n            7. FlipXDown\n            8. FlipXUp\n            9. FlipYLeft\n            10. FlipYRight\n            11. SlideBottom\n            12. SlideLeft\n            13. SlideRight\n            14. SlideTop\n            15. Zoom\n            16. None.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastHideAnimationSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-47033061,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.ToastHideAnimationSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ToastHideAnimationSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastHideAnimationSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":136706474,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.ToastHideAnimationSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Notifications.ToastHideAnimationSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastHideAnimationSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1517052312,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.ToastPosition","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Configures to display a toast in the custom position within the document or target.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ToastPosition"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"X","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the position of the Toast notification with respect to the target container's left edge.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the position of the Toast notification with respect to the target container's top edge.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Y"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastPosition"}},{"HashCode":-384470152,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.ToastPosition","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Configures to display a toast in the custom position within the document or target.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Notifications.ToastPosition"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"X","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the position of the Toast notification with respect to the target container's left edge.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the position of the Toast notification with respect to the target container's top edge.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Y"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastPosition","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":718768554,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.ToastShowAnimationSettings","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Specifies the animation to appear while showing the Toast.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ToastShowAnimationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the duration to animate.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"Syncfusion.Blazor.Notifications.ToastEasing","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation timing function.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}},{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.Notifications.ToastEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation name that should be applied on while opening and closing the toast.\n            If the user sets Fade animation, the toast will open with the `FadeIn` effect and close with the `FadeOut` effect.\n            The following are the list of animation effects available to configure to the toast:\n            1. Fade\n            2. FadeZoom\n            3. FlipLeftDown\n            4. FlipLeftUp\n            5. FlipRightDown\n            6. FlipRightUp\n            7. FlipXDown\n            8. FlipXUp\n            9. FlipYLeft\n            10. FlipYRight\n            11. SlideBottom\n            12. SlideLeft\n            13. SlideRight\n            14. SlideTop\n            15. Zoom\n            16. None.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastShowAnimationSettings"}},{"HashCode":1262230076,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.ToastShowAnimationSettings","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Specifies the animation to appear while showing the Toast.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Notifications.ToastShowAnimationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the duration to animate.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"Syncfusion.Blazor.Notifications.ToastEasing","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation timing function.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}},{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.Notifications.ToastEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the animation name that should be applied on while opening and closing the toast.\n            If the user sets Fade animation, the toast will open with the `FadeIn` effect and close with the `FadeOut` effect.\n            The following are the list of animation effects available to configure to the toast:\n            1. Fade\n            2. FadeZoom\n            3. FlipLeftDown\n            4. FlipLeftUp\n            5. FlipRightDown\n            6. FlipRightUp\n            7. FlipXDown\n            8. FlipXUp\n            9. FlipYLeft\n            10. FlipYRight\n            11. SlideBottom\n            12. SlideLeft\n            13. SlideRight\n            14. SlideTop\n            15. Zoom\n            16. None.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastShowAnimationSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-84215281,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.ToastShowAnimationSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ToastShowAnimationSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastShowAnimationSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1737329083,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.ToastShowAnimationSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Notifications.ToastShowAnimationSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastShowAnimationSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1275168811,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.ToastTemplates","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Configure templates to display within a header, content, and footer section of Toast.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ToastTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Title","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Defines the toast title template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Defines the toast content template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Defines the toast template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Template","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastTemplates"}},{"HashCode":-526747585,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.ToastTemplates","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Configure templates to display within a header, content, and footer section of Toast.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Notifications.ToastTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Title","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Defines the toast title template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Defines the toast content template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Defines the toast template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Template","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastTemplates","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-501137944,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.ToastTemplates.ChildContent","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ToastTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastTemplates.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":204100135,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.ToastTemplates.ChildContent","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the content of the Spinner element.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Notifications.ToastTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastTemplates.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-346658386,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.ToastTemplates.Title","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Defines the toast title template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Title","ParentTag":"ToastTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastTemplates.Title","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":453849508,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.ToastTemplates.Title","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Defines the toast title template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Title","ParentTag":"Syncfusion.Blazor.Notifications.ToastTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastTemplates.Title","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-530472456,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.ToastTemplates.Content","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Defines the toast content template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"ToastTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastTemplates.Content","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":331461290,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.ToastTemplates.Content","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Defines the toast content template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"Syncfusion.Blazor.Notifications.ToastTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastTemplates.Content","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1655666264,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.ToastTemplates.Template","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Defines the toast template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"ToastTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastTemplates.Template","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1267679080,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.ToastTemplates.Template","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Defines the toast template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"Syncfusion.Blazor.Notifications.ToastTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.ToastTemplates.Template","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1171497885,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.SfToast","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Toast is a small, nonblocking notification pop-up and it is shown to users with readable message content\n            at the bottom of the screen or at a specific target and disappears automatically after a few seconds (time-out)\n            with different animation effects.\n            </summary>\n            <summary>\n            Toast is a small, nonblocking notification pop-up and it is shown to users with readable message content\n            at the bottom of the screen or at a specific target and disappears automatically after a few seconds (time-out)\n            with different animation effects.\n            </summary>\n            <summary>\n            Toast is a small, nonblocking notification pop-up and it is shown to users with readable message content\n            at the bottom of the screen or at a specific target and disappears automatically after a few seconds (time-out)\n            with different animation effects.\n            </summary>\n            <summary>\n            Toast is a small, nonblocking notification pop-up and it is shown to users with readable message content\n            at the bottom of the screen or at a specific target and disappears automatically after a few seconds (time-out)\n            with different animation effects.\n            </summary>\n            <summary>\n            Toast is a small, nonblocking notification pop-up and it is shown to users with readable message content\n            at the bottom of the screen or at a specific target and disappears automatically after a few seconds (time-out)\n            with different animation effects.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfToast"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Notifications.ToastAnimationSettings","Documentation":"\n            <summary>\n            Specifies the animation configuration settings for showing and hiding the Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the content to be displayed on the Toast.\n            Accepts selectors, string values and HTML elements.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines single/multiple classes (separated by space) to be used for customization of Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"ExtendedTimeout","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the Toast display time duration after interacting with the Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExtendedTimeout"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the height of the Toast in pixels/number/percentage. Number value is considered as pixels.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines CSS classes to specify an icon for the Toast which is to be displayed at top left corner of the Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"Locale","TypeName":"System.String","Documentation":"\n            <summary>\n            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Locale"}},{"Kind":"Components.Component","Name":"NewestOnTop","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the newly created Toast message display order while multiple toast's are added to page one after another.\n            By default, newly added Toast will be added after old Toast's.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NewestOnTop"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.Notifications.ToastPosition","Documentation":"\n            <summary>\n            Specifies the position of the Toast message to be displayed within target container.\n            In the case of multiple Toast display, new Toast position will not update on dynamic change of property values\n            until the old Toast messages removed.\n            X values are: Left , Right ,Center.\n            Y values are: Top , Bottom.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"ProgressDirection","TypeName":"Syncfusion.Blazor.Notifications.ProgressDirection","IsEnum":true,"Documentation":"\n            <summary>\n             Specifies the direction for the Toast progressBar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ProgressDirection"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to show the close button in Toast message to close the Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCloseButton"}},{"Kind":"Components.Component","Name":"ShowProgressBar","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to show the progress bar to denote the Toast message display timeout.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowProgressBar"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the target container where the Toast to be displayed.\n            Based on the target, the positions such as `Left`, `Top` will be applied to the Toast.\n            The default value is null, which refers the `document.body` element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the HTML element/element ID as a string that can be displayed as a Toast content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContentTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Timeout","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the Toast display time duration on the page in milliseconds.\n            - Once the time expires, Toast message will be removed.\n            - Setting 0 as a time out value displays the Toast on the page until the user closes it manually.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Timeout"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the title to be displayed on the Toast.\n            Works only with string values.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the Toast in pixels/numbers/percentage. Number value is considered as pixels.\n            In mobile devices, default width is considered as `100%`.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ActionButtons","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Notifications.ToastButton>","Documentation":"\n            <summary>\n            Specifies the collection of Toast action `buttons` to be rendered with the given\n            Button model properties and its click action handler.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionButtons"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the unique identifier.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sets the content of the Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.SfToast"}},{"HashCode":-594648891,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.SfToast","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Toast is a small, nonblocking notification pop-up and it is shown to users with readable message content\n            at the bottom of the screen or at a specific target and disappears automatically after a few seconds (time-out)\n            with different animation effects.\n            </summary>\n            <summary>\n            Toast is a small, nonblocking notification pop-up and it is shown to users with readable message content\n            at the bottom of the screen or at a specific target and disappears automatically after a few seconds (time-out)\n            with different animation effects.\n            </summary>\n            <summary>\n            Toast is a small, nonblocking notification pop-up and it is shown to users with readable message content\n            at the bottom of the screen or at a specific target and disappears automatically after a few seconds (time-out)\n            with different animation effects.\n            </summary>\n            <summary>\n            Toast is a small, nonblocking notification pop-up and it is shown to users with readable message content\n            at the bottom of the screen or at a specific target and disappears automatically after a few seconds (time-out)\n            with different animation effects.\n            </summary>\n            <summary>\n            Toast is a small, nonblocking notification pop-up and it is shown to users with readable message content\n            at the bottom of the screen or at a specific target and disappears automatically after a few seconds (time-out)\n            with different animation effects.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Notifications.SfToast"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Notifications.ToastAnimationSettings","Documentation":"\n            <summary>\n            Specifies the animation configuration settings for showing and hiding the Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the content to be displayed on the Toast.\n            Accepts selectors, string values and HTML elements.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines single/multiple classes (separated by space) to be used for customization of Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"ExtendedTimeout","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the Toast display time duration after interacting with the Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExtendedTimeout"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the height of the Toast in pixels/number/percentage. Number value is considered as pixels.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines CSS classes to specify an icon for the Toast which is to be displayed at top left corner of the Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"Locale","TypeName":"System.String","Documentation":"\n            <summary>\n            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Locale"}},{"Kind":"Components.Component","Name":"NewestOnTop","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the newly created Toast message display order while multiple toast's are added to page one after another.\n            By default, newly added Toast will be added after old Toast's.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NewestOnTop"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.Notifications.ToastPosition","Documentation":"\n            <summary>\n            Specifies the position of the Toast message to be displayed within target container.\n            In the case of multiple Toast display, new Toast position will not update on dynamic change of property values\n            until the old Toast messages removed.\n            X values are: Left , Right ,Center.\n            Y values are: Top , Bottom.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"ProgressDirection","TypeName":"Syncfusion.Blazor.Notifications.ProgressDirection","IsEnum":true,"Documentation":"\n            <summary>\n             Specifies the direction for the Toast progressBar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ProgressDirection"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to show the close button in Toast message to close the Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCloseButton"}},{"Kind":"Components.Component","Name":"ShowProgressBar","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies whether to show the progress bar to denote the Toast message display timeout.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowProgressBar"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the target container where the Toast to be displayed.\n            Based on the target, the positions such as `Left`, `Top` will be applied to the Toast.\n            The default value is null, which refers the `document.body` element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the HTML element/element ID as a string that can be displayed as a Toast content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContentTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Timeout","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the Toast display time duration on the page in milliseconds.\n            - Once the time expires, Toast message will be removed.\n            - Setting 0 as a time out value displays the Toast on the page until the user closes it manually.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Timeout"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the title to be displayed on the Toast.\n            Works only with string values.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the width of the Toast in pixels/numbers/percentage. Number value is considered as pixels.\n            In mobile devices, default width is considered as `100%`.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ActionButtons","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Notifications.ToastButton>","Documentation":"\n            <summary>\n            Specifies the collection of Toast action `buttons` to be rendered with the given\n            Button model properties and its click action handler.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActionButtons"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the unique identifier.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sets the content of the Toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.SfToast","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-663298604,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.SfToast.ContentTemplate","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Specifies the HTML element/element ID as a string that can be displayed as a Toast content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"SfToast"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.SfToast.ContentTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2088036226,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.SfToast.ContentTemplate","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Specifies the HTML element/element ID as a string that can be displayed as a Toast content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"Syncfusion.Blazor.Notifications.SfToast"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.SfToast.ContentTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":366409249,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.SfToast.ChildContent","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Sets the content of the Toast.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfToast"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.SfToast.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-574262689,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Notifications.SfToast.ChildContent","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Sets the content of the Toast.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Notifications.SfToast"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Notifications.SfToast.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1753794060,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications._Imports","AssemblyName":"Syncfusion.Blazor.Notifications","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications._Imports"}},{"HashCode":1433039643,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications._Imports","AssemblyName":"Syncfusion.Blazor.Notifications","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Notifications._Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications._Imports","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1626970704,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.Internal.ToastContent","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Specifies the content to be displayed on the Toast.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ToastContent"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.Internal.ToastContent"}},{"HashCode":1637313802,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Notifications.Internal.ToastContent","AssemblyName":"Syncfusion.Blazor.Notifications","Documentation":"\n            <summary>\n            Specifies the content to be displayed on the Toast.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Notifications.Internal.ToastContent"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Notifications.Internal.ToastContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":32952668,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons.SfButton","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            The Button is a graphical user interface element that triggers an event on its click action.\n            It can contain a text, an image, or both.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sets content for button element including HTML and its customizations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text content of the button element and it will support only string type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the button element. The Button types, styles, and\n            size can be defined by using this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the Button is enabled or disabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering Button component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space for the Button that is used to include an icon.\n            Buttons can also include font icon and sprite image.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.Buttons.IconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions the icon based on the text content in the button and its default value is Left.\n            The possible values are:\n            - Left: The icon will be positioned to the left of the text content.\n            - Right: The icon will be positioned to the right of the text content.\n            - Top: The icon will be positioned to the top of the text content.\n            - Bottom: The icon will be positioned to the bottom of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"IsPrimary","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows the appearance of the button to be enhanced and visually appealing when set to true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrimary"}},{"Kind":"Components.Component","Name":"IsToggle","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Makes the Button toggle, when set to true. When you click it, the state changes from normal to active or viceversa.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsToggle"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Triggers when button element is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons.SfButton"}},{"HashCode":1758537233,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons.SfButton","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            The Button is a graphical user interface element that triggers an event on its click action.\n            It can contain a text, an image, or both.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Buttons.SfButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sets content for button element including HTML and its customizations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text content of the button element and it will support only string type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the button element. The Button types, styles, and\n            size can be defined by using this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the Button is enabled or disabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering Button component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space for the Button that is used to include an icon.\n            Buttons can also include font icon and sprite image.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.Buttons.IconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions the icon based on the text content in the button and its default value is Left.\n            The possible values are:\n            - Left: The icon will be positioned to the left of the text content.\n            - Right: The icon will be positioned to the right of the text content.\n            - Top: The icon will be positioned to the top of the text content.\n            - Bottom: The icon will be positioned to the bottom of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"IsPrimary","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows the appearance of the button to be enhanced and visually appealing when set to true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrimary"}},{"Kind":"Components.Component","Name":"IsToggle","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Makes the Button toggle, when set to true. When you click it, the state changes from normal to active or viceversa.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsToggle"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Triggers when button element is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons.SfButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-819257196,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Buttons.SfButton.ChildContent","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            Sets content for button element including HTML and its customizations.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Buttons.SfButton.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1853057798,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Buttons.SfButton.ChildContent","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            Sets content for button element including HTML and its customizations.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Buttons.SfButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Buttons.SfButton.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-947632748,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            The CheckBox is a graphical user interface element that allows you to select one or more options from the choices.\n            It contains checked, unchecked, and indeterminate states.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfCheckBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TChecked","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TChecked for the Syncfusion.Blazor.Buttons.SfCheckBox<TChecked> component.","Metadata":{"Common.PropertyName":"TChecked","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the caption for the CheckBox, that describes the purpose of the CheckBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"LabelPosition","TypeName":"Syncfusion.Blazor.Buttons.LabelPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions label before/after the CheckBox.\n            The possible values are:\n            - Before - The label is positioned to left of the CheckBox.\n            - After - The label is positioned to right of the CheckBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelPosition"}},{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the CheckBox is in indeterminate state or not.\n            When set to true, the CheckBox will be in indeterminate state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Indeterminate"}},{"Kind":"Components.Component","Name":"IndeterminateChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"IndeterminateChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EnableTriState","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value to enable/disable tri state functionality in CheckBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTriState"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChangeEventArgs<TChecked>>","Documentation":"\n            <summary>\n            Triggers when the CheckBox state has been changed by user interaction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the component wrapper element.\n            You can add custom styles to the component by using this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines name attribute for the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines value attribute for the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Checked","TypeName":"TChecked","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the component is checked or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Checked","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TChecked>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CheckedChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CheckedExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TChecked>>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CheckedExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the component is disabled or not.\n            When set to true, the component will be in disabled state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as title , native events etc., to the element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>","Components.GenericTyped":"True"}},{"HashCode":1737212117,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            The CheckBox is a graphical user interface element that allows you to select one or more options from the choices.\n            It contains checked, unchecked, and indeterminate states.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Buttons.SfCheckBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TChecked","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TChecked for the Syncfusion.Blazor.Buttons.SfCheckBox<TChecked> component.","Metadata":{"Common.PropertyName":"TChecked","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the caption for the CheckBox, that describes the purpose of the CheckBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"LabelPosition","TypeName":"Syncfusion.Blazor.Buttons.LabelPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions label before/after the CheckBox.\n            The possible values are:\n            - Before - The label is positioned to left of the CheckBox.\n            - After - The label is positioned to right of the CheckBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelPosition"}},{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the CheckBox is in indeterminate state or not.\n            When set to true, the CheckBox will be in indeterminate state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Indeterminate"}},{"Kind":"Components.Component","Name":"IndeterminateChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"IndeterminateChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EnableTriState","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value to enable/disable tri state functionality in CheckBox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTriState"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChangeEventArgs<TChecked>>","Documentation":"\n            <summary>\n            Triggers when the CheckBox state has been changed by user interaction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the component wrapper element.\n            You can add custom styles to the component by using this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines name attribute for the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines value attribute for the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Checked","TypeName":"TChecked","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the component is checked or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Checked","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TChecked>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CheckedChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CheckedExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TChecked>>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CheckedExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the component is disabled or not.\n            When set to true, the component will be in disabled state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as title , native events etc., to the element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2098939319,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>.ChildContent","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfCheckBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1709579532,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>.ChildContent","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Buttons.SfCheckBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1926485374,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons.ChipEvents","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            Configure handlers to handle the events with the Chip component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnBeforeClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChipEventArgs>","Documentation":"\n            <summary>\n            This click event will get triggered once the chip is before click.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnBeforeClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChipEventArgs>","Documentation":"\n            <summary>\n            This click event will get triggered once the chip is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            This created event will get triggered once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            This created event will get triggered once the component successfuly disposed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDelete","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChipEventArgs>","Documentation":"\n            <summary>\n            This delete event will get triggered before removing the chip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnDelete","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Deleted","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChipDeletedEventArgs>","Documentation":"\n            <summary>\n            Gets or sets an event callback that is raised when the chip item is deleted.\n            </summary>\n            <remarks>\n            You can get the deleted chip details.\n            </remarks>\n            <example>\n            In the below code example, the deleted chip value can be obtained from the <c>Deleted</c> event.\n            <code><![CDATA[\n            <SfChip Selection=\"SelectionType.Multiple\" EnableDelete=true>\n                <ChipEvents Deleted=\"@onDeleted\"></ChipEvents>\n                <ChipItems>\n                    <ChipItem Text = \"Small\"></ChipItem>\n                    <ChipItem Text = \"Medium\"></ChipItem>\n                    <ChipItem Text = \"Large\"></ChipItem>\n                    <ChipItem Text = \"Extra Large\"></ChipItem>\n                </ChipItems>\n            </SfChip>\n            @code {\n                private void onDeleted(ChipDeletedEventArgs args) {\n                    string deletedValue = args.Value;\n                }\n            }\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"Deleted","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons.ChipEvents"}},{"HashCode":-171446754,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons.ChipEvents","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            Configure handlers to handle the events with the Chip component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Buttons.ChipEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnBeforeClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChipEventArgs>","Documentation":"\n            <summary>\n            This click event will get triggered once the chip is before click.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnBeforeClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChipEventArgs>","Documentation":"\n            <summary>\n            This click event will get triggered once the chip is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            This created event will get triggered once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            This created event will get triggered once the component successfuly disposed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDelete","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChipEventArgs>","Documentation":"\n            <summary>\n            This delete event will get triggered before removing the chip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnDelete","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Deleted","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChipDeletedEventArgs>","Documentation":"\n            <summary>\n            Gets or sets an event callback that is raised when the chip item is deleted.\n            </summary>\n            <remarks>\n            You can get the deleted chip details.\n            </remarks>\n            <example>\n            In the below code example, the deleted chip value can be obtained from the <c>Deleted</c> event.\n            <code><![CDATA[\n            <SfChip Selection=\"SelectionType.Multiple\" EnableDelete=true>\n                <ChipEvents Deleted=\"@onDeleted\"></ChipEvents>\n                <ChipItems>\n                    <ChipItem Text = \"Small\"></ChipItem>\n                    <ChipItem Text = \"Medium\"></ChipItem>\n                    <ChipItem Text = \"Large\"></ChipItem>\n                    <ChipItem Text = \"Extra Large\"></ChipItem>\n                </ChipItems>\n            </SfChip>\n            @code {\n                private void onDeleted(ChipDeletedEventArgs args) {\n                    string deletedValue = args.Value;\n                }\n            }\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"Deleted","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons.ChipEvents","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1661410653,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons.ChipItems","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            Configures the collection of chipitem.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Indicates the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons.ChipItems"}},{"HashCode":-140139727,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons.ChipItems","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            Configures the collection of chipitem.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Buttons.ChipItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Indicates the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons.ChipItems","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-911155546,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Buttons.ChipItems.ChildContent","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            Indicates the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChipItems"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Buttons.ChipItems.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-190112130,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Buttons.ChipItems.ChildContent","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            Indicates the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Buttons.ChipItems"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Buttons.ChipItems.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1304786403,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons.ChipItem","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            A Chip is a small block of essential information that contains the text, image, or both and mostly used in contacts, mails, or filter tags.\n            </summary>\n            <summary>\n            Partial Class ChipItem.\n            </summary>\n            <summary>\n            Partial Class ChipItem.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the custom classes to be added to the chip element used to customize the Chip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the chip component is enabled or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"LeadingIconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the leading icon CSS class for the chip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LeadingIconCss"}},{"Kind":"Components.Component","Name":"LeadingIconUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the leading icon url for the chip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LeadingIconUrl"}},{"Kind":"Components.Component","Name":"LeadingText","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the customized text value for the avatar in the chip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LeadingText"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text content for the chip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"TrailingIconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the trailing icon CSS class for the chip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TrailingIconCss"}},{"Kind":"Components.Component","Name":"TrailingIconUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the leading icon url for the chip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TrailingIconUrl"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            This value property helps to store the chip component values.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as title to the each chip element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons.ChipItem"}},{"HashCode":650114004,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons.ChipItem","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            A Chip is a small block of essential information that contains the text, image, or both and mostly used in contacts, mails, or filter tags.\n            </summary>\n            <summary>\n            Partial Class ChipItem.\n            </summary>\n            <summary>\n            Partial Class ChipItem.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Buttons.ChipItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the custom classes to be added to the chip element used to customize the Chip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the chip component is enabled or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"LeadingIconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the leading icon CSS class for the chip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LeadingIconCss"}},{"Kind":"Components.Component","Name":"LeadingIconUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the leading icon url for the chip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LeadingIconUrl"}},{"Kind":"Components.Component","Name":"LeadingText","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the customized text value for the avatar in the chip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LeadingText"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the text content for the chip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"TrailingIconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the trailing icon CSS class for the chip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TrailingIconCss"}},{"Kind":"Components.Component","Name":"TrailingIconUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the leading icon url for the chip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TrailingIconUrl"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            This value property helps to store the chip component values.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as title to the each chip element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons.ChipItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-692779745,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Buttons.ChipItem.ChildContent","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChipItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Buttons.ChipItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1206945560,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Buttons.ChipItem.ChildContent","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Buttons.ChipItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Buttons.ChipItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-967927538,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons.SfChip","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            Partial Class SfChip.\n            </summary>\n            <summary>\n            Specifies the Partial class SfChip.\n            </summary>\n            <summary>\n            Partial Class SfChip.\n            </summary>\n            <summary>\n            The SfChip component displays a list of chip each of which contains a block of essential information that triggers an event on click action.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfChip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the custom classes to be added to the chip element used to customize the chip component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Chips","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Buttons.ChipItem>","Documentation":"\n            <summary>\n            This chips property helps to render chipitem component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Chips"}},{"Kind":"Components.Component","Name":"EnableDelete","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            This enableDelete property helps to enable delete functionality.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableDelete"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            This enabled property helps to enable/disable chipitem component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"SelectedChips","TypeName":"System.String[]","Documentation":"\n            <summary>\n            This selectedChips property helps to select chip items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedChips"}},{"Kind":"Components.Component","Name":"SelectedChipsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the selected chips changes.\n            </summary>\n            <remarks>\n            You can get the updated SelectedChips value.\n            </remarks>\n            <example>\n            In the below code example, the SelectedChips value can be obtained from the <c>SelectedChipsChanged</c> event.\n            <code><![CDATA[\n            <SfChip Selection=\"SelectionType.Multiple\" SelectedChipsChanged=\"SelectedChipsChanged\">\n                <ChipItems>\n                    <ChipItem Text = \"Small\"></ChipItem>\n                    <ChipItem Text = \"Medium\"></ChipItem>\n                    <ChipItem Text = \"Large\"></ChipItem>\n                    <ChipItem Text = \"Extra Large\"></ChipItem>\n                </ChipItems>\n            </SfChip>\n            @code {\n                private void SelectedChipsChanged(string[] args) {\n                    string[] selectedChipItem = args;\n                }\n            }\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"SelectedChipsChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Selection","TypeName":"Syncfusion.Blazor.Buttons.SelectionType","IsEnum":true,"Documentation":"\n            <summary>\n            This selection property enables chip selection type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selection"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as title, native events etc., to the wrapper element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons.SfChip"}},{"HashCode":586521084,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons.SfChip","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            Partial Class SfChip.\n            </summary>\n            <summary>\n            Specifies the Partial class SfChip.\n            </summary>\n            <summary>\n            Partial Class SfChip.\n            </summary>\n            <summary>\n            The SfChip component displays a list of chip each of which contains a block of essential information that triggers an event on click action.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Buttons.SfChip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the custom classes to be added to the chip element used to customize the chip component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Chips","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Buttons.ChipItem>","Documentation":"\n            <summary>\n            This chips property helps to render chipitem component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Chips"}},{"Kind":"Components.Component","Name":"EnableDelete","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            This enableDelete property helps to enable delete functionality.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableDelete"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            This enabled property helps to enable/disable chipitem component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"SelectedChips","TypeName":"System.String[]","Documentation":"\n            <summary>\n            This selectedChips property helps to select chip items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedChips"}},{"Kind":"Components.Component","Name":"SelectedChipsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Documentation":"\n            <summary>\n            Specifies the callback to trigger when the selected chips changes.\n            </summary>\n            <remarks>\n            You can get the updated SelectedChips value.\n            </remarks>\n            <example>\n            In the below code example, the SelectedChips value can be obtained from the <c>SelectedChipsChanged</c> event.\n            <code><![CDATA[\n            <SfChip Selection=\"SelectionType.Multiple\" SelectedChipsChanged=\"SelectedChipsChanged\">\n                <ChipItems>\n                    <ChipItem Text = \"Small\"></ChipItem>\n                    <ChipItem Text = \"Medium\"></ChipItem>\n                    <ChipItem Text = \"Large\"></ChipItem>\n                    <ChipItem Text = \"Extra Large\"></ChipItem>\n                </ChipItems>\n            </SfChip>\n            @code {\n                private void SelectedChipsChanged(string[] args) {\n                    string[] selectedChipItem = args;\n                }\n            }\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"SelectedChipsChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Selection","TypeName":"Syncfusion.Blazor.Buttons.SelectionType","IsEnum":true,"Documentation":"\n            <summary>\n            This selection property enables chip selection type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selection"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as title, native events etc., to the wrapper element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons.SfChip","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1932990944,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Buttons.SfChip.ChildContent","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfChip"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Buttons.SfChip.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-887525433,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Buttons.SfChip.ChildContent","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Buttons.SfChip"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Buttons.SfChip.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1571280292,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons.SfIcon","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            SfIcon component used to render the predefined syncfusion icons using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.Name\" /> property or custom font icons using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.IconCss\" /> property.\n            </summary>\n            <example>\n            The below example shows loading syncfusion icon using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.Name\" /> property.\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Italic\" Title=\"Italic\"></SfIcon>\n            ]]></code>\n            The below example shows loading syncfusion icon using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.IconCss\" /> property.\n            <code><![CDATA[\n            <SfIcon IconCss=\"e-icons e-bold\" Title=\"Bold\"></SfIcon>\n            ]]></code>\n            The below example shows loading third party icon using <see cref=\"T:Syncfusion.Blazor.Buttons.SfIcon\" /> component.\n            Plus icon were loaded from open iconic, by defining the open iconic font CSS.\n            <code><![CDATA[\n            <SfIcon IconCss=\"oi oi-plus\" Title=\"Plus\"></SfIcon>\n            ]]></code>\n            </example>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the child content for Icon component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to icon element.\n            </summary>\n            <remarks>\n            Additional attributes can be added by specifying as inline attributes or by specifying <c>@attributes</c> directive.\n            </remarks>\n            <example>\n            In the below code example, font size of the icon customized using <c>@attributes</c> directive.\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Copy\" @attributes=\"customAttribute\"></SfIcon>\n            @code{\n               Dictionary<string, object> customAttribute = new Dictionary<string, object>()\n               {\n                   { \"style\", \"font-size: 20px\" }\n               };\n            }\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a CSS class string which can be used to provide custom icon or custom style for icons.\n            </summary>\n            <value>\n            Accepts a CSS class string separated by space to provide custom icon or custom style for icons. The default value is <c>String.Empty</c>.\n            </value>\n            <remarks>\n            IconCss property used to append custom class to the predefined icons. This property will also render the customized icons like font-awesome icons.\n            </remarks>\n            <example>\n            In the below example custom icon is loaded using <c>IconCss</c> property.\n            <code><![CDATA[\n            <SfIcon IconCss=\"oi oi-home\"></SfIcon>\n            ]]></code>\n            In the below example icon color is customized using <c>IconCss</c> property.\n            <code><![CDATA[\n            <SfIcon IconCss=\"oi oi-plus color-red\"></SfIcon>\n            <style>\n                .color-red {\n                   color: red; \n                }\n            </style>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Name","TypeName":"Syncfusion.Blazor.Buttons.IconName","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the name of the built-in syncfusion icons to render. \n            </summary>\n            <value>\n            One of the <see cref=\"T:Syncfusion.Blazor.Buttons.IconName\" /> enumeration.\n            </value>\n            <remarks>\n            This property is used to render icons from predefined <see cref=\"T:Syncfusion.Blazor.Buttons.IconName\" /> options. You can use <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.IconCss\" /> to load custom icons.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Bold\"></SfIcon>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Syncfusion.Blazor.Buttons.IconSize","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the size of the icon.\n            </summary>\n            <value>\n            One of the <see cref=\"T:Syncfusion.Blazor.Buttons.IconSize\" /> enumeration that specifies the size of the icon. \n            The default value is <see cref=\"F:Syncfusion.Blazor.Buttons.IconSize.Medium\" />\n            </value>\n            <remarks>\n            The Size property used to set font size for icons. This property will considered only when icons are rendered using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.Name\" /> property.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Paste\" Size=\"IconSize.Large\"></SfIcon>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets title attribute for icon.\n            </summary>\n            <value>\n            Accepts a string. The default value is <c>String.Empty</c>.\n            </value>\n            <remarks>\n            Title attribute used to improve accessibility with screen readers and show a tooltip on mouse over the icon.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Cut\" Title=\"Cut\"></SfIcon>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"Title"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons.SfIcon"}},{"HashCode":1581944166,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons.SfIcon","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            SfIcon component used to render the predefined syncfusion icons using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.Name\" /> property or custom font icons using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.IconCss\" /> property.\n            </summary>\n            <example>\n            The below example shows loading syncfusion icon using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.Name\" /> property.\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Italic\" Title=\"Italic\"></SfIcon>\n            ]]></code>\n            The below example shows loading syncfusion icon using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.IconCss\" /> property.\n            <code><![CDATA[\n            <SfIcon IconCss=\"e-icons e-bold\" Title=\"Bold\"></SfIcon>\n            ]]></code>\n            The below example shows loading third party icon using <see cref=\"T:Syncfusion.Blazor.Buttons.SfIcon\" /> component.\n            Plus icon were loaded from open iconic, by defining the open iconic font CSS.\n            <code><![CDATA[\n            <SfIcon IconCss=\"oi oi-plus\" Title=\"Plus\"></SfIcon>\n            ]]></code>\n            </example>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Buttons.SfIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the child content for Icon component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to icon element.\n            </summary>\n            <remarks>\n            Additional attributes can be added by specifying as inline attributes or by specifying <c>@attributes</c> directive.\n            </remarks>\n            <example>\n            In the below code example, font size of the icon customized using <c>@attributes</c> directive.\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Copy\" @attributes=\"customAttribute\"></SfIcon>\n            @code{\n               Dictionary<string, object> customAttribute = new Dictionary<string, object>()\n               {\n                   { \"style\", \"font-size: 20px\" }\n               };\n            }\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a CSS class string which can be used to provide custom icon or custom style for icons.\n            </summary>\n            <value>\n            Accepts a CSS class string separated by space to provide custom icon or custom style for icons. The default value is <c>String.Empty</c>.\n            </value>\n            <remarks>\n            IconCss property used to append custom class to the predefined icons. This property will also render the customized icons like font-awesome icons.\n            </remarks>\n            <example>\n            In the below example custom icon is loaded using <c>IconCss</c> property.\n            <code><![CDATA[\n            <SfIcon IconCss=\"oi oi-home\"></SfIcon>\n            ]]></code>\n            In the below example icon color is customized using <c>IconCss</c> property.\n            <code><![CDATA[\n            <SfIcon IconCss=\"oi oi-plus color-red\"></SfIcon>\n            <style>\n                .color-red {\n                   color: red; \n                }\n            </style>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Name","TypeName":"Syncfusion.Blazor.Buttons.IconName","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the name of the built-in syncfusion icons to render. \n            </summary>\n            <value>\n            One of the <see cref=\"T:Syncfusion.Blazor.Buttons.IconName\" /> enumeration.\n            </value>\n            <remarks>\n            This property is used to render icons from predefined <see cref=\"T:Syncfusion.Blazor.Buttons.IconName\" /> options. You can use <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.IconCss\" /> to load custom icons.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Bold\"></SfIcon>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Syncfusion.Blazor.Buttons.IconSize","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the size of the icon.\n            </summary>\n            <value>\n            One of the <see cref=\"T:Syncfusion.Blazor.Buttons.IconSize\" /> enumeration that specifies the size of the icon. \n            The default value is <see cref=\"F:Syncfusion.Blazor.Buttons.IconSize.Medium\" />\n            </value>\n            <remarks>\n            The Size property used to set font size for icons. This property will considered only when icons are rendered using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.Name\" /> property.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Paste\" Size=\"IconSize.Large\"></SfIcon>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets title attribute for icon.\n            </summary>\n            <value>\n            Accepts a string. The default value is <c>String.Empty</c>.\n            </value>\n            <remarks>\n            Title attribute used to improve accessibility with screen readers and show a tooltip on mouse over the icon.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Cut\" Title=\"Cut\"></SfIcon>\n            ]]></code>\n            </example>\n        ","Metadata":{"Common.PropertyName":"Title"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons.SfIcon","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2032346339,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Buttons.SfIcon.ChildContent","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the child content for Icon component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfIcon"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Buttons.SfIcon.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":18564832,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Buttons.SfIcon.ChildContent","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <exclude />\n            <summary>\n            Gets or sets the child content for Icon component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Buttons.SfIcon"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Buttons.SfIcon.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":151933856,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            The RadioButton is a graphical user interface element that allows you to select one option from the choices.\n            It contains checked and unchecked states.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfRadioButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TChecked","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TChecked for the Syncfusion.Blazor.Buttons.SfRadioButton<TChecked> component.","Metadata":{"Common.PropertyName":"TChecked","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the caption for the RadioButton, that describes the purpose of the RadioButton.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"LabelPosition","TypeName":"Syncfusion.Blazor.Buttons.LabelPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions label `before`/`after` the RadioButton.\n            The possible values are:\n            - Before: The label is positioned to left of the RadioButton.\n            - After: The label is positioned to right of the RadioButton.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelPosition"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChangeArgs<TChecked>>","Documentation":"\n            <summary>\n            Event trigger when the RadioButton state has been changed by user interaction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the component wrapper element.\n            You can add custom styles to the component by using this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines name attribute for the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines value attribute for the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Checked","TypeName":"TChecked","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the component is checked or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Checked","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TChecked>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CheckedChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CheckedExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TChecked>>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CheckedExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the component is disabled or not.\n            When set to true, the component will be in disabled state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as title , native events etc., to the element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>","Components.GenericTyped":"True"}},{"HashCode":-2066143967,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            The RadioButton is a graphical user interface element that allows you to select one option from the choices.\n            It contains checked and unchecked states.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Buttons.SfRadioButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TChecked","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TChecked for the Syncfusion.Blazor.Buttons.SfRadioButton<TChecked> component.","Metadata":{"Common.PropertyName":"TChecked","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the caption for the RadioButton, that describes the purpose of the RadioButton.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"LabelPosition","TypeName":"Syncfusion.Blazor.Buttons.LabelPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions label `before`/`after` the RadioButton.\n            The possible values are:\n            - Before: The label is positioned to left of the RadioButton.\n            - After: The label is positioned to right of the RadioButton.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelPosition"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChangeArgs<TChecked>>","Documentation":"\n            <summary>\n            Event trigger when the RadioButton state has been changed by user interaction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the component wrapper element.\n            You can add custom styles to the component by using this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines name attribute for the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines value attribute for the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Checked","TypeName":"TChecked","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the component is checked or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Checked","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TChecked>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CheckedChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CheckedExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TChecked>>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CheckedExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the component is disabled or not.\n            When set to true, the component will be in disabled state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as title , native events etc., to the element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1470368906,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>.ChildContent","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfRadioButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1257587902,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>.ChildContent","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Buttons.SfRadioButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":105404819,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons.SfSwitch<TChecked>","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            The Switch is a graphical user interface element that allows you to toggle between checked and unchecked states.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfSwitch"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TChecked","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TChecked for the Syncfusion.Blazor.Buttons.SfSwitch<TChecked> component.","Metadata":{"Common.PropertyName":"TChecked","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnLabel","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies a text that indicates the Switch is in checked state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnLabel"}},{"Kind":"Components.Component","Name":"OffLabel","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies a text that indicates the Switch is in unchecked state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OffLabel"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChangeEventArgs<TChecked>>","Documentation":"\n            <summary>\n            Triggers when Switch state has been changed by user interaction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the component wrapper element.\n            You can add custom styles to the component by using this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines name attribute for the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines value attribute for the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Checked","TypeName":"TChecked","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the component is checked or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Checked","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TChecked>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CheckedChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CheckedExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TChecked>>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CheckedExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the component is disabled or not.\n            When set to true, the component will be in disabled state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as title , native events etc., to the element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons.SfSwitch<TChecked>","Components.GenericTyped":"True"}},{"HashCode":-1617949937,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons.SfSwitch<TChecked>","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <summary>\n            The Switch is a graphical user interface element that allows you to toggle between checked and unchecked states.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Buttons.SfSwitch"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TChecked","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TChecked for the Syncfusion.Blazor.Buttons.SfSwitch<TChecked> component.","Metadata":{"Common.PropertyName":"TChecked","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnLabel","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies a text that indicates the Switch is in checked state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnLabel"}},{"Kind":"Components.Component","Name":"OffLabel","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies a text that indicates the Switch is in unchecked state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OffLabel"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChangeEventArgs<TChecked>>","Documentation":"\n            <summary>\n            Triggers when Switch state has been changed by user interaction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChange","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the component wrapper element.\n            You can add custom styles to the component by using this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines name attribute for the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines value attribute for the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Checked","TypeName":"TChecked","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the component is checked or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Checked","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TChecked>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CheckedChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CheckedExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TChecked>>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CheckedExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the component is disabled or not.\n            When set to true, the component will be in disabled state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as title , native events etc., to the element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons.SfSwitch<TChecked>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1990487461,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Buttons.SfSwitch<TChecked>.ChildContent","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfSwitch"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Buttons.SfSwitch<TChecked>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1425060030,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Buttons.SfSwitch<TChecked>.ChildContent","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Buttons.SfSwitch"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Buttons.SfSwitch<TChecked>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1638313354,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons._Imports","AssemblyName":"Syncfusion.Blazor.Buttons","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons._Imports"}},{"HashCode":1776552270,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Buttons._Imports","AssemblyName":"Syncfusion.Blazor.Buttons","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Buttons._Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Buttons._Imports","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":420384704,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.SfListView<TValue>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            Component for executing complex list items common functionalities.\n            </summary>\n            <typeparam name=\"TValue\">The generic type parameter.</typeparam>\n            <summary>\n            Configure member properties of the ListView component.\n            </summary>\n            <summary>\n            The SfListView control represents the data in interactive hierarchical structure interface across different layouts or views,\n            that also has features such as data-binding, template, grouping and virtualization.\n            </summary>\n            <summary>\n            The SfListView control represents the data in interactive hierarchical structure interface across different layouts or views,\n            that also has features such as data-binding, template, grouping and virtualization.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfListView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Lists.SfListView<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            The `ID` property is used as a key to identify our element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Update child content from parent component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Lists.AnimationSettings","Documentation":"\n            <summary>\n            The `Animation` property provides an option to apply different\n             animations to the ListView component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"CheckBoxPosition","TypeName":"Syncfusion.Blazor.Lists.CheckBoxPosition","IsEnum":true,"Documentation":"\n            <summary>\n            The `CheckBoxPosition` is used to set the position of the check box in a list item.\n            By default, the `checkBoxPosition` is Left, which will appear before the text content in a list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CheckBoxPosition"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The `CssClass` property is used to add a user-preferred class name in the root element of the ListView,\n             using which you can customize the component (both CSS and functionality customization).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Documentation":"\n            <summary>\n            The `DataSource` provides the data to render the ListView component which is mapped with the fields of ListView.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If `Enabled` is set to true, the list items will be enabled. \n            You can disable the component using this property by setting its value as false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"EnableVirtualization","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If `EnableVirtualization` is set to true, the ListView’s performance will improve when loading a large amount of data.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableVirtualization"}},{"Kind":"Components.Component","Name":"HeaderTitle","TypeName":"System.String","Documentation":"\n            <summary>\n            The `HeaderTitle` is used to set the title of the ListView component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTitle"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the height of the ListView component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            The `HtmlAttributes` allows additional attributes such as id, class, etc., and\n             accepts n number of attributes in a key-value pair format.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            The `Query` is used to fetch specific data from the data source by using the where and select keywords.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"ShowCheckBox","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If `ShowCheckBox` is set to true, the checkbox will  be shown or hidden.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCheckBox"}},{"Kind":"Components.Component","Name":"ShowHeader","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If `ShowHeader` is set to true, the header of the ListView component will  be shown or hidden.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowHeader"}},{"Kind":"Components.Component","Name":"ShowIcon","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If `ShowIcon` is set to true, the icon of the list item will  be shown or hidden.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowIcon"}},{"Kind":"Components.Component","Name":"SortOrder","TypeName":"Syncfusion.Blazor.Lists.SortOrder","IsEnum":true,"Documentation":"\n            <summary>\n            The `SortOrder` is used to sort the data source. The available type of sort orders are,\n             `None` - The data source will not be sorted.\n             `Ascending` - The data source will be sorted in ascending order.\n             `Descending` - The data source will be sorted in descending order.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortOrder"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the width of the ListView component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Lists.ComposedItemModel<TValue>>","Documentation":"\n            <summary>\n            The ListView has an option to custom design the group header title with the help of the groupTemplate property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The ListView has an option to custom design the ListView header title with the help of the headerTemplate property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TValue>","Documentation":"\n            <summary>\n            The ListView supports customizing the content of each list item with the help of template property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Template","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.SfListView<TValue>","Components.GenericTyped":"True"}},{"HashCode":2008175136,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.SfListView<TValue>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            Component for executing complex list items common functionalities.\n            </summary>\n            <typeparam name=\"TValue\">The generic type parameter.</typeparam>\n            <summary>\n            Configure member properties of the ListView component.\n            </summary>\n            <summary>\n            The SfListView control represents the data in interactive hierarchical structure interface across different layouts or views,\n            that also has features such as data-binding, template, grouping and virtualization.\n            </summary>\n            <summary>\n            The SfListView control represents the data in interactive hierarchical structure interface across different layouts or views,\n            that also has features such as data-binding, template, grouping and virtualization.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Lists.SfListView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Lists.SfListView<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            The `ID` property is used as a key to identify our element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Update child content from parent component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Lists.AnimationSettings","Documentation":"\n            <summary>\n            The `Animation` property provides an option to apply different\n             animations to the ListView component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"CheckBoxPosition","TypeName":"Syncfusion.Blazor.Lists.CheckBoxPosition","IsEnum":true,"Documentation":"\n            <summary>\n            The `CheckBoxPosition` is used to set the position of the check box in a list item.\n            By default, the `checkBoxPosition` is Left, which will appear before the text content in a list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CheckBoxPosition"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The `CssClass` property is used to add a user-preferred class name in the root element of the ListView,\n             using which you can customize the component (both CSS and functionality customization).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Documentation":"\n            <summary>\n            The `DataSource` provides the data to render the ListView component which is mapped with the fields of ListView.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If `Enabled` is set to true, the list items will be enabled. \n            You can disable the component using this property by setting its value as false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePersistence"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"EnableVirtualization","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If `EnableVirtualization` is set to true, the ListView’s performance will improve when loading a large amount of data.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableVirtualization"}},{"Kind":"Components.Component","Name":"HeaderTitle","TypeName":"System.String","Documentation":"\n            <summary>\n            The `HeaderTitle` is used to set the title of the ListView component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTitle"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the height of the ListView component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            The `HtmlAttributes` allows additional attributes such as id, class, etc., and\n             accepts n number of attributes in a key-value pair format.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"\n            <summary>\n            The `Query` is used to fetch specific data from the data source by using the where and select keywords.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"ShowCheckBox","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If `ShowCheckBox` is set to true, the checkbox will  be shown or hidden.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCheckBox"}},{"Kind":"Components.Component","Name":"ShowHeader","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If `ShowHeader` is set to true, the header of the ListView component will  be shown or hidden.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowHeader"}},{"Kind":"Components.Component","Name":"ShowIcon","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If `ShowIcon` is set to true, the icon of the list item will  be shown or hidden.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowIcon"}},{"Kind":"Components.Component","Name":"SortOrder","TypeName":"Syncfusion.Blazor.Lists.SortOrder","IsEnum":true,"Documentation":"\n            <summary>\n            The `SortOrder` is used to sort the data source. The available type of sort orders are,\n             `None` - The data source will not be sorted.\n             `Ascending` - The data source will be sorted in ascending order.\n             `Descending` - The data source will be sorted in descending order.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortOrder"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the width of the ListView component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Lists.ComposedItemModel<TValue>>","Documentation":"\n            <summary>\n            The ListView has an option to custom design the group header title with the help of the groupTemplate property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The ListView has an option to custom design the ListView header title with the help of the headerTemplate property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TValue>","Documentation":"\n            <summary>\n            The ListView supports customizing the content of each list item with the help of template property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Template","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.SfListView<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1390017864,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Lists.SfListView<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <exclude />\n            <summary>\n            Update child content from parent component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfListView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Lists.SfListView<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1213587665,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Lists.SfListView<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <exclude />\n            <summary>\n            Update child content from parent component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Lists.SfListView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Lists.SfListView<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-246647632,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Lists.SfListView<TValue>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            The ListView has an option to custom design the group header title with the help of the groupTemplate property.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"SfListView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Lists.SfListView<TValue>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":950636860,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Lists.SfListView<TValue>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            The ListView has an option to custom design the group header title with the help of the groupTemplate property.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"Syncfusion.Blazor.Lists.SfListView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Lists.SfListView<TValue>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-943684790,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Lists.SfListView<TValue>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            The ListView has an option to custom design the ListView header title with the help of the headerTemplate property.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"SfListView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Lists.SfListView<TValue>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1930223552,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Lists.SfListView<TValue>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            The ListView has an option to custom design the ListView header title with the help of the headerTemplate property.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Syncfusion.Blazor.Lists.SfListView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Lists.SfListView<TValue>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2013674027,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Lists.SfListView<TValue>.Template","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            The ListView supports customizing the content of each list item with the help of template property.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"SfListView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Lists.SfListView<TValue>.Template","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":264186219,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Lists.SfListView<TValue>.Template","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            The ListView supports customizing the content of each list item with the help of template property.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"Syncfusion.Blazor.Lists.SfListView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Lists.SfListView<TValue>.Template","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-409071340,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.ListViewEvents<TValue>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            Configure handlers to handle the events with the ListView component.\n            </summary>\n            <typeparam name=\"TValue\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ListViewEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Lists.ListViewEvents<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnActionBegin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Lists.ActionEventsArgs>","Documentation":"\n            <summary>\n            Triggers when each ListView action begins.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionBegin","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnActionComplete","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Lists.ActionEventsArgs>","Documentation":"\n            <summary>\n            Triggers when each ListView action is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionComplete","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnActionFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Lists.ActionFailureEventsArgs>","Documentation":"\n            <summary>\n            Triggers when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Clicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Lists.ClickEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers when a list item in the component is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Clicked","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnBack","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Lists.BackEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers when the back icon is clicked in the nested list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnBack","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.ListViewEvents<TValue>","Components.GenericTyped":"True"}},{"HashCode":-670828705,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.ListViewEvents<TValue>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            Configure handlers to handle the events with the ListView component.\n            </summary>\n            <typeparam name=\"TValue\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Lists.ListViewEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Lists.ListViewEvents<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnActionBegin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Lists.ActionEventsArgs>","Documentation":"\n            <summary>\n            Triggers when each ListView action begins.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionBegin","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnActionComplete","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Lists.ActionEventsArgs>","Documentation":"\n            <summary>\n            Triggers when each ListView action is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionComplete","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnActionFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Lists.ActionFailureEventsArgs>","Documentation":"\n            <summary>\n            Triggers when the data fetch request from the remote server fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnActionFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Clicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Lists.ClickEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers when a list item in the component is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Clicked","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnBack","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Lists.BackEventArgs<TValue>>","Documentation":"\n            <summary>\n            Triggers when the back icon is clicked in the nested list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnBack","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the component is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.ListViewEvents<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1781791867,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.ListViewFieldSettings<TValue>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            Configure handlers to handle the field settings with the ListView component.\n            </summary>\n            <typeparam name=\"TValue\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ListViewFieldSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Lists.ListViewFieldSettings<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Child","TypeName":"System.String","Documentation":"\n            <summary>\n            The `Child` property is used for nested navigation of listed items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Child"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the enabled state of the ListView component.\n            You can disable the component using this property by setting its value as false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"GroupBy","TypeName":"System.String","Documentation":"\n            <summary>\n            The `GroupBy` property is used to wraps the ListView elements into a group based on the field value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupBy"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            The `HtmlAttributes` allows additional attributes such as id, class, etc., and\n             accepts n number of attributes in a key-value pair format.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            The `IconCss` is used to customize the icon fo the list items dynamically.\n             You can add a specific image to the icons using the `iconCss` property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id field mapped in data source.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.String","Documentation":"\n            <summary>\n            The `IsChecked` property is used to check whether the list items are in a checked state or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            The `Text` property is used to map the text value from the data source for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            The `Tooltip` is used to display the information about the target element while hovering on list items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.ListViewFieldSettings<TValue>","Components.GenericTyped":"True"}},{"HashCode":-864883096,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.ListViewFieldSettings<TValue>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            Configure handlers to handle the field settings with the ListView component.\n            </summary>\n            <typeparam name=\"TValue\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Lists.ListViewFieldSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Lists.ListViewFieldSettings<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Child","TypeName":"System.String","Documentation":"\n            <summary>\n            The `Child` property is used for nested navigation of listed items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Child"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the enabled state of the ListView component.\n            You can disable the component using this property by setting its value as false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"GroupBy","TypeName":"System.String","Documentation":"\n            <summary>\n            The `GroupBy` property is used to wraps the ListView elements into a group based on the field value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupBy"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            The `HtmlAttributes` allows additional attributes such as id, class, etc., and\n             accepts n number of attributes in a key-value pair format.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            The `IconCss` is used to customize the icon fo the list items dynamically.\n             You can add a specific image to the icons using the `iconCss` property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the id field mapped in data source.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.String","Documentation":"\n            <summary>\n            The `IsChecked` property is used to check whether the list items are in a checked state or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            The `Text` property is used to map the text value from the data source for each list item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            The `Tooltip` is used to display the information about the target element while hovering on list items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.ListViewFieldSettings<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2084875108,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.ListViewTemplates<TValue>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            Configure templates of the ListView component.\n            </summary>\n            <typeparam name=\"TValue\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ListViewTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Lists.ListViewTemplates<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TValue>","Documentation":"\n            <summary>\n            The ListView component supports to customize the content of each list items with the help of Template property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Template","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Lists.ComposedItemModel<TValue>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the ListView.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The ListView has an option to custom design the ListView header title with the help of HeaderTemplate property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.ListViewTemplates<TValue>","Components.GenericTyped":"True"}},{"HashCode":-61536094,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.ListViewTemplates<TValue>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            Configure templates of the ListView component.\n            </summary>\n            <typeparam name=\"TValue\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Lists.ListViewTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Lists.ListViewTemplates<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TValue>","Documentation":"\n            <summary>\n            The ListView component supports to customize the content of each list items with the help of Template property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Template","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Lists.ComposedItemModel<TValue>>","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the ListView.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The ListView has an option to custom design the ListView header title with the help of HeaderTemplate property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.ListViewTemplates<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1857008546,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Lists.ListViewTemplates<TValue>.Template","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            The ListView component supports to customize the content of each list items with the help of Template property.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"ListViewTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Lists.ListViewTemplates<TValue>.Template","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":964407351,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Lists.ListViewTemplates<TValue>.Template","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            The ListView component supports to customize the content of each list items with the help of Template property.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"Syncfusion.Blazor.Lists.ListViewTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Lists.ListViewTemplates<TValue>.Template","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1073573451,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Lists.ListViewTemplates<TValue>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the ListView.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"ListViewTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Lists.ListViewTemplates<TValue>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":955738260,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Lists.ListViewTemplates<TValue>.GroupTemplate","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            Accepts the template design and assigns it to the group headers present in the ListView.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"Syncfusion.Blazor.Lists.ListViewTemplates"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Lists.ListViewTemplates<TValue>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-509515990,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Lists.ListViewTemplates<TValue>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            The ListView has an option to custom design the ListView header title with the help of HeaderTemplate property.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"ListViewTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Lists.ListViewTemplates<TValue>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":983252993,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Lists.ListViewTemplates<TValue>.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            The ListView has an option to custom design the ListView header title with the help of HeaderTemplate property.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Syncfusion.Blazor.Lists.ListViewTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Lists.ListViewTemplates<TValue>.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1903574372,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists._Imports","AssemblyName":"Syncfusion.Blazor.Lists","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists._Imports"}},{"HashCode":-1192512839,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists._Imports","AssemblyName":"Syncfusion.Blazor.Lists","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Lists._Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists._Imports","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":502871585,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.Internal.ListBaseFoundation<T>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <exclude />\n            <summary>\n            A list base component for all the Syncfusion Blazor List dependant components to implement the common functionalities.\n            </summary>\n            <typeparam name=\"T\">The first generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ListBaseFoundation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the Syncfusion.Blazor.Lists.Internal.ListBaseFoundation<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<T>","Documentation":"\n            <summary>\n            Gets or sets DataSource field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ListBaseOptionModel","TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel<T>","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListBaseOptionModel","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"ItemCreating","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<T>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered before each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreating","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemCreated","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<T>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered after each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreated","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets item template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplatePropertyName"}},{"Kind":"Components.Component","Name":"GroupTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets group template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplatePropertyName"}},{"Kind":"Components.Component","Name":"StartingPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets starting position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StartingPosition"}},{"Kind":"Components.Component","Name":"LiElementHeight","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets list element height.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LiElementHeight"}},{"Kind":"Components.Component","Name":"EndPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets end position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EndPosition"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets Id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"VirtualScrolling","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the virtual scrolling.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VirtualScrolling"}},{"Kind":"Components.Component","Name":"CheckBoxPosition","TypeName":"Syncfusion.Blazor.Lists.CheckBoxPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the checkbox position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CheckBoxPosition"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseFoundation<T>","Components.GenericTyped":"True"}},{"HashCode":-1393735651,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.Internal.ListBaseFoundation<T>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <exclude />\n            <summary>\n            A list base component for all the Syncfusion Blazor List dependant components to implement the common functionalities.\n            </summary>\n            <typeparam name=\"T\">The first generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Lists.Internal.ListBaseFoundation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the Syncfusion.Blazor.Lists.Internal.ListBaseFoundation<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<T>","Documentation":"\n            <summary>\n            Gets or sets DataSource field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ListBaseOptionModel","TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel<T>","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListBaseOptionModel","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"ItemCreating","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<T>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered before each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreating","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemCreated","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<T>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered after each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreated","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets item template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplatePropertyName"}},{"Kind":"Components.Component","Name":"GroupTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets group template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplatePropertyName"}},{"Kind":"Components.Component","Name":"StartingPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets starting position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StartingPosition"}},{"Kind":"Components.Component","Name":"LiElementHeight","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets list element height.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LiElementHeight"}},{"Kind":"Components.Component","Name":"EndPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets end position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EndPosition"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets Id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"VirtualScrolling","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the virtual scrolling.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VirtualScrolling"}},{"Kind":"Components.Component","Name":"CheckBoxPosition","TypeName":"Syncfusion.Blazor.Lists.CheckBoxPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the checkbox position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CheckBoxPosition"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseFoundation<T>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1275451407,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.Internal.CreateListFromComplex<TValue>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <exclude />\n            <summary>\n            Component to create list from complex data for executing complex list items common functionalities.\n            </summary>\n            <typeparam name=\"TValue\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CreateListFromComplex"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Lists.Internal.CreateListFromComplex<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Defines the content which has to be passed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LiElementPosition","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the li element position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LiElementPosition"}},{"Kind":"Components.Component","Name":"ListId","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the id property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListId"}},{"Kind":"Components.Component","Name":"MappedData","TypeName":"Syncfusion.Blazor.Lists.Internal.FieldsValueMapping<System.Collections.Generic.List<TValue>>","Documentation":"\n            <summary>\n            Gets or sets MappedData.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MappedData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ListIsGroupItem","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets IsGroupItem field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListIsGroupItem"}},{"Kind":"Components.Component","Name":"Data","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets Data field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Data","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupItemData","TypeName":"Syncfusion.Blazor.Lists.ComposedItemModel<TValue>","Documentation":"\n            <summary>\n            Gets or sets GroupItemData field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupItemData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ListIsItemTemplate","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the item template field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListIsItemTemplate"}},{"Kind":"Components.Component","Name":"RandomID","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the random id field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RandomID"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets the index field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Index"}},{"Kind":"Components.Component","Name":"ListClassNames","TypeName":"Syncfusion.Blazor.Lists.Internal.ClassList","Documentation":"\n            <summary>\n            Gets or sets the class names field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListClassNames"}},{"Kind":"Components.Component","Name":"SfListBaseOptionModel","TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel<TValue>","Documentation":"\n            <summary>\n            Gets or sets the ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SfListBaseOptionModel","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Documentation":"\n            <summary>\n            Gets or sets DataSource field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ListBaseOptionModel","TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel<TValue>","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListBaseOptionModel","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"ItemCreating","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<TValue>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered before each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreating","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemCreated","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<TValue>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered after each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreated","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets item template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplatePropertyName"}},{"Kind":"Components.Component","Name":"GroupTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets group template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplatePropertyName"}},{"Kind":"Components.Component","Name":"StartingPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets starting position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StartingPosition"}},{"Kind":"Components.Component","Name":"LiElementHeight","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets list element height.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LiElementHeight"}},{"Kind":"Components.Component","Name":"EndPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets end position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EndPosition"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets Id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"VirtualScrolling","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the virtual scrolling.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VirtualScrolling"}},{"Kind":"Components.Component","Name":"CheckBoxPosition","TypeName":"Syncfusion.Blazor.Lists.CheckBoxPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the checkbox position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CheckBoxPosition"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.CreateListFromComplex<TValue>","Components.GenericTyped":"True"}},{"HashCode":-1624455334,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.Internal.CreateListFromComplex<TValue>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <exclude />\n            <summary>\n            Component to create list from complex data for executing complex list items common functionalities.\n            </summary>\n            <typeparam name=\"TValue\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Lists.Internal.CreateListFromComplex"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Lists.Internal.CreateListFromComplex<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Defines the content which has to be passed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LiElementPosition","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the li element position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LiElementPosition"}},{"Kind":"Components.Component","Name":"ListId","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the id property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListId"}},{"Kind":"Components.Component","Name":"MappedData","TypeName":"Syncfusion.Blazor.Lists.Internal.FieldsValueMapping<System.Collections.Generic.List<TValue>>","Documentation":"\n            <summary>\n            Gets or sets MappedData.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MappedData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ListIsGroupItem","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets IsGroupItem field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListIsGroupItem"}},{"Kind":"Components.Component","Name":"Data","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets Data field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Data","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupItemData","TypeName":"Syncfusion.Blazor.Lists.ComposedItemModel<TValue>","Documentation":"\n            <summary>\n            Gets or sets GroupItemData field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupItemData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ListIsItemTemplate","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the item template field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListIsItemTemplate"}},{"Kind":"Components.Component","Name":"RandomID","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the random id field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RandomID"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets the index field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Index"}},{"Kind":"Components.Component","Name":"ListClassNames","TypeName":"Syncfusion.Blazor.Lists.Internal.ClassList","Documentation":"\n            <summary>\n            Gets or sets the class names field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListClassNames"}},{"Kind":"Components.Component","Name":"SfListBaseOptionModel","TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel<TValue>","Documentation":"\n            <summary>\n            Gets or sets the ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SfListBaseOptionModel","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Documentation":"\n            <summary>\n            Gets or sets DataSource field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ListBaseOptionModel","TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel<TValue>","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListBaseOptionModel","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"ItemCreating","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<TValue>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered before each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreating","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemCreated","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<TValue>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered after each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreated","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets item template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplatePropertyName"}},{"Kind":"Components.Component","Name":"GroupTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets group template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplatePropertyName"}},{"Kind":"Components.Component","Name":"StartingPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets starting position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StartingPosition"}},{"Kind":"Components.Component","Name":"LiElementHeight","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets list element height.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LiElementHeight"}},{"Kind":"Components.Component","Name":"EndPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets end position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EndPosition"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets Id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"VirtualScrolling","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the virtual scrolling.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VirtualScrolling"}},{"Kind":"Components.Component","Name":"CheckBoxPosition","TypeName":"Syncfusion.Blazor.Lists.CheckBoxPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the checkbox position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CheckBoxPosition"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.CreateListFromComplex<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-160391493,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Lists.Internal.CreateListFromComplex<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            Defines the content which has to be passed.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CreateListFromComplex"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.CreateListFromComplex<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":76187712,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Lists.Internal.CreateListFromComplex<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            Defines the content which has to be passed.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Lists.Internal.CreateListFromComplex"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.CreateListFromComplex<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":683437438,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.Internal.ListBaseFields<TValue>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            List base fields class.\n            </summary>\n            <typeparam name=\"TValue\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ListBaseFields"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Lists.Internal.ListBaseFields<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Child","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in Child.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Child"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in Enabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"GroupBy","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in GroupBy.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupBy"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in HtmlAttributes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in IconCss.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in Id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in IsChecked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in IsVisible.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in Text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in Tooltip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in Value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseFields<TValue>","Components.GenericTyped":"True"}},{"HashCode":264119707,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.Internal.ListBaseFields<TValue>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            List base fields class.\n            </summary>\n            <typeparam name=\"TValue\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Lists.Internal.ListBaseFields"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Lists.Internal.ListBaseFields<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Child","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in Child.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Child"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in Enabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}},{"Kind":"Components.Component","Name":"GroupBy","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in GroupBy.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupBy"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in HtmlAttributes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in IconCss.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in Id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in IsChecked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in IsVisible.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in Text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in Tooltip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies that fields that mapped in Value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseFields<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":425246176,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.Internal.ListItemBase<T>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            An class that holds list Item properties related arguments.\n            </summary>\n            <typeparam name=\"T\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ListItemBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the Syncfusion.Blazor.Lists.Internal.ListItemBase<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"MappedData","TypeName":"Syncfusion.Blazor.Lists.Internal.FieldsValueMapping<System.Collections.Generic.List<T>>","Documentation":"\n            <summary>\n            Gets or sets MappedData.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MappedData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"IsGroupItem","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets IsGroupItem field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsGroupItem"}},{"Kind":"Components.Component","Name":"Data","TypeName":"T","Documentation":"\n            <summary>\n            Gets or sets Data field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Data","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupItemData","TypeName":"Syncfusion.Blazor.Lists.ComposedItemModel<T>","Documentation":"\n            <summary>\n            Gets or sets GroupItemData field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupItemData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"IsItemTemplate","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the item template field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsItemTemplate"}},{"Kind":"Components.Component","Name":"IsGroupTemplate","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the group item template field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsGroupTemplate"}},{"Kind":"Components.Component","Name":"RandomID","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the random id field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RandomID"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets the index field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Index"}},{"Kind":"Components.Component","Name":"ClassNames","TypeName":"Syncfusion.Blazor.Lists.Internal.ClassList","Documentation":"\n            <summary>\n            Gets or sets the class names field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ClassNames"}},{"Kind":"Components.Component","Name":"ListBaseOptionModel","TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel<T>","Documentation":"\n            <summary>\n            Gets or sets the ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListBaseOptionModel","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.ListItemBase<T>","Components.GenericTyped":"True"}},{"HashCode":339892462,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.Internal.ListItemBase<T>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            An class that holds list Item properties related arguments.\n            </summary>\n            <typeparam name=\"T\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Lists.Internal.ListItemBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the Syncfusion.Blazor.Lists.Internal.ListItemBase<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"MappedData","TypeName":"Syncfusion.Blazor.Lists.Internal.FieldsValueMapping<System.Collections.Generic.List<T>>","Documentation":"\n            <summary>\n            Gets or sets MappedData.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MappedData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"IsGroupItem","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets IsGroupItem field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsGroupItem"}},{"Kind":"Components.Component","Name":"Data","TypeName":"T","Documentation":"\n            <summary>\n            Gets or sets Data field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Data","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupItemData","TypeName":"Syncfusion.Blazor.Lists.ComposedItemModel<T>","Documentation":"\n            <summary>\n            Gets or sets GroupItemData field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupItemData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"IsItemTemplate","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the item template field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsItemTemplate"}},{"Kind":"Components.Component","Name":"IsGroupTemplate","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the group item template field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsGroupTemplate"}},{"Kind":"Components.Component","Name":"RandomID","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the random id field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RandomID"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets the index field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Index"}},{"Kind":"Components.Component","Name":"ClassNames","TypeName":"Syncfusion.Blazor.Lists.Internal.ClassList","Documentation":"\n            <summary>\n            Gets or sets the class names field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ClassNames"}},{"Kind":"Components.Component","Name":"ListBaseOptionModel","TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel<T>","Documentation":"\n            <summary>\n            Gets or sets the ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListBaseOptionModel","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.ListItemBase<T>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1546514232,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.Internal.ListCommonBase<T>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            This class holds listbase properties related arguments.\n            </summary>\n            <typeparam name=\"T\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ListCommonBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the Syncfusion.Blazor.Lists.Internal.ListCommonBase<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<T>","Documentation":"\n            <summary>\n            Gets or sets DataSource field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ListBaseOptionModel","TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel<T>","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListBaseOptionModel","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"ItemCreating","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<T>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered before each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreating","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemCreated","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<T>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered after each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreated","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets item template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplatePropertyName"}},{"Kind":"Components.Component","Name":"GroupTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets group template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplatePropertyName"}},{"Kind":"Components.Component","Name":"StartingPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets starting position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StartingPosition"}},{"Kind":"Components.Component","Name":"LiElementHeight","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets list element height.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LiElementHeight"}},{"Kind":"Components.Component","Name":"EndPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets end position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EndPosition"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets Id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"VirtualScrolling","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the virtual scrolling.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VirtualScrolling"}},{"Kind":"Components.Component","Name":"CheckBoxPosition","TypeName":"Syncfusion.Blazor.Lists.CheckBoxPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the checkbox position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CheckBoxPosition"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.ListCommonBase<T>","Components.GenericTyped":"True"}},{"HashCode":1340358017,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.Internal.ListCommonBase<T>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            This class holds listbase properties related arguments.\n            </summary>\n            <typeparam name=\"T\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Lists.Internal.ListCommonBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the Syncfusion.Blazor.Lists.Internal.ListCommonBase<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<T>","Documentation":"\n            <summary>\n            Gets or sets DataSource field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ListBaseOptionModel","TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel<T>","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListBaseOptionModel","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"ItemCreating","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<T>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered before each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreating","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemCreated","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<T>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered after each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreated","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets item template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplatePropertyName"}},{"Kind":"Components.Component","Name":"GroupTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets group template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplatePropertyName"}},{"Kind":"Components.Component","Name":"StartingPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets starting position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StartingPosition"}},{"Kind":"Components.Component","Name":"LiElementHeight","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets list element height.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LiElementHeight"}},{"Kind":"Components.Component","Name":"EndPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets end position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EndPosition"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets Id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"VirtualScrolling","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the virtual scrolling.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VirtualScrolling"}},{"Kind":"Components.Component","Name":"CheckBoxPosition","TypeName":"Syncfusion.Blazor.Lists.CheckBoxPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the checkbox position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CheckBoxPosition"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.ListCommonBase<T>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1231666187,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.Internal.CreateListFromPrimitive<TValue>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <exclude />\n            /// <summary>\n            Component for executing primitive list items common functionalities.\n            </summary>\n            <typeparam name=\"TValue\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CreateListFromPrimitive"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Lists.Internal.CreateListFromPrimitive<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Documentation":"\n            <summary>\n            Gets or sets DataSource field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ListBaseOptionModel","TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel<TValue>","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListBaseOptionModel","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"ItemCreating","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<TValue>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered before each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreating","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemCreated","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<TValue>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered after each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreated","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets item template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplatePropertyName"}},{"Kind":"Components.Component","Name":"GroupTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets group template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplatePropertyName"}},{"Kind":"Components.Component","Name":"StartingPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets starting position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StartingPosition"}},{"Kind":"Components.Component","Name":"LiElementHeight","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets list element height.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LiElementHeight"}},{"Kind":"Components.Component","Name":"EndPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets end position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EndPosition"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets Id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"VirtualScrolling","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the virtual scrolling.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VirtualScrolling"}},{"Kind":"Components.Component","Name":"CheckBoxPosition","TypeName":"Syncfusion.Blazor.Lists.CheckBoxPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the checkbox position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CheckBoxPosition"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.CreateListFromPrimitive<TValue>","Components.GenericTyped":"True"}},{"HashCode":-42847901,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.Internal.CreateListFromPrimitive<TValue>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <exclude />\n            /// <summary>\n            Component for executing primitive list items common functionalities.\n            </summary>\n            <typeparam name=\"TValue\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Lists.Internal.CreateListFromPrimitive"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Lists.Internal.CreateListFromPrimitive<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Documentation":"\n            <summary>\n            Gets or sets DataSource field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ListBaseOptionModel","TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel<TValue>","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListBaseOptionModel","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"ItemCreating","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<TValue>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered before each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreating","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemCreated","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<TValue>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered after each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreated","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets item template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplatePropertyName"}},{"Kind":"Components.Component","Name":"GroupTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets group template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplatePropertyName"}},{"Kind":"Components.Component","Name":"StartingPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets starting position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StartingPosition"}},{"Kind":"Components.Component","Name":"LiElementHeight","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets list element height.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LiElementHeight"}},{"Kind":"Components.Component","Name":"EndPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets end position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EndPosition"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets Id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"VirtualScrolling","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the virtual scrolling.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VirtualScrolling"}},{"Kind":"Components.Component","Name":"CheckBoxPosition","TypeName":"Syncfusion.Blazor.Lists.CheckBoxPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the checkbox position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CheckBoxPosition"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.CreateListFromPrimitive<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":858412961,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.Internal.PrimitiveListItem<TValue>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            Component to create list from primitive data for executing primitive list items common functionalities.\n            </summary>\n            <typeparam name=\"TValue\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PrimitiveListItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Lists.Internal.PrimitiveListItem<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"MappedData","TypeName":"Syncfusion.Blazor.Lists.Internal.FieldsValueMapping<System.Collections.Generic.List<TValue>>","Documentation":"\n            <summary>\n            Gets or sets MappedData.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MappedData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"IsGroupItem","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets IsGroupItem field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsGroupItem"}},{"Kind":"Components.Component","Name":"Data","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets Data field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Data","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupItemData","TypeName":"Syncfusion.Blazor.Lists.ComposedItemModel<TValue>","Documentation":"\n            <summary>\n            Gets or sets GroupItemData field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupItemData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"IsItemTemplate","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the item template field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsItemTemplate"}},{"Kind":"Components.Component","Name":"IsGroupTemplate","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the group item template field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsGroupTemplate"}},{"Kind":"Components.Component","Name":"RandomID","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the random id field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RandomID"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets the index field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Index"}},{"Kind":"Components.Component","Name":"ClassNames","TypeName":"Syncfusion.Blazor.Lists.Internal.ClassList","Documentation":"\n            <summary>\n            Gets or sets the class names field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ClassNames"}},{"Kind":"Components.Component","Name":"ListBaseOptionModel","TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel<TValue>","Documentation":"\n            <summary>\n            Gets or sets the ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListBaseOptionModel","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.PrimitiveListItem<TValue>","Components.GenericTyped":"True"}},{"HashCode":1251780768,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.Internal.PrimitiveListItem<TValue>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <summary>\n            Component to create list from primitive data for executing primitive list items common functionalities.\n            </summary>\n            <typeparam name=\"TValue\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Lists.Internal.PrimitiveListItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Lists.Internal.PrimitiveListItem<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"MappedData","TypeName":"Syncfusion.Blazor.Lists.Internal.FieldsValueMapping<System.Collections.Generic.List<TValue>>","Documentation":"\n            <summary>\n            Gets or sets MappedData.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MappedData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"IsGroupItem","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets IsGroupItem field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsGroupItem"}},{"Kind":"Components.Component","Name":"Data","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets Data field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Data","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"GroupItemData","TypeName":"Syncfusion.Blazor.Lists.ComposedItemModel<TValue>","Documentation":"\n            <summary>\n            Gets or sets GroupItemData field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupItemData","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"IsItemTemplate","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the item template field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsItemTemplate"}},{"Kind":"Components.Component","Name":"IsGroupTemplate","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the group item template field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsGroupTemplate"}},{"Kind":"Components.Component","Name":"RandomID","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the random id field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RandomID"}},{"Kind":"Components.Component","Name":"Index","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets the index field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Index"}},{"Kind":"Components.Component","Name":"ClassNames","TypeName":"Syncfusion.Blazor.Lists.Internal.ClassList","Documentation":"\n            <summary>\n            Gets or sets the class names field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ClassNames"}},{"Kind":"Components.Component","Name":"ListBaseOptionModel","TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel<TValue>","Documentation":"\n            <summary>\n            Gets or sets the ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListBaseOptionModel","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.PrimitiveListItem<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1706813473,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.Internal.SfListBase<TValue>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <exclude />\n            <summary>\n            A list base component for all the Syncfusion Blazor List dependant components to implement the common functionalities.\n            </summary>\n            /// <typeparam name=\"TValue\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfListBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Lists.Internal.SfListBase<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Update child content from parent component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Documentation":"\n            <summary>\n            Gets or sets DataSource field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ListBaseOptionModel","TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel<TValue>","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListBaseOptionModel","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"ItemCreating","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<TValue>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered before each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreating","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemCreated","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<TValue>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered after each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreated","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets item template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplatePropertyName"}},{"Kind":"Components.Component","Name":"GroupTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets group template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplatePropertyName"}},{"Kind":"Components.Component","Name":"StartingPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets starting position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StartingPosition"}},{"Kind":"Components.Component","Name":"LiElementHeight","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets list element height.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LiElementHeight"}},{"Kind":"Components.Component","Name":"EndPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets end position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EndPosition"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets Id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"VirtualScrolling","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the virtual scrolling.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VirtualScrolling"}},{"Kind":"Components.Component","Name":"CheckBoxPosition","TypeName":"Syncfusion.Blazor.Lists.CheckBoxPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the checkbox position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CheckBoxPosition"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.SfListBase<TValue>","Components.GenericTyped":"True"}},{"HashCode":390608970,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Lists.Internal.SfListBase<TValue>","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <exclude />\n            <summary>\n            A list base component for all the Syncfusion Blazor List dependant components to implement the common functionalities.\n            </summary>\n            /// <typeparam name=\"TValue\">The generic type parameter.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Lists.Internal.SfListBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Syncfusion.Blazor.Lists.Internal.SfListBase<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Update child content from parent component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Documentation":"\n            <summary>\n            Gets or sets DataSource field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataSource","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ListBaseOptionModel","TypeName":"Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel<TValue>","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ListBaseOptionModel","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets ListBaseOptionModel field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"ItemCreating","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<TValue>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered before each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreating","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemCreated","TypeName":"System.Action<Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs<TValue>>","Documentation":"\n            <summary>\n            Specifies the callback function that triggered after each list creation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCreated","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets item template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplatePropertyName"}},{"Kind":"Components.Component","Name":"GroupTemplatePropertyName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets group template property name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GroupTemplatePropertyName"}},{"Kind":"Components.Component","Name":"StartingPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets starting position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StartingPosition"}},{"Kind":"Components.Component","Name":"LiElementHeight","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets list element height.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LiElementHeight"}},{"Kind":"Components.Component","Name":"EndPosition","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets end position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EndPosition"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets Id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"VirtualScrolling","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the virtual scrolling.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VirtualScrolling"}},{"Kind":"Components.Component","Name":"CheckBoxPosition","TypeName":"Syncfusion.Blazor.Lists.CheckBoxPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the checkbox position.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CheckBoxPosition"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.SfListBase<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-911569071,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Lists.Internal.SfListBase<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <exclude />\n            <summary>\n            Update child content from parent component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfListBase"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.SfListBase<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":927017131,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Lists.Internal.SfListBase<TValue>.ChildContent","AssemblyName":"Syncfusion.Blazor.Lists","Documentation":"\n            <exclude />\n            <summary>\n            Update child content from parent component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Lists.Internal.SfListBase"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Lists.Internal.SfListBase<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":864137390,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerBase","AssemblyName":"Syncfusion.Blazor.PdfViewer","Documentation":"\n            <summary>\n            Represents the methods of PDF Viewer component.\n            </summary>\n            <summary>\n            Represent the PDF Viewer component object.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the ID for the PDF Viewer parent DOM elemet div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            ChildContent used to define child elements for the root component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ServiceUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the URL for service calls.\n            </summary>\n            <remarks>\n            This ServiceUrl is applicable for web assembly project alone.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ServiceUrl"}},{"Kind":"Components.Component","Name":"EnableFormFieldsValidation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, validate form fields will be triggered. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableFormFieldsValidation"}},{"Kind":"Components.Component","Name":"PageCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets the total page count of the loaded PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageCount"}},{"Kind":"Components.Component","Name":"PageCountChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"\n            <summary>\n            Gets the event callback for PageCount.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageCountChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PageCountExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Int32>>","Documentation":"\n            <summary>\n            Gets the expression for PageCount.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageCountExpression"}},{"Kind":"Components.Component","Name":"IsDocumentEdited","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets the value to check whether the document has been edited or not. By default it is false. If the document edited, it returns true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsDocumentEdited"}},{"Kind":"Components.Component","Name":"CurrentPageNumber","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets the current page number of the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentPageNumber"}},{"Kind":"Components.Component","Name":"CurrentPageNumberChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"\n            <summary>\n            Gets the event callback for CurrentPageNumber.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentPageNumberChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CurrentPageNumberExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Int32>>","Documentation":"\n            <summary>\n            Gets the expression for CurrentPageNumber.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentPageNumberExpression"}},{"Kind":"Components.Component","Name":"DocumentPath","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the PDF document path for initial loading.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DocumentPath"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, then PDF Viewer will render in right to left direction. By default it will render in left to right direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Locale","TypeName":"System.String","Documentation":"\n            <summary>\n            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Locale"}},{"Kind":"Components.Component","Name":"ZoomValue","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets the Zoom Percentage value of the PDF Viewer. It's range varies from 10 to 400.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZoomValue"}},{"Kind":"Components.Component","Name":"ZoomValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"\n            <summary>\n            Gets the event callback for ZoomValue.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZoomValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ZoomValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Int32>>","Documentation":"\n            <summary>\n            Gets the expression for ZoomValue.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZoomValueExpression"}},{"Kind":"Components.Component","Name":"ZoomMode","TypeName":"Syncfusion.Blazor.PdfViewer.ZoomMode","IsEnum":true,"Documentation":"\n            <summary>\n            Indicates whether the PDF page will be rendered in fit to page, fit to width or based on the zoom percentage value(default) in the PDF Viewer. By default it value is Default and it represent the page rendered based on the zoom percentage.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZoomMode"}},{"Kind":"Components.Component","Name":"DownloadFileName","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the name of the file to be downloaded.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DownloadFileName"}},{"Kind":"Components.Component","Name":"ExportAnnotationFileName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the file name of annotations to be exported.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExportAnnotationFileName"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the scrollable height of the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the scrollable width of the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"EnableToolbar","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then toolbar  of the PDF Viewer will not be visible. By default it is true and visible.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableToolbar"}},{"Kind":"Components.Component","Name":"EnableAnnotationToolbar","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the edit annotation option in the toolbar will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableAnnotationToolbar"}},{"Kind":"Components.Component","Name":"EnableNavigationToolbar","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then left side toolbar(bookmark, thumbnail navigation toolbar) will not be visible. By default it is true and visible.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableNavigationToolbar"}},{"Kind":"Components.Component","Name":"RetryCount","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets the retry count for PDF Viewer service call. By default  retrycount is 1.\n            </summary>\n            <remarks>\n            This RetryCount is only applicable for Web Assembly projects alone.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"RetryCount"}},{"Kind":"Components.Component","Name":"EnableErrorDialog","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then error dialogue display in PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableErrorDialog"}},{"Kind":"Components.Component","Name":"EnableCommentPanel","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then text selection in the PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableCommentPanel"}},{"Kind":"Components.Component","Name":"IsCommentPanelOpen","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the comment panel is in expanded or collapsed state. If it set as true, then the thumbnail panel will be expanded or open state. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsCommentPanelOpen"}},{"Kind":"Components.Component","Name":"EnableThumbnailPanel","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, the thumbnail panel on the left side of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableThumbnailPanel"}},{"Kind":"Components.Component","Name":"IsThumbnailPanelOpen","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the thumbnail panel is in expanded or collapsed state. If it set as true, then the thumbnail panel will be expanded or open state . By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsThumbnailPanelOpen"}},{"Kind":"Components.Component","Name":"EnableDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the download option in the toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableDownload"}},{"Kind":"Components.Component","Name":"EnablePrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the print option in the toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePrint"}},{"Kind":"Components.Component","Name":"EnablePrintRotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as FALSE, will suppress the page rotation of Landscape document on print action. By default it is TRUE.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePrintRotation"}},{"Kind":"Components.Component","Name":"PrintMode","TypeName":"Syncfusion.Blazor.PdfViewer.PrintMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the print mode in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PrintMode"}},{"Kind":"Components.Component","Name":"IsSignatureEditable","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, the signature included in the PDF Viewer will saved as ink annotation on download action in the PDF Viewer. Otherwise the signature will be flattened on downloading or saving. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsSignatureEditable"}},{"Kind":"Components.Component","Name":"EnableBookmarkPanel","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, the bookmark panel on the left side of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableBookmarkPanel"}},{"Kind":"Components.Component","Name":"EnableHyperlink","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then hyperlink in the PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableHyperlink"}},{"Kind":"Components.Component","Name":"EnableHandwrittenSignature","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            if it is set as false, then the handwritten signature tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableHandwrittenSignature"}},{"Kind":"Components.Component","Name":"EnableInkAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the ink annotation support in the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableInkAnnotation"}},{"Kind":"Components.Component","Name":"RestrictZoomRequest","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, then page image will be fetched only when the zoom percentage is 100. Otherwise, mutliple page image fetched for different zoom percentages on performing zoom operation. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RestrictZoomRequest"}},{"Kind":"Components.Component","Name":"HyperlinkOpenState","TypeName":"Syncfusion.Blazor.PdfViewer.LinkTarget","IsEnum":true,"Documentation":"\n            <summary>\n            Indicates whether the URL is opened in current tab, new tab, new window . By default it is current tab.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HyperlinkOpenState"}},{"Kind":"Components.Component","Name":"EnableNavigation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then page navigation of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableNavigation"}},{"Kind":"Components.Component","Name":"EnableAutoComplete","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false,  auto complete behavior of form fields will be disabled. Be default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableAutoComplete"}},{"Kind":"Components.Component","Name":"EnableMagnification","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then all the zoom operations in the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableMagnification"}},{"Kind":"Components.Component","Name":"EnableShapeLabel","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, label for shape and measure annotations can be added. It used to display the text content about the shape or measure annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableShapeLabel"}},{"Kind":"Components.Component","Name":"EnableImportAnnotationMeasurement","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disables the customization of measure values in PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableImportAnnotationMeasurement"}},{"Kind":"Components.Component","Name":"EnablePinchZoom","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then pinch zoom of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePinchZoom"}},{"Kind":"Components.Component","Name":"EnableZoomOptimization","TypeName":"System.Boolean","Documentation":"\n            <summary>\n             If it is set as false, then page image will be fetched for each zoom percentage values. Otherwise, page image will be fetched only when the zoom percentages are 100 %,200 %,300 %, and 400 %. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableZoomOptimization"}},{"Kind":"Components.Component","Name":"EnableTextSelection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then text selection in the PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTextSelection"}},{"Kind":"Components.Component","Name":"EnableTextSearch","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then text search support in the PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTextSearch"}},{"Kind":"Components.Component","Name":"EnableAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the annotation support in the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableAnnotation"}},{"Kind":"Components.Component","Name":"EnableFormFields","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, form fields in the PDF document can't be interacted or edited. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableFormFields"}},{"Kind":"Components.Component","Name":"IsFormFieldDocument","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets the value to check whether the loaded document have the form fields or not. By default it is false. If the document contains any form field it returns true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsFormFieldDocument"}},{"Kind":"Components.Component","Name":"EnableFreeText","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the free text annotation tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableFreeText"}},{"Kind":"Components.Component","Name":"EnableTextMarkupAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the textmarkup tools (highlight, strikethrough, and underline) are disabled in annotation toolbar. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTextMarkupAnnotation"}},{"Kind":"Components.Component","Name":"EnableShapeAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the shape annotation tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableShapeAnnotation"}},{"Kind":"Components.Component","Name":"EnableMeasureAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the measurement annotation tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableMeasureAnnotation"}},{"Kind":"Components.Component","Name":"EnableStampAnnotations","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the stamp annotation tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableStampAnnotations"}},{"Kind":"Components.Component","Name":"EnableStickyNotesAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the sticky notes annotation tool in the toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableStickyNotesAnnotation"}},{"Kind":"Components.Component","Name":"InteractionMode","TypeName":"Syncfusion.Blazor.PdfViewer.InteractionMode","IsEnum":true,"Documentation":"\n            <summary>\n            Indicates whether the interaction is in selection(select tool) or pan mode. By default it it selection.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InteractionMode"}},{"Kind":"Components.Component","Name":"IsExtractText","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, the PDF Viewer will extract the text from the document asynchronously after the initial loading. Once the extraction process completed  then ExtractTextCompleted event will be triggered.\n            The extracted text can be accessed from event args of the ExtractTextCompleted event. By default it is false and text won't be extracted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsExtractText"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines single or multiple classes (separated by space) to be used for customization styles of viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"ToolbarSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerToolbarSettings","Documentation":"\n            <summary>\n            Defines the builtin toolbar and annotation toolbar option to be visible in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ToolbarSettings"}},{"Kind":"Components.Component","Name":"AjaxRequestSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAjaxRequestSettings","Documentation":"\n            <summary>\n            Customize the AJAX request header.\n            </summary>\n            <remarks>\n            AjaxRequestSettings is applicable for Web assembly blazor alone.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"AjaxRequestSettings"}},{"Kind":"Components.Component","Name":"ServerActionSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerServerActionSettings","Documentation":"\n            <summary>\n            Defines the settings of the PdfViewer service. It is used to map the server action method name for service calls.\n            </summary>\n            <remarks>\n            This ServerActionSettings is applicable for web assembly project alone.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ServerActionSettings"}},{"Kind":"Components.Component","Name":"TextSearchColorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerTextSearchColorSettings","Documentation":"\n            <summary>\n            Configure the search text and highlight text color for the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextSearchColorSettings"}},{"Kind":"Components.Component","Name":"ContextMenuSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerContextMenuSettings","Documentation":"\n            <summary>\n            Defines the settings of context menu for the PDF Viewer. It used to customize the context menu options to visibles in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContextMenuSettings"}},{"Kind":"Components.Component","Name":"TileRenderingSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerTileRenderingSettings","Documentation":"\n            <summary>\n            Define the tile rendering settings. Tile rendering will render the PDF pages into mutiple tiles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TileRenderingSettings"}},{"Kind":"Components.Component","Name":"ScrollSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerScrollSettings","Documentation":"\n            <summary>\n            Define the tile rendering settings. Tile rendering will render the PDF pages into mutiple tiles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ScrollSettings"}},{"Kind":"Components.Component","Name":"AnnotationSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSettings","Documentation":"\n            <summary>\n            Defines the annotation settings for PDF Viewer. It used to customize the author, max/min width and height of the annotations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSettings"}},{"Kind":"Components.Component","Name":"HighlightSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerHighlightSettings","Documentation":"\n            <summary>\n            Defines the settings of highlight annotation. It used to customize the highlight annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HighlightSettings"}},{"Kind":"Components.Component","Name":"StrikethroughSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStrikethroughSettings","Documentation":"\n            <summary>\n            Defines the settings of strikethrough annotation. It used to customize the strikethrough annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrikethroughSettings"}},{"Kind":"Components.Component","Name":"UnderlineSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerUnderlineSettings","Documentation":"\n            <summary>\n            Defines the settings of underline annotation. It is used to customize the properties of the underline annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"UnderlineSettings"}},{"Kind":"Components.Component","Name":"ShapeLabelSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerShapeLabelSettings","Documentation":"\n            <summary>\n            Provide option to customize the label text for shape and measure annotations. It is applicable only if set EnableShapeLabel is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShapeLabelSettings"}},{"Kind":"Components.Component","Name":"LineSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerLineSettings","Documentation":"\n            <summary>\n            Defines the settings of line annotation. It used to customize the line annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LineSettings"}},{"Kind":"Components.Component","Name":"ArrowSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerArrowSettings","Documentation":"\n            <summary>\n            Defines the settings of arrow annotation. It used to customize the arrow annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ArrowSettings"}},{"Kind":"Components.Component","Name":"RectangleSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerRectangleSettings","Documentation":"\n            <summary>\n            Defines the settings of rectangle annotation. It used to customize the rectangle annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RectangleSettings"}},{"Kind":"Components.Component","Name":"CircleSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCircleSettings","Documentation":"\n            <summary>\n            Defines the settings of circle annotation. It used to customize circle annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CircleSettings"}},{"Kind":"Components.Component","Name":"PolygonSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerPolygonSettings","Documentation":"\n            <summary>\n            Defines the settings of polygon annotation. It used to customize the polygon annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PolygonSettings"}},{"Kind":"Components.Component","Name":"MeasurementSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerMeasurementSettings","Documentation":"\n            <summary>\n            Defines the settings of measurement annotation. It used to customize the measurement annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MeasurementSettings"}},{"Kind":"Components.Component","Name":"DistanceSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerDistanceSettings","Documentation":"\n            <summary>\n            Defines the settings of distance annotation. It used to customize distance annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DistanceSettings"}},{"Kind":"Components.Component","Name":"PerimeterSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerPerimeterSettings","Documentation":"\n            <summary>\n            Defines the settings of perimeter annotation. It used to customize the perimeter annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PerimeterSettings"}},{"Kind":"Components.Component","Name":"AreaSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAreaSettings","Documentation":"\n            <summary>\n            Defines the settings of area annotation. It used to customize the area annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AreaSettings"}},{"Kind":"Components.Component","Name":"RadiusSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerRadiusSettings","Documentation":"\n            <summary>\n            Defines the settings of radius annotation. It used to customize the radius annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RadiusSettings"}},{"Kind":"Components.Component","Name":"VolumeSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerVolumeSettings","Documentation":"\n            <summary>\n            Defines the settings of volumne annotation. It is used to customize the properties of the volume annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VolumeSettings"}},{"Kind":"Components.Component","Name":"StampSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStampSettings","Documentation":"\n            <summary>\n            Defines the settings of stamp annotation.It is used to customize the stamp annoations settings, stamp menu items to be visible in annotation toolbar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StampSettings"}},{"Kind":"Components.Component","Name":"CustomStampSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStampSettings","Documentation":"\n            <summary>\n            Defines the settings of customStamp annotation. It use to customize the custom annoation support for the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomStampSettings"}},{"Kind":"Components.Component","Name":"FreeTextSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerFreeTextSettings","Documentation":"\n            <summary>\n            Defines the settings of free text annotation. It used to customize the free text annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FreeTextSettings"}},{"Kind":"Components.Component","Name":"HandwrittenSignatureSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerHandwrittenSignatureSettings","Documentation":"\n            <summary>\n            Defines the settings of handwritten signature annotation. It used to customize the handwritten signature annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HandwrittenSignatureSettings"}},{"Kind":"Components.Component","Name":"InkAnnotationSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerInkAnnotationSettings","Documentation":"\n            <summary>\n            Defines the ink annotation settings for PDF Viewer.It used to customize the strokeColor, thickness, opacity of the ink annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InkAnnotationSettings"}},{"Kind":"Components.Component","Name":"StickyNotesSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStickyNotesSettings","Documentation":"\n            <summary>\n            Defines the settings of stickyNotes annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StickyNotesSettings"}},{"Kind":"Components.Component","Name":"EnableDesktopMode","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a boolean value to show or hide desktop toolbar in mobile devices. FALSE by default.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableDesktopMode"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerBase"}},{"HashCode":530387978,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerBase","AssemblyName":"Syncfusion.Blazor.PdfViewer","Documentation":"\n            <summary>\n            Represents the methods of PDF Viewer component.\n            </summary>\n            <summary>\n            Represent the PDF Viewer component object.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the ID for the PDF Viewer parent DOM elemet div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            ChildContent used to define child elements for the root component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ServiceUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the URL for service calls.\n            </summary>\n            <remarks>\n            This ServiceUrl is applicable for web assembly project alone.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ServiceUrl"}},{"Kind":"Components.Component","Name":"EnableFormFieldsValidation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, validate form fields will be triggered. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableFormFieldsValidation"}},{"Kind":"Components.Component","Name":"PageCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets the total page count of the loaded PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageCount"}},{"Kind":"Components.Component","Name":"PageCountChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"\n            <summary>\n            Gets the event callback for PageCount.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageCountChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PageCountExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Int32>>","Documentation":"\n            <summary>\n            Gets the expression for PageCount.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageCountExpression"}},{"Kind":"Components.Component","Name":"IsDocumentEdited","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets the value to check whether the document has been edited or not. By default it is false. If the document edited, it returns true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsDocumentEdited"}},{"Kind":"Components.Component","Name":"CurrentPageNumber","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets the current page number of the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentPageNumber"}},{"Kind":"Components.Component","Name":"CurrentPageNumberChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"\n            <summary>\n            Gets the event callback for CurrentPageNumber.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentPageNumberChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CurrentPageNumberExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Int32>>","Documentation":"\n            <summary>\n            Gets the expression for CurrentPageNumber.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentPageNumberExpression"}},{"Kind":"Components.Component","Name":"DocumentPath","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the PDF document path for initial loading.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DocumentPath"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, then PDF Viewer will render in right to left direction. By default it will render in left to right direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Locale","TypeName":"System.String","Documentation":"\n            <summary>\n            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Locale"}},{"Kind":"Components.Component","Name":"ZoomValue","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets the Zoom Percentage value of the PDF Viewer. It's range varies from 10 to 400.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZoomValue"}},{"Kind":"Components.Component","Name":"ZoomValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"\n            <summary>\n            Gets the event callback for ZoomValue.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZoomValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ZoomValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Int32>>","Documentation":"\n            <summary>\n            Gets the expression for ZoomValue.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZoomValueExpression"}},{"Kind":"Components.Component","Name":"ZoomMode","TypeName":"Syncfusion.Blazor.PdfViewer.ZoomMode","IsEnum":true,"Documentation":"\n            <summary>\n            Indicates whether the PDF page will be rendered in fit to page, fit to width or based on the zoom percentage value(default) in the PDF Viewer. By default it value is Default and it represent the page rendered based on the zoom percentage.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZoomMode"}},{"Kind":"Components.Component","Name":"DownloadFileName","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the name of the file to be downloaded.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DownloadFileName"}},{"Kind":"Components.Component","Name":"ExportAnnotationFileName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the file name of annotations to be exported.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExportAnnotationFileName"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the scrollable height of the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the scrollable width of the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"EnableToolbar","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then toolbar  of the PDF Viewer will not be visible. By default it is true and visible.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableToolbar"}},{"Kind":"Components.Component","Name":"EnableAnnotationToolbar","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the edit annotation option in the toolbar will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableAnnotationToolbar"}},{"Kind":"Components.Component","Name":"EnableNavigationToolbar","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then left side toolbar(bookmark, thumbnail navigation toolbar) will not be visible. By default it is true and visible.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableNavigationToolbar"}},{"Kind":"Components.Component","Name":"RetryCount","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets the retry count for PDF Viewer service call. By default  retrycount is 1.\n            </summary>\n            <remarks>\n            This RetryCount is only applicable for Web Assembly projects alone.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"RetryCount"}},{"Kind":"Components.Component","Name":"EnableErrorDialog","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then error dialogue display in PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableErrorDialog"}},{"Kind":"Components.Component","Name":"EnableCommentPanel","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then text selection in the PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableCommentPanel"}},{"Kind":"Components.Component","Name":"IsCommentPanelOpen","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the comment panel is in expanded or collapsed state. If it set as true, then the thumbnail panel will be expanded or open state. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsCommentPanelOpen"}},{"Kind":"Components.Component","Name":"EnableThumbnailPanel","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, the thumbnail panel on the left side of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableThumbnailPanel"}},{"Kind":"Components.Component","Name":"IsThumbnailPanelOpen","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the thumbnail panel is in expanded or collapsed state. If it set as true, then the thumbnail panel will be expanded or open state . By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsThumbnailPanelOpen"}},{"Kind":"Components.Component","Name":"EnableDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the download option in the toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableDownload"}},{"Kind":"Components.Component","Name":"EnablePrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the print option in the toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePrint"}},{"Kind":"Components.Component","Name":"EnablePrintRotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as FALSE, will suppress the page rotation of Landscape document on print action. By default it is TRUE.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePrintRotation"}},{"Kind":"Components.Component","Name":"PrintMode","TypeName":"Syncfusion.Blazor.PdfViewer.PrintMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the print mode in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PrintMode"}},{"Kind":"Components.Component","Name":"IsSignatureEditable","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, the signature included in the PDF Viewer will saved as ink annotation on download action in the PDF Viewer. Otherwise the signature will be flattened on downloading or saving. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsSignatureEditable"}},{"Kind":"Components.Component","Name":"EnableBookmarkPanel","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, the bookmark panel on the left side of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableBookmarkPanel"}},{"Kind":"Components.Component","Name":"EnableHyperlink","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then hyperlink in the PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableHyperlink"}},{"Kind":"Components.Component","Name":"EnableHandwrittenSignature","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            if it is set as false, then the handwritten signature tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableHandwrittenSignature"}},{"Kind":"Components.Component","Name":"EnableInkAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the ink annotation support in the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableInkAnnotation"}},{"Kind":"Components.Component","Name":"RestrictZoomRequest","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, then page image will be fetched only when the zoom percentage is 100. Otherwise, mutliple page image fetched for different zoom percentages on performing zoom operation. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RestrictZoomRequest"}},{"Kind":"Components.Component","Name":"HyperlinkOpenState","TypeName":"Syncfusion.Blazor.PdfViewer.LinkTarget","IsEnum":true,"Documentation":"\n            <summary>\n            Indicates whether the URL is opened in current tab, new tab, new window . By default it is current tab.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HyperlinkOpenState"}},{"Kind":"Components.Component","Name":"EnableNavigation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then page navigation of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableNavigation"}},{"Kind":"Components.Component","Name":"EnableAutoComplete","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false,  auto complete behavior of form fields will be disabled. Be default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableAutoComplete"}},{"Kind":"Components.Component","Name":"EnableMagnification","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then all the zoom operations in the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableMagnification"}},{"Kind":"Components.Component","Name":"EnableShapeLabel","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, label for shape and measure annotations can be added. It used to display the text content about the shape or measure annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableShapeLabel"}},{"Kind":"Components.Component","Name":"EnableImportAnnotationMeasurement","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disables the customization of measure values in PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableImportAnnotationMeasurement"}},{"Kind":"Components.Component","Name":"EnablePinchZoom","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then pinch zoom of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePinchZoom"}},{"Kind":"Components.Component","Name":"EnableZoomOptimization","TypeName":"System.Boolean","Documentation":"\n            <summary>\n             If it is set as false, then page image will be fetched for each zoom percentage values. Otherwise, page image will be fetched only when the zoom percentages are 100 %,200 %,300 %, and 400 %. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableZoomOptimization"}},{"Kind":"Components.Component","Name":"EnableTextSelection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then text selection in the PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTextSelection"}},{"Kind":"Components.Component","Name":"EnableTextSearch","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then text search support in the PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTextSearch"}},{"Kind":"Components.Component","Name":"EnableAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the annotation support in the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableAnnotation"}},{"Kind":"Components.Component","Name":"EnableFormFields","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, form fields in the PDF document can't be interacted or edited. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableFormFields"}},{"Kind":"Components.Component","Name":"IsFormFieldDocument","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets the value to check whether the loaded document have the form fields or not. By default it is false. If the document contains any form field it returns true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsFormFieldDocument"}},{"Kind":"Components.Component","Name":"EnableFreeText","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the free text annotation tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableFreeText"}},{"Kind":"Components.Component","Name":"EnableTextMarkupAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the textmarkup tools (highlight, strikethrough, and underline) are disabled in annotation toolbar. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTextMarkupAnnotation"}},{"Kind":"Components.Component","Name":"EnableShapeAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the shape annotation tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableShapeAnnotation"}},{"Kind":"Components.Component","Name":"EnableMeasureAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the measurement annotation tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableMeasureAnnotation"}},{"Kind":"Components.Component","Name":"EnableStampAnnotations","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the stamp annotation tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableStampAnnotations"}},{"Kind":"Components.Component","Name":"EnableStickyNotesAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the sticky notes annotation tool in the toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableStickyNotesAnnotation"}},{"Kind":"Components.Component","Name":"InteractionMode","TypeName":"Syncfusion.Blazor.PdfViewer.InteractionMode","IsEnum":true,"Documentation":"\n            <summary>\n            Indicates whether the interaction is in selection(select tool) or pan mode. By default it it selection.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InteractionMode"}},{"Kind":"Components.Component","Name":"IsExtractText","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, the PDF Viewer will extract the text from the document asynchronously after the initial loading. Once the extraction process completed  then ExtractTextCompleted event will be triggered.\n            The extracted text can be accessed from event args of the ExtractTextCompleted event. By default it is false and text won't be extracted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsExtractText"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines single or multiple classes (separated by space) to be used for customization styles of viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"ToolbarSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerToolbarSettings","Documentation":"\n            <summary>\n            Defines the builtin toolbar and annotation toolbar option to be visible in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ToolbarSettings"}},{"Kind":"Components.Component","Name":"AjaxRequestSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAjaxRequestSettings","Documentation":"\n            <summary>\n            Customize the AJAX request header.\n            </summary>\n            <remarks>\n            AjaxRequestSettings is applicable for Web assembly blazor alone.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"AjaxRequestSettings"}},{"Kind":"Components.Component","Name":"ServerActionSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerServerActionSettings","Documentation":"\n            <summary>\n            Defines the settings of the PdfViewer service. It is used to map the server action method name for service calls.\n            </summary>\n            <remarks>\n            This ServerActionSettings is applicable for web assembly project alone.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ServerActionSettings"}},{"Kind":"Components.Component","Name":"TextSearchColorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerTextSearchColorSettings","Documentation":"\n            <summary>\n            Configure the search text and highlight text color for the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextSearchColorSettings"}},{"Kind":"Components.Component","Name":"ContextMenuSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerContextMenuSettings","Documentation":"\n            <summary>\n            Defines the settings of context menu for the PDF Viewer. It used to customize the context menu options to visibles in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContextMenuSettings"}},{"Kind":"Components.Component","Name":"TileRenderingSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerTileRenderingSettings","Documentation":"\n            <summary>\n            Define the tile rendering settings. Tile rendering will render the PDF pages into mutiple tiles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TileRenderingSettings"}},{"Kind":"Components.Component","Name":"ScrollSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerScrollSettings","Documentation":"\n            <summary>\n            Define the tile rendering settings. Tile rendering will render the PDF pages into mutiple tiles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ScrollSettings"}},{"Kind":"Components.Component","Name":"AnnotationSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSettings","Documentation":"\n            <summary>\n            Defines the annotation settings for PDF Viewer. It used to customize the author, max/min width and height of the annotations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSettings"}},{"Kind":"Components.Component","Name":"HighlightSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerHighlightSettings","Documentation":"\n            <summary>\n            Defines the settings of highlight annotation. It used to customize the highlight annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HighlightSettings"}},{"Kind":"Components.Component","Name":"StrikethroughSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStrikethroughSettings","Documentation":"\n            <summary>\n            Defines the settings of strikethrough annotation. It used to customize the strikethrough annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrikethroughSettings"}},{"Kind":"Components.Component","Name":"UnderlineSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerUnderlineSettings","Documentation":"\n            <summary>\n            Defines the settings of underline annotation. It is used to customize the properties of the underline annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"UnderlineSettings"}},{"Kind":"Components.Component","Name":"ShapeLabelSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerShapeLabelSettings","Documentation":"\n            <summary>\n            Provide option to customize the label text for shape and measure annotations. It is applicable only if set EnableShapeLabel is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShapeLabelSettings"}},{"Kind":"Components.Component","Name":"LineSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerLineSettings","Documentation":"\n            <summary>\n            Defines the settings of line annotation. It used to customize the line annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LineSettings"}},{"Kind":"Components.Component","Name":"ArrowSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerArrowSettings","Documentation":"\n            <summary>\n            Defines the settings of arrow annotation. It used to customize the arrow annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ArrowSettings"}},{"Kind":"Components.Component","Name":"RectangleSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerRectangleSettings","Documentation":"\n            <summary>\n            Defines the settings of rectangle annotation. It used to customize the rectangle annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RectangleSettings"}},{"Kind":"Components.Component","Name":"CircleSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCircleSettings","Documentation":"\n            <summary>\n            Defines the settings of circle annotation. It used to customize circle annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CircleSettings"}},{"Kind":"Components.Component","Name":"PolygonSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerPolygonSettings","Documentation":"\n            <summary>\n            Defines the settings of polygon annotation. It used to customize the polygon annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PolygonSettings"}},{"Kind":"Components.Component","Name":"MeasurementSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerMeasurementSettings","Documentation":"\n            <summary>\n            Defines the settings of measurement annotation. It used to customize the measurement annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MeasurementSettings"}},{"Kind":"Components.Component","Name":"DistanceSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerDistanceSettings","Documentation":"\n            <summary>\n            Defines the settings of distance annotation. It used to customize distance annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DistanceSettings"}},{"Kind":"Components.Component","Name":"PerimeterSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerPerimeterSettings","Documentation":"\n            <summary>\n            Defines the settings of perimeter annotation. It used to customize the perimeter annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PerimeterSettings"}},{"Kind":"Components.Component","Name":"AreaSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAreaSettings","Documentation":"\n            <summary>\n            Defines the settings of area annotation. It used to customize the area annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AreaSettings"}},{"Kind":"Components.Component","Name":"RadiusSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerRadiusSettings","Documentation":"\n            <summary>\n            Defines the settings of radius annotation. It used to customize the radius annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RadiusSettings"}},{"Kind":"Components.Component","Name":"VolumeSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerVolumeSettings","Documentation":"\n            <summary>\n            Defines the settings of volumne annotation. It is used to customize the properties of the volume annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VolumeSettings"}},{"Kind":"Components.Component","Name":"StampSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStampSettings","Documentation":"\n            <summary>\n            Defines the settings of stamp annotation.It is used to customize the stamp annoations settings, stamp menu items to be visible in annotation toolbar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StampSettings"}},{"Kind":"Components.Component","Name":"CustomStampSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStampSettings","Documentation":"\n            <summary>\n            Defines the settings of customStamp annotation. It use to customize the custom annoation support for the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomStampSettings"}},{"Kind":"Components.Component","Name":"FreeTextSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerFreeTextSettings","Documentation":"\n            <summary>\n            Defines the settings of free text annotation. It used to customize the free text annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FreeTextSettings"}},{"Kind":"Components.Component","Name":"HandwrittenSignatureSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerHandwrittenSignatureSettings","Documentation":"\n            <summary>\n            Defines the settings of handwritten signature annotation. It used to customize the handwritten signature annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HandwrittenSignatureSettings"}},{"Kind":"Components.Component","Name":"InkAnnotationSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerInkAnnotationSettings","Documentation":"\n            <summary>\n            Defines the ink annotation settings for PDF Viewer.It used to customize the strokeColor, thickness, opacity of the ink annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InkAnnotationSettings"}},{"Kind":"Components.Component","Name":"StickyNotesSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStickyNotesSettings","Documentation":"\n            <summary>\n            Defines the settings of stickyNotes annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StickyNotesSettings"}},{"Kind":"Components.Component","Name":"EnableDesktopMode","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a boolean value to show or hide desktop toolbar in mobile devices. FALSE by default.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableDesktopMode"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerBase","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-20379494,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerBase.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","Documentation":"\n            <summary>\n            ChildContent used to define child elements for the root component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerBase"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerBase.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2101930429,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerBase.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","Documentation":"\n            <summary>\n            ChildContent used to define child elements for the root component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerBase"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerBase.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":233583852,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerAjaxRequestSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerAjaxRequestSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AjaxHeaders","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AjaxHeader>","Documentation":"\n            <summary>\n            set the ajax Header values in the PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AjaxHeaders"}},{"Kind":"Components.Component","Name":"WithCredentials","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            set the ajax credentials for the pdfviewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"WithCredentials"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAjaxRequestSettings"}},{"HashCode":1260574783,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerAjaxRequestSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerAjaxRequestSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AjaxHeaders","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AjaxHeader>","Documentation":"\n            <summary>\n            set the ajax Header values in the PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AjaxHeaders"}},{"Kind":"Components.Component","Name":"WithCredentials","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            set the ajax credentials for the pdfviewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"WithCredentials"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAjaxRequestSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-823902336,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerAjaxRequestSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerAjaxRequestSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAjaxRequestSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1438804431,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerAjaxRequestSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerAjaxRequestSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAjaxRequestSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":360942753,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerAnnotationSelectorSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ResizerLocation","TypeName":"Syncfusion.Blazor.PdfViewer.AnnotationResizerLocation","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the location for the resizer of the annotation. It is used to customize the resizer location of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ResizerLocation"}},{"Kind":"Components.Component","Name":"ResizerShape","TypeName":"Syncfusion.Blazor.PdfViewer.AnnotationResizerShape","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the shape of the resizer. By default it is Square. Different shapes of resizer are circle and square.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ResizerShape"}},{"Kind":"Components.Component","Name":"SelectionBorderColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the selection border color for the annotation. By default it is empty. It is used to customize the selection border color for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectionBorderColor"}},{"Kind":"Components.Component","Name":"SelectionBorderThickness","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the selection border thickness for the annotation. By default it is 1. It is used to customize the selection border thickness for the annotation. It's range varies from 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectionBorderThickness"}},{"Kind":"Components.Component","Name":"SelectorLineDashArray","TypeName":"System.Double[]","Documentation":"\n            <summary>\n            Defines the selector line dash array. By default it is empty.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectorLineDashArray"}},{"Kind":"Components.Component","Name":"ResizerCursorType","TypeName":"Syncfusion.Blazor.PdfViewer.CursorType","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the annotation resizer Type. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ResizerCursorType"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings"}},{"HashCode":1574550056,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ResizerLocation","TypeName":"Syncfusion.Blazor.PdfViewer.AnnotationResizerLocation","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the location for the resizer of the annotation. It is used to customize the resizer location of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ResizerLocation"}},{"Kind":"Components.Component","Name":"ResizerShape","TypeName":"Syncfusion.Blazor.PdfViewer.AnnotationResizerShape","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the shape of the resizer. By default it is Square. Different shapes of resizer are circle and square.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ResizerShape"}},{"Kind":"Components.Component","Name":"SelectionBorderColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the selection border color for the annotation. By default it is empty. It is used to customize the selection border color for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectionBorderColor"}},{"Kind":"Components.Component","Name":"SelectionBorderThickness","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the selection border thickness for the annotation. By default it is 1. It is used to customize the selection border thickness for the annotation. It's range varies from 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectionBorderThickness"}},{"Kind":"Components.Component","Name":"SelectorLineDashArray","TypeName":"System.Double[]","Documentation":"\n            <summary>\n            Defines the selector line dash array. By default it is empty.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectorLineDashArray"}},{"Kind":"Components.Component","Name":"ResizerCursorType","TypeName":"Syncfusion.Blazor.PdfViewer.CursorType","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the annotation resizer Type. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ResizerCursorType"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":233762180,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerAnnotationSelectorSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1453474874,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-121414896,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerAnnotationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSettings"}},{"HashCode":-249189474,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":544979828,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerAnnotationSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1068429141,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1761926399,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerAreaSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerAreaSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAreaSettings"}},{"HashCode":1126750381,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerAreaSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerAreaSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAreaSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2004772937,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerAreaSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerAreaSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAreaSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-47479401,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerAreaSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerAreaSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAreaSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2001541447,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerArrowSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerArrowSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LineHeadEndStyle","TypeName":"Syncfusion.Blazor.PdfViewer.LineHeadStyle","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the head end style of the line annotation. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LineHeadEndStyle"}},{"Kind":"Components.Component","Name":"LineHeadStartStyle","TypeName":"Syncfusion.Blazor.PdfViewer.LineHeadStyle","IsEnum":true,"Documentation":"\n            <summary>\n             Defines the head end style of the line annotation. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LineHeadStartStyle"}},{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerArrowSettings"}},{"HashCode":1931640815,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerArrowSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerArrowSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LineHeadEndStyle","TypeName":"Syncfusion.Blazor.PdfViewer.LineHeadStyle","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the head end style of the line annotation. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LineHeadEndStyle"}},{"Kind":"Components.Component","Name":"LineHeadStartStyle","TypeName":"Syncfusion.Blazor.PdfViewer.LineHeadStyle","IsEnum":true,"Documentation":"\n            <summary>\n             Defines the head end style of the line annotation. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LineHeadStartStyle"}},{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerArrowSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":96208638,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerArrowSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerArrowSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerArrowSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1396203487,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerArrowSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerArrowSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerArrowSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1081748957,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerCircleSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerCircleSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCircleSettings"}},{"HashCode":1822546300,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerCircleSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerCircleSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCircleSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1682759607,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerCircleSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerCircleSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCircleSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1351283794,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerCircleSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerCircleSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCircleSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1692373306,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerContextMenuSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerContextMenuSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EnableContextMenu","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable context menu in PDF Viewer. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableContextMenu"}},{"Kind":"Components.Component","Name":"ContextMenuAction","TypeName":"Syncfusion.Blazor.PdfViewer.ContextMenuAction","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the context menu action. By default it is RightClick. If it is set as MouseUp, context menu will open on mouse up action instead of rightclick action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContextMenuAction"}},{"Kind":"Components.Component","Name":"ContextMenuItems","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.ContextMenuItem>","Documentation":"\n            <summary>\n            Defines the context menu items shoule be visibled in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContextMenuItems"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerContextMenuSettings"}},{"HashCode":-774047252,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerContextMenuSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerContextMenuSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EnableContextMenu","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable context menu in PDF Viewer. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableContextMenu"}},{"Kind":"Components.Component","Name":"ContextMenuAction","TypeName":"Syncfusion.Blazor.PdfViewer.ContextMenuAction","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the context menu action. By default it is RightClick. If it is set as MouseUp, context menu will open on mouse up action instead of rightclick action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContextMenuAction"}},{"Kind":"Components.Component","Name":"ContextMenuItems","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.ContextMenuItem>","Documentation":"\n            <summary>\n            Defines the context menu items shoule be visibled in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContextMenuItems"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerContextMenuSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1036783280,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerContextMenuSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerContextMenuSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerContextMenuSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-766515895,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerContextMenuSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerContextMenuSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerContextMenuSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2097930864,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStamp","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerCustomStamp"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CustomStampName","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the custom stamp name to be added in stamp menu of the PDF Viewer toolbar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomStampName"}},{"Kind":"Components.Component","Name":"CustomStampImageSource","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the custom stamp images source to be added in stamp menu of the PDF Viewer toolbar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomStampImageSource"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStamp"}},{"HashCode":620736077,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStamp","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStamp"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CustomStampName","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the custom stamp name to be added in stamp menu of the PDF Viewer toolbar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomStampName"}},{"Kind":"Components.Component","Name":"CustomStampImageSource","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the custom stamp images source to be added in stamp menu of the PDF Viewer toolbar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomStampImageSource"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStamp","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-358478792,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStamp.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerCustomStamp"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStamp.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":550948114,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStamp.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStamp"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStamp.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-958581790,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStampSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerCustomStampSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"EnableCustomStamp","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then we can't add the custom stamp annoation in the PDF Viewer. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableCustomStamp"}},{"Kind":"Components.Component","Name":"IsAddToMenu","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies to maintain the newly added custom stamp element in the menu items. By default it is false\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsAddToMenu"}},{"Kind":"Components.Component","Name":"CustomStamps","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.PdfViewerCustomStamp>","Metadata":{"Common.PropertyName":"CustomStamps"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the height of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the width of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"SignatureDialogSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings","Documentation":"\n            <summary>\n            specified the signature dialog settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SignatureDialogSettings"}},{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStampSettings"}},{"HashCode":-2087762452,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStampSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStampSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"EnableCustomStamp","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then we can't add the custom stamp annoation in the PDF Viewer. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableCustomStamp"}},{"Kind":"Components.Component","Name":"IsAddToMenu","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies to maintain the newly added custom stamp element in the menu items. By default it is false\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsAddToMenu"}},{"Kind":"Components.Component","Name":"CustomStamps","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.PdfViewerCustomStamp>","Metadata":{"Common.PropertyName":"CustomStamps"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the height of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the width of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"SignatureDialogSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings","Documentation":"\n            <summary>\n            specified the signature dialog settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SignatureDialogSettings"}},{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStampSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":172842497,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStampSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerCustomStampSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStampSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-5636437,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStampSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStampSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStampSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-964994966,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerDistanceSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerDistanceSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LeaderLength","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the leader length of the annotation. By default it is 40.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LeaderLength"}},{"Kind":"Components.Component","Name":"LineHeadEndStyle","TypeName":"Syncfusion.Blazor.PdfViewer.LineHeadStyle","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the head end style of the line annotation. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LineHeadEndStyle"}},{"Kind":"Components.Component","Name":"LineHeadStartStyle","TypeName":"Syncfusion.Blazor.PdfViewer.LineHeadStyle","IsEnum":true,"Documentation":"\n            <summary>\n             Defines the head end style of the line annotation. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LineHeadStartStyle"}},{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerDistanceSettings"}},{"HashCode":-1105694129,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerDistanceSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerDistanceSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LeaderLength","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the leader length of the annotation. By default it is 40.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LeaderLength"}},{"Kind":"Components.Component","Name":"LineHeadEndStyle","TypeName":"Syncfusion.Blazor.PdfViewer.LineHeadStyle","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the head end style of the line annotation. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LineHeadEndStyle"}},{"Kind":"Components.Component","Name":"LineHeadStartStyle","TypeName":"Syncfusion.Blazor.PdfViewer.LineHeadStyle","IsEnum":true,"Documentation":"\n            <summary>\n             Defines the head end style of the line annotation. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LineHeadStartStyle"}},{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerDistanceSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-10817592,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerDistanceSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerDistanceSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerDistanceSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1913565839,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerDistanceSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerDistanceSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerDistanceSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":38842421,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerEvents","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AddSignature","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AddSignatureEventArgs>","Documentation":"\n            <summary>\n            Triggers when signature is added  over the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AddSignature","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AjaxRequestFailed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AjaxRequestFailureEventArgs>","Documentation":"\n            <summary>\n            Triggers when the AJAX request is failed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AjaxRequestFailed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnnotationAdded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AnnotationAddEventArgs>","Documentation":"\n            <summary>\n            Triggers when an annotation is added over the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationAdded","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnAnnotationDoubleClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AnnotationDoubleClickEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the annotation is double click.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnAnnotationDoubleClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnnotationMouseover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AnnotationMouseoverEventArgs>","Documentation":"\n            <summary>\n            Triggers when mouse over the annotation object.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationMouseover","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnnotationMoved","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AnnotationMoveEventArgs>","Documentation":"\n            <summary>\n            Triggers when an annotation is moved over the page of the PDF document.\n            </summary>\n            <remarks>\n            AnnotationMove event is not applicable for text markup annotations.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"AnnotationMoved","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnnotationPropertiesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AnnotationPropertiesChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the property of the annotation is changed in the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationPropertiesChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnnotationRemoved","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AnnotationRemoveEventArgs>","Documentation":"\n            <summary>\n            Triggers when an annotation is removed from the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationRemoved","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnnotationResized","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AnnotationResizeEventArgs>","Documentation":"\n            <summary>\n            Triggers when an annotation is resized over the page of the PDF document.\n            </summary>\n            <remarks>\n            This event does not applicable for Sticky note annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"AnnotationResized","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnnotationSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AnnotationSelectEventArgs>","Documentation":"\n            <summary>\n            Triggers when an annotation is selected over the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the PdfViewer component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DocumentLoaded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.LoadEventArgs>","Documentation":"\n            <summary>\n            Triggers while loading document into PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DocumentLoaded","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DocumentLoadFailed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.LoadFailedEventArgs>","Documentation":"\n            <summary>\n            Triggers while loading document got failed in PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DocumentLoadFailed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DocumentUnloaded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.UnloadEventArgs>","Documentation":"\n            <summary>\n            Triggers while close the document\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DocumentUnloaded","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DownloadEnd","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.DownloadEndEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the download actions is finished.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DownloadEnd","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DownloadStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.DownloadStartEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the download action is started.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DownloadStart","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ExportFailed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ExportFailureEventArgs>","Documentation":"\n            <summary>\n            Triggers when an export annotations failed in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExportFailed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ExportStarted","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ExportStartEventArgs>","Documentation":"\n            <summary>\n            Triggers when an exported annotations started in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExportStarted","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ExportSucceed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ExportSuccessEventArgs>","Documentation":"\n            <summary>\n            Triggers when an export annotations succeed in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExportSucceed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ExtractTextCompleted","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ExtractTextCompletedEventArgs>","Documentation":"\n            <summary>\n            Triggers when an text extraction is completed in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExtractTextCompleted","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHyperlinkClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.HyperlinkClickEventArgs>","Documentation":"\n            <summary>\n            Triggers when hyperlink in the PDF Document is clicked\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnHyperlinkClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHyperlinkMouseOver","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.HyperlinkMouseOverArgs>","Documentation":"\n            <summary>\n            Triggers when hyperlink in the PDF Document is hovered\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnHyperlinkMouseOver","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ImportFailed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ImportFailureEventArgs>","Documentation":"\n            <summary>\n            Triggers when an imports annotations failed in the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImportFailed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ImportStarted","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ImportStartEventArgs>","Documentation":"\n            <summary>\n            Triggers when an imported annotations started in the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImportStarted","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ImportSucceed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ImportSuccessEventArgs>","Documentation":"\n            <summary>\n            Triggers when an imports annotations succeed in the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImportSucceed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MoveSignature","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.MoveSignatureEventArgs>","Documentation":"\n            <summary>\n            Triggers when an signature is moved over the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MoveSignature","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PageChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.PageChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when there is change in current page number.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPageClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.PageClickEventArgs>","Documentation":"\n            <summary>\n            Triggers when the mouse click is performed over the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnPageClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PageMouseover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.PageMouseoverEventArgs>","Documentation":"\n            <summary>\n            Triggers when mouse over the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageMouseover","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PrintEnd","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.PrintEndEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the print actions is finished.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PrintEnd","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PrintStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.PrintStartEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the print action is started.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PrintStart","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"RemoveSignature","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.RemoveSignatureEventArgs>","Documentation":"\n            <summary>\n            Triggers when signature is removed over the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RemoveSignature","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ResizeSignature","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ResizeSignatureEventArgs>","Documentation":"\n            <summary>\n            Triggers when signature is resized over the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ResizeSignature","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SignatureSelect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.SignatureSelectEventArgs>","Documentation":"\n            <summary>\n            Triggers when signature is selected over the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SignatureSelect","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SignaturePropertiesChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.SignaturePropertiesChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the property of the signature is changed in the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SignaturePropertiesChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTextSearchComplete","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.TextSearchCompleteEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the text search is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTextSearchComplete","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTextSearchHighlight","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.TextSearchHighlightEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the text search text is highlighted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTextSearchHighlight","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTextSearchStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.TextSearchStartEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the text search is started.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTextSearchStart","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTextSelectionEnd","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.TextSelectionEndEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the text selection is finished.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTextSelectionEnd","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTextSelectionStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.TextSelectionStartEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the text selection is started.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTextSelectionStart","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnThumbnailClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ThumbnailClickEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the thumbnail is clicked in the thumbnail panel of PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnThumbnailClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValidateFormFields","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ValidateFormFieldsArgs>","Documentation":"\n            <summary>\n            Triggers when validation is failed. This event will be triggered if set enableFormValidations as true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidateFormFields","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ZoomChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ZoomChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when there is change in the magnification value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZoomChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FormFieldClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.FormFieldClickArgs>","Documentation":"\n            <summary>\n            Triggers an event when the form field is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormFieldClick","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerEvents"}},{"HashCode":914198016,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerEvents","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AddSignature","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AddSignatureEventArgs>","Documentation":"\n            <summary>\n            Triggers when signature is added  over the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AddSignature","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AjaxRequestFailed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AjaxRequestFailureEventArgs>","Documentation":"\n            <summary>\n            Triggers when the AJAX request is failed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AjaxRequestFailed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnnotationAdded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AnnotationAddEventArgs>","Documentation":"\n            <summary>\n            Triggers when an annotation is added over the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationAdded","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnAnnotationDoubleClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AnnotationDoubleClickEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the annotation is double click.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnAnnotationDoubleClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnnotationMouseover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AnnotationMouseoverEventArgs>","Documentation":"\n            <summary>\n            Triggers when mouse over the annotation object.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationMouseover","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnnotationMoved","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AnnotationMoveEventArgs>","Documentation":"\n            <summary>\n            Triggers when an annotation is moved over the page of the PDF document.\n            </summary>\n            <remarks>\n            AnnotationMove event is not applicable for text markup annotations.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"AnnotationMoved","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnnotationPropertiesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AnnotationPropertiesChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the property of the annotation is changed in the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationPropertiesChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnnotationRemoved","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AnnotationRemoveEventArgs>","Documentation":"\n            <summary>\n            Triggers when an annotation is removed from the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationRemoved","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnnotationResized","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AnnotationResizeEventArgs>","Documentation":"\n            <summary>\n            Triggers when an annotation is resized over the page of the PDF document.\n            </summary>\n            <remarks>\n            This event does not applicable for Sticky note annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"AnnotationResized","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnnotationSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.AnnotationSelectEventArgs>","Documentation":"\n            <summary>\n            Triggers when an annotation is selected over the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers when the PdfViewer component is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DocumentLoaded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.LoadEventArgs>","Documentation":"\n            <summary>\n            Triggers while loading document into PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DocumentLoaded","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DocumentLoadFailed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.LoadFailedEventArgs>","Documentation":"\n            <summary>\n            Triggers while loading document got failed in PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DocumentLoadFailed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DocumentUnloaded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.UnloadEventArgs>","Documentation":"\n            <summary>\n            Triggers while close the document\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DocumentUnloaded","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DownloadEnd","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.DownloadEndEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the download actions is finished.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DownloadEnd","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DownloadStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.DownloadStartEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the download action is started.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DownloadStart","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ExportFailed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ExportFailureEventArgs>","Documentation":"\n            <summary>\n            Triggers when an export annotations failed in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExportFailed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ExportStarted","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ExportStartEventArgs>","Documentation":"\n            <summary>\n            Triggers when an exported annotations started in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExportStarted","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ExportSucceed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ExportSuccessEventArgs>","Documentation":"\n            <summary>\n            Triggers when an export annotations succeed in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExportSucceed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ExtractTextCompleted","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ExtractTextCompletedEventArgs>","Documentation":"\n            <summary>\n            Triggers when an text extraction is completed in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExtractTextCompleted","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHyperlinkClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.HyperlinkClickEventArgs>","Documentation":"\n            <summary>\n            Triggers when hyperlink in the PDF Document is clicked\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnHyperlinkClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHyperlinkMouseOver","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.HyperlinkMouseOverArgs>","Documentation":"\n            <summary>\n            Triggers when hyperlink in the PDF Document is hovered\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnHyperlinkMouseOver","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ImportFailed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ImportFailureEventArgs>","Documentation":"\n            <summary>\n            Triggers when an imports annotations failed in the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImportFailed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ImportStarted","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ImportStartEventArgs>","Documentation":"\n            <summary>\n            Triggers when an imported annotations started in the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImportStarted","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ImportSucceed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ImportSuccessEventArgs>","Documentation":"\n            <summary>\n            Triggers when an imports annotations succeed in the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImportSucceed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MoveSignature","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.MoveSignatureEventArgs>","Documentation":"\n            <summary>\n            Triggers when an signature is moved over the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MoveSignature","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PageChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.PageChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when there is change in current page number.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPageClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.PageClickEventArgs>","Documentation":"\n            <summary>\n            Triggers when the mouse click is performed over the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnPageClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PageMouseover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.PageMouseoverEventArgs>","Documentation":"\n            <summary>\n            Triggers when mouse over the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageMouseover","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PrintEnd","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.PrintEndEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the print actions is finished.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PrintEnd","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PrintStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.PrintStartEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the print action is started.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PrintStart","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"RemoveSignature","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.RemoveSignatureEventArgs>","Documentation":"\n            <summary>\n            Triggers when signature is removed over the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RemoveSignature","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ResizeSignature","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ResizeSignatureEventArgs>","Documentation":"\n            <summary>\n            Triggers when signature is resized over the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ResizeSignature","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SignatureSelect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.SignatureSelectEventArgs>","Documentation":"\n            <summary>\n            Triggers when signature is selected over the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SignatureSelect","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SignaturePropertiesChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.SignaturePropertiesChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when the property of the signature is changed in the page of the PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SignaturePropertiesChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTextSearchComplete","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.TextSearchCompleteEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the text search is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTextSearchComplete","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTextSearchHighlight","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.TextSearchHighlightEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the text search text is highlighted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTextSearchHighlight","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTextSearchStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.TextSearchStartEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the text search is started.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTextSearchStart","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTextSelectionEnd","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.TextSelectionEndEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the text selection is finished.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTextSelectionEnd","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTextSelectionStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.TextSelectionStartEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the text selection is started.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTextSelectionStart","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnThumbnailClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ThumbnailClickEventArgs>","Documentation":"\n            <summary>\n            Triggers an event when the thumbnail is clicked in the thumbnail panel of PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnThumbnailClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValidateFormFields","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ValidateFormFieldsArgs>","Documentation":"\n            <summary>\n            Triggers when validation is failed. This event will be triggered if set enableFormValidations as true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidateFormFields","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ZoomChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.ZoomChangeEventArgs>","Documentation":"\n            <summary>\n            Triggers when there is change in the magnification value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZoomChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FormFieldClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.PdfViewer.FormFieldClickArgs>","Documentation":"\n            <summary>\n            Triggers an event when the form field is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormFieldClick","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerEvents","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1513707768,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerFreeTextSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerFreeTextSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the fill color for free text or label text for shape and measurement annotation. By default it is \"#ffffff00\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"FontColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the font color for free text or label text for shape and measurement annotation. By default it is \"#000\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontColor"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the font family for free text or label text for shape and measurement annotation. By default it is \"Helvetica\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the font size for free text or label text for shape and measurement annotation. By default it is \"16\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"Syncfusion.Blazor.PdfViewer.FontStyle","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the font style for free text or label text for shape and measurement annotation. By default it is \"None\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"DefaultText","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the fill color for free text or label text for shape and measurement annotation. By default it is \"Type Here\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultText"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for free text or label text for shape and measurement annotation. By default it is \"1\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.PdfViewer.TextAlignment","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the text alignment for free text or label text for shape and measurement annotation. By default it is \"Left\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"BorderColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the border color for free text or label text for shape and measurement annotation. By default it is \"#ffffff00\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderColor"}},{"Kind":"Components.Component","Name":"BorderStyle","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the border style for free text or label text for shape and measurement annotation. By default it is \"solid\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderStyle"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the border width for free text or label text for shape and measurement annotation. By default it is \"1\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the height for free text or label text for shape and measurement annotation. By default it is \"24.6\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the width for free text or label text for shape and measurement annotation. By default it is \"151\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the freetext annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"AllowEditTextOnly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, then we can't move , resize the freetext annotations in the PDF Viewer. Just we can modify the existing text content. Otherwise along with modifying text we can resize, move the existing text content.By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowEditTextOnly"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerFreeTextSettings"}},{"HashCode":654568516,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerFreeTextSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerFreeTextSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the fill color for free text or label text for shape and measurement annotation. By default it is \"#ffffff00\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"FontColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the font color for free text or label text for shape and measurement annotation. By default it is \"#000\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontColor"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the font family for free text or label text for shape and measurement annotation. By default it is \"Helvetica\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the font size for free text or label text for shape and measurement annotation. By default it is \"16\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"Syncfusion.Blazor.PdfViewer.FontStyle","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the font style for free text or label text for shape and measurement annotation. By default it is \"None\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"DefaultText","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the fill color for free text or label text for shape and measurement annotation. By default it is \"Type Here\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultText"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for free text or label text for shape and measurement annotation. By default it is \"1\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.PdfViewer.TextAlignment","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the text alignment for free text or label text for shape and measurement annotation. By default it is \"Left\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"BorderColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the border color for free text or label text for shape and measurement annotation. By default it is \"#ffffff00\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderColor"}},{"Kind":"Components.Component","Name":"BorderStyle","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the border style for free text or label text for shape and measurement annotation. By default it is \"solid\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderStyle"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the border width for free text or label text for shape and measurement annotation. By default it is \"1\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the height for free text or label text for shape and measurement annotation. By default it is \"24.6\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the width for free text or label text for shape and measurement annotation. By default it is \"151\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the freetext annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"AllowEditTextOnly","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, then we can't move , resize the freetext annotations in the PDF Viewer. Just we can modify the existing text content. Otherwise along with modifying text we can resize, move the existing text content.By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowEditTextOnly"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerFreeTextSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1331445955,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerFreeTextSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerFreeTextSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerFreeTextSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-775173324,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerFreeTextSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerFreeTextSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerFreeTextSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":888623927,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerHandwrittenSignatureSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerHandwrittenSignatureSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the height of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the width of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"SignatureDialogSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings","Documentation":"\n            <summary>\n            specified the signature dialog settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SignatureDialogSettings"}},{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerHandwrittenSignatureSettings"}},{"HashCode":-1470357822,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerHandwrittenSignatureSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerHandwrittenSignatureSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the height of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the width of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"SignatureDialogSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings","Documentation":"\n            <summary>\n            specified the signature dialog settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SignatureDialogSettings"}},{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerHandwrittenSignatureSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1631352515,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerHandwrittenSignatureSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerHandwrittenSignatureSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerHandwrittenSignatureSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1217196639,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerHandwrittenSignatureSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerHandwrittenSignatureSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerHandwrittenSignatureSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-943835076,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerHighlightSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerHighlightSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"EnableTextMarkupResizer","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, resizer for text markup annotation will be enabled.  By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTextMarkupResizer"}},{"Kind":"Components.Component","Name":"EnableMultiPageAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, then can add text markup annotation with multiple pages. Otherwise can add text markup annotation only with in the page. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableMultiPageAnnotation"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the color for Text markup annotations like highlight or underline or strikethrough.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for Text markup annotations like highlight or underline or strikethrough. By default it is 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerHighlightSettings"}},{"HashCode":1748738137,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerHighlightSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerHighlightSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"EnableTextMarkupResizer","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, resizer for text markup annotation will be enabled.  By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTextMarkupResizer"}},{"Kind":"Components.Component","Name":"EnableMultiPageAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, then can add text markup annotation with multiple pages. Otherwise can add text markup annotation only with in the page. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableMultiPageAnnotation"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the color for Text markup annotations like highlight or underline or strikethrough.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for Text markup annotations like highlight or underline or strikethrough. By default it is 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerHighlightSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1210943804,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerHighlightSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerHighlightSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerHighlightSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1657689123,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerHighlightSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerHighlightSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerHighlightSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1907275944,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerInkAnnotationSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerInkAnnotationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the height of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the width of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"SignatureDialogSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings","Documentation":"\n            <summary>\n            specified the signature dialog settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SignatureDialogSettings"}},{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerInkAnnotationSettings"}},{"HashCode":-1743235219,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerInkAnnotationSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerInkAnnotationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the height of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the width of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"SignatureDialogSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings","Documentation":"\n            <summary>\n            specified the signature dialog settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SignatureDialogSettings"}},{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerInkAnnotationSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1458817754,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerInkAnnotationSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerInkAnnotationSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerInkAnnotationSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2042573288,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerInkAnnotationSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerInkAnnotationSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerInkAnnotationSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1803505443,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerLineSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerLineSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LineHeadEndStyle","TypeName":"Syncfusion.Blazor.PdfViewer.LineHeadStyle","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the head end style of the line annotation. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LineHeadEndStyle"}},{"Kind":"Components.Component","Name":"LineHeadStartStyle","TypeName":"Syncfusion.Blazor.PdfViewer.LineHeadStyle","IsEnum":true,"Documentation":"\n            <summary>\n             Defines the head end style of the line annotation. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LineHeadStartStyle"}},{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerLineSettings"}},{"HashCode":-2101955846,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerLineSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerLineSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LineHeadEndStyle","TypeName":"Syncfusion.Blazor.PdfViewer.LineHeadStyle","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the head end style of the line annotation. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LineHeadEndStyle"}},{"Kind":"Components.Component","Name":"LineHeadStartStyle","TypeName":"Syncfusion.Blazor.PdfViewer.LineHeadStyle","IsEnum":true,"Documentation":"\n            <summary>\n             Defines the head end style of the line annotation. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LineHeadStartStyle"}},{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerLineSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1352130581,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerLineSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerLineSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerLineSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":356466861,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerLineSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerLineSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerLineSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-4059746,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerMeasurementSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerMeasurementSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ConversionUnit","TypeName":"Syncfusion.Blazor.PdfViewer.CalibrationUnit","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the unit for measuring annotation. By default it is \"in\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ConversionUnit"}},{"Kind":"Components.Component","Name":"Depth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the value for depth. By default it is 96.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Depth"}},{"Kind":"Components.Component","Name":"DisplayUnit","TypeName":"Syncfusion.Blazor.PdfViewer.CalibrationUnit","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the display unit for measuring annotation. By default it is \"inch\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayUnit"}},{"Kind":"Components.Component","Name":"ScaleRatio","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the scale ratio for measuring annotation. By default it is \"1\". It will be multiplied the actual value of measurement and this multiplied value only displayed in UI.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ScaleRatio"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerMeasurementSettings"}},{"HashCode":-1859416443,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerMeasurementSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerMeasurementSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ConversionUnit","TypeName":"Syncfusion.Blazor.PdfViewer.CalibrationUnit","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the unit for measuring annotation. By default it is \"in\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ConversionUnit"}},{"Kind":"Components.Component","Name":"Depth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the value for depth. By default it is 96.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Depth"}},{"Kind":"Components.Component","Name":"DisplayUnit","TypeName":"Syncfusion.Blazor.PdfViewer.CalibrationUnit","IsEnum":true,"Documentation":"\n            <summary>\n            Defines the display unit for measuring annotation. By default it is \"inch\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayUnit"}},{"Kind":"Components.Component","Name":"ScaleRatio","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the scale ratio for measuring annotation. By default it is \"1\". It will be multiplied the actual value of measurement and this multiplied value only displayed in UI.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ScaleRatio"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerMeasurementSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1935535706,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerMeasurementSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerMeasurementSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerMeasurementSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":346892933,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerMeasurementSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerMeasurementSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerMeasurementSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-551441403,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerPerimeterSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerPerimeterSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerPerimeterSettings"}},{"HashCode":-1613168966,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerPerimeterSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerPerimeterSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerPerimeterSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-489879944,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerPerimeterSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerPerimeterSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerPerimeterSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":3163428,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerPerimeterSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerPerimeterSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerPerimeterSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":860002287,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerPolygonSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerPolygonSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerPolygonSettings"}},{"HashCode":-971685127,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerPolygonSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerPolygonSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerPolygonSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":146374092,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerPolygonSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerPolygonSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerPolygonSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1040942979,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerPolygonSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerPolygonSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerPolygonSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1744053509,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerRadiusSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerRadiusSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerRadiusSettings"}},{"HashCode":-1549441299,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerRadiusSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerRadiusSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerRadiusSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1087375041,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerRadiusSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerRadiusSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerRadiusSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1809591191,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerRadiusSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerRadiusSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerRadiusSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":180004369,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerRectangleSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerRectangleSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerRectangleSettings"}},{"HashCode":-551362641,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerRectangleSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerRectangleSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerRectangleSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1819644348,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerRectangleSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerRectangleSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerRectangleSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1869611059,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerRectangleSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerRectangleSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerRectangleSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1035394838,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerScrollSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerScrollSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DelayPageRequestTimeOnScroll","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Increase or decrease the render pdf page request delay on scrolling action and it's unit is milli seconds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DelayPageRequestTimeOnScroll"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerScrollSettings"}},{"HashCode":1576777903,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerScrollSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerScrollSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DelayPageRequestTimeOnScroll","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Increase or decrease the render pdf page request delay on scrolling action and it's unit is milli seconds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DelayPageRequestTimeOnScroll"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerScrollSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-463949233,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerScrollSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerScrollSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerScrollSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1802872083,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerScrollSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerScrollSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerScrollSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1969611414,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerServerActionSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerServerActionSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Download","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the download action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Download"}},{"Kind":"Components.Component","Name":"ExportAnnotations","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the export annotations action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExportAnnotations"}},{"Kind":"Components.Component","Name":"ExportFormFields","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the export action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExportFormFields"}},{"Kind":"Components.Component","Name":"ImportAnnotations","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the imports annotations action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImportAnnotations"}},{"Kind":"Components.Component","Name":"ImportFormFields","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the imports action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImportFormFields"}},{"Kind":"Components.Component","Name":"Load","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the load action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Load"}},{"Kind":"Components.Component","Name":"Print","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the print action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Print"}},{"Kind":"Components.Component","Name":"RenderComments","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the annotation comments action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RenderComments"}},{"Kind":"Components.Component","Name":"RenderPages","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the render action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RenderPages"}},{"Kind":"Components.Component","Name":"RenderTexts","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the export action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RenderTexts"}},{"Kind":"Components.Component","Name":"RenderThumbnail","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the download action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RenderThumbnail"}},{"Kind":"Components.Component","Name":"Unload","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the unload action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Unload"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerServerActionSettings"}},{"HashCode":1263944094,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerServerActionSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerServerActionSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Download","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the download action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Download"}},{"Kind":"Components.Component","Name":"ExportAnnotations","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the export annotations action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExportAnnotations"}},{"Kind":"Components.Component","Name":"ExportFormFields","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the export action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExportFormFields"}},{"Kind":"Components.Component","Name":"ImportAnnotations","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the imports annotations action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImportAnnotations"}},{"Kind":"Components.Component","Name":"ImportFormFields","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the imports action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImportFormFields"}},{"Kind":"Components.Component","Name":"Load","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the load action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Load"}},{"Kind":"Components.Component","Name":"Print","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the print action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Print"}},{"Kind":"Components.Component","Name":"RenderComments","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the annotation comments action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RenderComments"}},{"Kind":"Components.Component","Name":"RenderPages","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the render action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RenderPages"}},{"Kind":"Components.Component","Name":"RenderTexts","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the export action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RenderTexts"}},{"Kind":"Components.Component","Name":"RenderThumbnail","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the download action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RenderThumbnail"}},{"Kind":"Components.Component","Name":"Unload","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the unload action of PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Unload"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerServerActionSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1580923191,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerServerActionSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerServerActionSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerServerActionSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":284149240,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerServerActionSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerServerActionSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerServerActionSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-800272897,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerShapeLabelSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerShapeLabelSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"FontColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the border color of the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontColor"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the max-width of the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specifies the font size of the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"LabelContent","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the default content of the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelContent"}},{"Kind":"Components.Component","Name":"Notes","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the default content of the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Notes"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            specifies the opacity of the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerShapeLabelSettings"}},{"HashCode":1456935455,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerShapeLabelSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerShapeLabelSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"FontColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the border color of the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontColor"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the max-width of the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specifies the font size of the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"LabelContent","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the default content of the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelContent"}},{"Kind":"Components.Component","Name":"Notes","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the default content of the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Notes"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            specifies the opacity of the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerShapeLabelSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1053778431,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerShapeLabelSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerShapeLabelSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerShapeLabelSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-886777223,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerShapeLabelSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerShapeLabelSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerShapeLabelSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":622223389,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerSignatureDialogSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HideSaveSignature","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Hide the save signature checkbox in the signature dialog box.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HideSaveSignature"}},{"Kind":"Components.Component","Name":"DisplayMode","TypeName":"Syncfusion.Blazor.PdfViewer.DisplayMode","IsEnum":true,"Documentation":"\n            <summary>\n            Get or set the required signature options will be enabled in the signature dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayMode"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the height of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the width of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"SignatureDialogSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings","Documentation":"\n            <summary>\n            specified the signature dialog settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SignatureDialogSettings"}},{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings"}},{"HashCode":-166805167,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HideSaveSignature","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Hide the save signature checkbox in the signature dialog box.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HideSaveSignature"}},{"Kind":"Components.Component","Name":"DisplayMode","TypeName":"Syncfusion.Blazor.PdfViewer.DisplayMode","IsEnum":true,"Documentation":"\n            <summary>\n            Get or set the required signature options will be enabled in the signature dialog.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayMode"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the height of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the width of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"SignatureDialogSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings","Documentation":"\n            <summary>\n            specified the signature dialog settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SignatureDialogSettings"}},{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1694883277,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerSignatureDialogSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1396678603,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1621134533,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerStampSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerStampSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DynamicStamps","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.DynamicStampItem>","Documentation":"\n            <summary>\n            Provide option to define the required dynamic stamp items to be displayed in annotation toolbar menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DynamicStamps"}},{"Kind":"Components.Component","Name":"SignStamps","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.SignStampItem>","Documentation":"\n            <summary>\n            Provide option to define the required sign stamp items to be displayed in annotation toolbar menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SignStamps"}},{"Kind":"Components.Component","Name":"StandardBusinessStamps","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.StandardBusinessStampItem>","Documentation":"\n            <summary>\n            Provide option to define the required standrd business stamp items to be displayed in annotation toolbar menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StandardBusinessStamps"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the height of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the width of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"SignatureDialogSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings","Documentation":"\n            <summary>\n            specified the signature dialog settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SignatureDialogSettings"}},{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStampSettings"}},{"HashCode":-252135119,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerStampSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerStampSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DynamicStamps","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.DynamicStampItem>","Documentation":"\n            <summary>\n            Provide option to define the required dynamic stamp items to be displayed in annotation toolbar menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DynamicStamps"}},{"Kind":"Components.Component","Name":"SignStamps","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.SignStampItem>","Documentation":"\n            <summary>\n            Provide option to define the required sign stamp items to be displayed in annotation toolbar menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SignStamps"}},{"Kind":"Components.Component","Name":"StandardBusinessStamps","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.StandardBusinessStampItem>","Documentation":"\n            <summary>\n            Provide option to define the required standrd business stamp items to be displayed in annotation toolbar menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StandardBusinessStamps"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the height of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32","Documentation":"\n            <summary>\n            specified the width of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"SignatureDialogSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerSignatureDialogSettings","Documentation":"\n            <summary>\n            specified the signature dialog settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SignatureDialogSettings"}},{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStampSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1069105077,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerStampSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerStampSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStampSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1132872691,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerStampSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerStampSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStampSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1515896802,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerStickyNotesSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerStickyNotesSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Sets the opacity value for sticky notes annotation. By default value is 1. It range varies from 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStickyNotesSettings"}},{"HashCode":861564657,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerStickyNotesSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerStickyNotesSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Sets the opacity value for sticky notes annotation. By default value is 1. It range varies from 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStickyNotesSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1298834837,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerStickyNotesSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerStickyNotesSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStickyNotesSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1447647513,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerStickyNotesSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerStickyNotesSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStickyNotesSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-52773744,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerStrikethroughSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerStrikethroughSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"EnableTextMarkupResizer","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, resizer for text markup annotation will be enabled.  By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTextMarkupResizer"}},{"Kind":"Components.Component","Name":"EnableMultiPageAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, then can add text markup annotation with multiple pages. Otherwise can add text markup annotation only with in the page. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableMultiPageAnnotation"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the color for Text markup annotations like highlight or underline or strikethrough.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for Text markup annotations like highlight or underline or strikethrough. By default it is 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStrikethroughSettings"}},{"HashCode":-1970386013,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerStrikethroughSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerStrikethroughSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"EnableTextMarkupResizer","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, resizer for text markup annotation will be enabled.  By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTextMarkupResizer"}},{"Kind":"Components.Component","Name":"EnableMultiPageAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, then can add text markup annotation with multiple pages. Otherwise can add text markup annotation only with in the page. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableMultiPageAnnotation"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the color for Text markup annotations like highlight or underline or strikethrough.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for Text markup annotations like highlight or underline or strikethrough. By default it is 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStrikethroughSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1832460981,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerStrikethroughSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerStrikethroughSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStrikethroughSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1666692180,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerStrikethroughSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerStrikethroughSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStrikethroughSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1113272990,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerTextSearchColorSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerTextSearchColorSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SearchHighlightColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or Sets the color of the current occurrence of the text searched string.By default it is '#fdd835'\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SearchHighlightColor"}},{"Kind":"Components.Component","Name":"SearchColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or Sets the color of the other occurrence of the text searched string.By default it is '#8b4c12'\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SearchColor"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerTextSearchColorSettings"}},{"HashCode":-1170109877,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerTextSearchColorSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerTextSearchColorSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SearchHighlightColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or Sets the color of the current occurrence of the text searched string.By default it is '#fdd835'\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SearchHighlightColor"}},{"Kind":"Components.Component","Name":"SearchColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or Sets the color of the other occurrence of the text searched string.By default it is '#8b4c12'\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SearchColor"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerTextSearchColorSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":435521005,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerTextSearchColorSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerTextSearchColorSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerTextSearchColorSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-211526708,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerTextSearchColorSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerTextSearchColorSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerTextSearchColorSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1705392189,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerTileRenderingSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerTileRenderingSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EnableTileRendering","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, PDF Viewer page will be rendered with multiple tile images. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTileRendering"}},{"Kind":"Components.Component","Name":"X","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the context menu action. By default it is RightClick. If it is set as MouseUp, context menu will open on mouse up action instead of rightclick action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the context menu items shoule be visibled in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Y"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerTileRenderingSettings"}},{"HashCode":-1536363170,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerTileRenderingSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerTileRenderingSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EnableTileRendering","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, PDF Viewer page will be rendered with multiple tile images. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTileRendering"}},{"Kind":"Components.Component","Name":"X","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the context menu action. By default it is RightClick. If it is set as MouseUp, context menu will open on mouse up action instead of rightclick action.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the context menu items shoule be visibled in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Y"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerTileRenderingSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1819103266,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerTileRenderingSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerTileRenderingSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerTileRenderingSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-514816451,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerTileRenderingSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerTileRenderingSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerTileRenderingSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-651092365,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerToolbarSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerToolbarSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ShowTooltip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disables the toolbar of PdfViewer. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowTooltip"}},{"Kind":"Components.Component","Name":"ToolbarItems","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.ToolbarItem>","Documentation":"\n            <summary>\n            Provide option to customize the toolbar of the PDF Viewer. PDF Viewer toolbar will be rendered only options configured with this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ToolbarItems"}},{"Kind":"Components.Component","Name":"AnnotationToolbarItems","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AnnotationToolbarItem>","Documentation":"\n            <summary>\n            Provide option to customize the annotation toolbar of the PDF Viewer. PDF Viewer annotation toolbar will be rendered only options configured with this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationToolbarItems"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerToolbarSettings"}},{"HashCode":1125062390,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerToolbarSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerToolbarSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ShowTooltip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disables the toolbar of PdfViewer. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowTooltip"}},{"Kind":"Components.Component","Name":"ToolbarItems","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.ToolbarItem>","Documentation":"\n            <summary>\n            Provide option to customize the toolbar of the PDF Viewer. PDF Viewer toolbar will be rendered only options configured with this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ToolbarItems"}},{"Kind":"Components.Component","Name":"AnnotationToolbarItems","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AnnotationToolbarItem>","Documentation":"\n            <summary>\n            Provide option to customize the annotation toolbar of the PDF Viewer. PDF Viewer annotation toolbar will be rendered only options configured with this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationToolbarItems"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerToolbarSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1255881039,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerToolbarSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerToolbarSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerToolbarSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1174394797,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerToolbarSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerToolbarSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerToolbarSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1478684383,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerUnderlineSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerUnderlineSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"EnableTextMarkupResizer","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, resizer for text markup annotation will be enabled.  By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTextMarkupResizer"}},{"Kind":"Components.Component","Name":"EnableMultiPageAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, then can add text markup annotation with multiple pages. Otherwise can add text markup annotation only with in the page. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableMultiPageAnnotation"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the color for Text markup annotations like highlight or underline or strikethrough.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for Text markup annotations like highlight or underline or strikethrough. By default it is 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerUnderlineSettings"}},{"HashCode":1402200774,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerUnderlineSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerUnderlineSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"EnableTextMarkupResizer","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, resizer for text markup annotation will be enabled.  By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTextMarkupResizer"}},{"Kind":"Components.Component","Name":"EnableMultiPageAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, then can add text markup annotation with multiple pages. Otherwise can add text markup annotation only with in the page. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableMultiPageAnnotation"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the color for Text markup annotations like highlight or underline or strikethrough.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for Text markup annotations like highlight or underline or strikethrough. By default it is 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerUnderlineSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":882310505,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerUnderlineSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerUnderlineSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerUnderlineSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-577623635,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerUnderlineSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerUnderlineSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerUnderlineSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-308604016,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerVolumeSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerVolumeSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerVolumeSettings"}},{"HashCode":1908581747,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerVolumeSettings","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerVolumeSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AnnotationSelectorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSelectorSettings","Documentation":"\n            <summary>\n            Defines the annotaton selector settings for the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSelectorSettings"}},{"Kind":"Components.Component","Name":"FillColor","TypeName":"System.String","Documentation":"\n            <summary>\n            specifies the fill color of the annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FillColor"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"\n            <summary>\n            Defines the opacity for the shape annotations. By default it is 1. It's range varies 0 to 1.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"StrokeColor","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the stroke color of the shape annotations. By default it is \"\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrokeColor"}},{"Kind":"Components.Component","Name":"Thickness","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Defines the thickness of the shape annotations. By default it is 1. It's range varies 1 to 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Thickness"}},{"Kind":"Components.Component","Name":"BorderDashArray","TypeName":"System.Int32[]","Documentation":"\n            <summary>\n            Defines the border dash array. By default it is .\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BorderDashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Author","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the author's name to add annotation or review the PDF document. By default it is Guest.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Author"}},{"Kind":"Components.Component","Name":"CustomData","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the user's defined information related to the annotations. By default it is null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomData"}},{"Kind":"Components.Component","Name":"IsLock","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true,  can't interact with annotation. Otherwise can interact the annotations. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsLock"}},{"Kind":"Components.Component","Name":"SkipDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in downloaded file. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipDownload"}},{"Kind":"Components.Component","Name":"SkipPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, newly added annotations won't be included in printing. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SkipPrint"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum height of annotations. It prevents the height of the annotation becoming larger than the values provided in MaxHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the maximum width of annotations. It prevents the width of the annotation becoming larger than values provided in MaxWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum height of annotations. It prevents the height of the annotation becoming smaller than values provided in MinHeight.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Sets the minimum width of annotations. It prevents the width of the annotation becoming smaller than values provided in MinWidth.By default it is 0.\n            </summary>\n            <remarks>\n            This property not applicable for Textmarkup and Sticky notes annotation.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"IsPrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value for the individual annotations are included or not in print actions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrint"}},{"Kind":"Components.Component","Name":"AllowedInteractions","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.AllowedInteraction>","Documentation":"\n            <summary>\n            Gets or sets the allowed interactions for the locked area annotations.\n            IsLock can be configured using area settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowedInteractions"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerVolumeSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-57767138,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerVolumeSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PdfViewerVolumeSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerVolumeSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1637219595,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerVolumeSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.PdfViewerVolumeSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerVolumeSettings.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2140469820,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.SfPdfViewer","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfPdfViewer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the ID for the PDF Viewer parent DOM elemet div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            ChildContent used to define child elements for the root component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ServiceUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the URL for service calls.\n            </summary>\n            <remarks>\n            This ServiceUrl is applicable for web assembly project alone.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ServiceUrl"}},{"Kind":"Components.Component","Name":"EnableFormFieldsValidation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, validate form fields will be triggered. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableFormFieldsValidation"}},{"Kind":"Components.Component","Name":"PageCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets the total page count of the loaded PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageCount"}},{"Kind":"Components.Component","Name":"PageCountChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"\n            <summary>\n            Gets the event callback for PageCount.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageCountChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PageCountExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Int32>>","Documentation":"\n            <summary>\n            Gets the expression for PageCount.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageCountExpression"}},{"Kind":"Components.Component","Name":"IsDocumentEdited","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets the value to check whether the document has been edited or not. By default it is false. If the document edited, it returns true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsDocumentEdited"}},{"Kind":"Components.Component","Name":"CurrentPageNumber","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets the current page number of the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentPageNumber"}},{"Kind":"Components.Component","Name":"CurrentPageNumberChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"\n            <summary>\n            Gets the event callback for CurrentPageNumber.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentPageNumberChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CurrentPageNumberExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Int32>>","Documentation":"\n            <summary>\n            Gets the expression for CurrentPageNumber.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentPageNumberExpression"}},{"Kind":"Components.Component","Name":"DocumentPath","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the PDF document path for initial loading.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DocumentPath"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, then PDF Viewer will render in right to left direction. By default it will render in left to right direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Locale","TypeName":"System.String","Documentation":"\n            <summary>\n            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Locale"}},{"Kind":"Components.Component","Name":"ZoomValue","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets the Zoom Percentage value of the PDF Viewer. It's range varies from 10 to 400.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZoomValue"}},{"Kind":"Components.Component","Name":"ZoomValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"\n            <summary>\n            Gets the event callback for ZoomValue.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZoomValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ZoomValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Int32>>","Documentation":"\n            <summary>\n            Gets the expression for ZoomValue.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZoomValueExpression"}},{"Kind":"Components.Component","Name":"ZoomMode","TypeName":"Syncfusion.Blazor.PdfViewer.ZoomMode","IsEnum":true,"Documentation":"\n            <summary>\n            Indicates whether the PDF page will be rendered in fit to page, fit to width or based on the zoom percentage value(default) in the PDF Viewer. By default it value is Default and it represent the page rendered based on the zoom percentage.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZoomMode"}},{"Kind":"Components.Component","Name":"DownloadFileName","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the name of the file to be downloaded.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DownloadFileName"}},{"Kind":"Components.Component","Name":"ExportAnnotationFileName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the file name of annotations to be exported.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExportAnnotationFileName"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the scrollable height of the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the scrollable width of the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"EnableToolbar","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then toolbar  of the PDF Viewer will not be visible. By default it is true and visible.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableToolbar"}},{"Kind":"Components.Component","Name":"EnableAnnotationToolbar","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the edit annotation option in the toolbar will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableAnnotationToolbar"}},{"Kind":"Components.Component","Name":"EnableNavigationToolbar","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then left side toolbar(bookmark, thumbnail navigation toolbar) will not be visible. By default it is true and visible.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableNavigationToolbar"}},{"Kind":"Components.Component","Name":"RetryCount","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets the retry count for PDF Viewer service call. By default  retrycount is 1.\n            </summary>\n            <remarks>\n            This RetryCount is only applicable for Web Assembly projects alone.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"RetryCount"}},{"Kind":"Components.Component","Name":"EnableErrorDialog","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then error dialogue display in PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableErrorDialog"}},{"Kind":"Components.Component","Name":"EnableCommentPanel","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then text selection in the PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableCommentPanel"}},{"Kind":"Components.Component","Name":"IsCommentPanelOpen","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the comment panel is in expanded or collapsed state. If it set as true, then the thumbnail panel will be expanded or open state. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsCommentPanelOpen"}},{"Kind":"Components.Component","Name":"EnableThumbnailPanel","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, the thumbnail panel on the left side of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableThumbnailPanel"}},{"Kind":"Components.Component","Name":"IsThumbnailPanelOpen","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the thumbnail panel is in expanded or collapsed state. If it set as true, then the thumbnail panel will be expanded or open state . By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsThumbnailPanelOpen"}},{"Kind":"Components.Component","Name":"EnableDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the download option in the toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableDownload"}},{"Kind":"Components.Component","Name":"EnablePrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the print option in the toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePrint"}},{"Kind":"Components.Component","Name":"EnablePrintRotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as FALSE, will suppress the page rotation of Landscape document on print action. By default it is TRUE.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePrintRotation"}},{"Kind":"Components.Component","Name":"PrintMode","TypeName":"Syncfusion.Blazor.PdfViewer.PrintMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the print mode in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PrintMode"}},{"Kind":"Components.Component","Name":"IsSignatureEditable","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, the signature included in the PDF Viewer will saved as ink annotation on download action in the PDF Viewer. Otherwise the signature will be flattened on downloading or saving. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsSignatureEditable"}},{"Kind":"Components.Component","Name":"EnableBookmarkPanel","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, the bookmark panel on the left side of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableBookmarkPanel"}},{"Kind":"Components.Component","Name":"EnableHyperlink","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then hyperlink in the PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableHyperlink"}},{"Kind":"Components.Component","Name":"EnableHandwrittenSignature","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            if it is set as false, then the handwritten signature tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableHandwrittenSignature"}},{"Kind":"Components.Component","Name":"EnableInkAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the ink annotation support in the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableInkAnnotation"}},{"Kind":"Components.Component","Name":"RestrictZoomRequest","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, then page image will be fetched only when the zoom percentage is 100. Otherwise, mutliple page image fetched for different zoom percentages on performing zoom operation. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RestrictZoomRequest"}},{"Kind":"Components.Component","Name":"HyperlinkOpenState","TypeName":"Syncfusion.Blazor.PdfViewer.LinkTarget","IsEnum":true,"Documentation":"\n            <summary>\n            Indicates whether the URL is opened in current tab, new tab, new window . By default it is current tab.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HyperlinkOpenState"}},{"Kind":"Components.Component","Name":"EnableNavigation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then page navigation of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableNavigation"}},{"Kind":"Components.Component","Name":"EnableAutoComplete","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false,  auto complete behavior of form fields will be disabled. Be default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableAutoComplete"}},{"Kind":"Components.Component","Name":"EnableMagnification","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then all the zoom operations in the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableMagnification"}},{"Kind":"Components.Component","Name":"EnableShapeLabel","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, label for shape and measure annotations can be added. It used to display the text content about the shape or measure annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableShapeLabel"}},{"Kind":"Components.Component","Name":"EnableImportAnnotationMeasurement","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disables the customization of measure values in PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableImportAnnotationMeasurement"}},{"Kind":"Components.Component","Name":"EnablePinchZoom","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then pinch zoom of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePinchZoom"}},{"Kind":"Components.Component","Name":"EnableZoomOptimization","TypeName":"System.Boolean","Documentation":"\n            <summary>\n             If it is set as false, then page image will be fetched for each zoom percentage values. Otherwise, page image will be fetched only when the zoom percentages are 100 %,200 %,300 %, and 400 %. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableZoomOptimization"}},{"Kind":"Components.Component","Name":"EnableTextSelection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then text selection in the PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTextSelection"}},{"Kind":"Components.Component","Name":"EnableTextSearch","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then text search support in the PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTextSearch"}},{"Kind":"Components.Component","Name":"EnableAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the annotation support in the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableAnnotation"}},{"Kind":"Components.Component","Name":"EnableFormFields","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, form fields in the PDF document can't be interacted or edited. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableFormFields"}},{"Kind":"Components.Component","Name":"IsFormFieldDocument","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets the value to check whether the loaded document have the form fields or not. By default it is false. If the document contains any form field it returns true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsFormFieldDocument"}},{"Kind":"Components.Component","Name":"EnableFreeText","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the free text annotation tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableFreeText"}},{"Kind":"Components.Component","Name":"EnableTextMarkupAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the textmarkup tools (highlight, strikethrough, and underline) are disabled in annotation toolbar. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTextMarkupAnnotation"}},{"Kind":"Components.Component","Name":"EnableShapeAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the shape annotation tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableShapeAnnotation"}},{"Kind":"Components.Component","Name":"EnableMeasureAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the measurement annotation tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableMeasureAnnotation"}},{"Kind":"Components.Component","Name":"EnableStampAnnotations","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the stamp annotation tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableStampAnnotations"}},{"Kind":"Components.Component","Name":"EnableStickyNotesAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the sticky notes annotation tool in the toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableStickyNotesAnnotation"}},{"Kind":"Components.Component","Name":"InteractionMode","TypeName":"Syncfusion.Blazor.PdfViewer.InteractionMode","IsEnum":true,"Documentation":"\n            <summary>\n            Indicates whether the interaction is in selection(select tool) or pan mode. By default it it selection.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InteractionMode"}},{"Kind":"Components.Component","Name":"IsExtractText","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, the PDF Viewer will extract the text from the document asynchronously after the initial loading. Once the extraction process completed  then ExtractTextCompleted event will be triggered.\n            The extracted text can be accessed from event args of the ExtractTextCompleted event. By default it is false and text won't be extracted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsExtractText"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines single or multiple classes (separated by space) to be used for customization styles of viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"ToolbarSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerToolbarSettings","Documentation":"\n            <summary>\n            Defines the builtin toolbar and annotation toolbar option to be visible in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ToolbarSettings"}},{"Kind":"Components.Component","Name":"AjaxRequestSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAjaxRequestSettings","Documentation":"\n            <summary>\n            Customize the AJAX request header.\n            </summary>\n            <remarks>\n            AjaxRequestSettings is applicable for Web assembly blazor alone.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"AjaxRequestSettings"}},{"Kind":"Components.Component","Name":"ServerActionSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerServerActionSettings","Documentation":"\n            <summary>\n            Defines the settings of the PdfViewer service. It is used to map the server action method name for service calls.\n            </summary>\n            <remarks>\n            This ServerActionSettings is applicable for web assembly project alone.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ServerActionSettings"}},{"Kind":"Components.Component","Name":"TextSearchColorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerTextSearchColorSettings","Documentation":"\n            <summary>\n            Configure the search text and highlight text color for the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextSearchColorSettings"}},{"Kind":"Components.Component","Name":"ContextMenuSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerContextMenuSettings","Documentation":"\n            <summary>\n            Defines the settings of context menu for the PDF Viewer. It used to customize the context menu options to visibles in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContextMenuSettings"}},{"Kind":"Components.Component","Name":"TileRenderingSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerTileRenderingSettings","Documentation":"\n            <summary>\n            Define the tile rendering settings. Tile rendering will render the PDF pages into mutiple tiles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TileRenderingSettings"}},{"Kind":"Components.Component","Name":"ScrollSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerScrollSettings","Documentation":"\n            <summary>\n            Define the tile rendering settings. Tile rendering will render the PDF pages into mutiple tiles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ScrollSettings"}},{"Kind":"Components.Component","Name":"AnnotationSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSettings","Documentation":"\n            <summary>\n            Defines the annotation settings for PDF Viewer. It used to customize the author, max/min width and height of the annotations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSettings"}},{"Kind":"Components.Component","Name":"HighlightSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerHighlightSettings","Documentation":"\n            <summary>\n            Defines the settings of highlight annotation. It used to customize the highlight annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HighlightSettings"}},{"Kind":"Components.Component","Name":"StrikethroughSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStrikethroughSettings","Documentation":"\n            <summary>\n            Defines the settings of strikethrough annotation. It used to customize the strikethrough annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrikethroughSettings"}},{"Kind":"Components.Component","Name":"UnderlineSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerUnderlineSettings","Documentation":"\n            <summary>\n            Defines the settings of underline annotation. It is used to customize the properties of the underline annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"UnderlineSettings"}},{"Kind":"Components.Component","Name":"ShapeLabelSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerShapeLabelSettings","Documentation":"\n            <summary>\n            Provide option to customize the label text for shape and measure annotations. It is applicable only if set EnableShapeLabel is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShapeLabelSettings"}},{"Kind":"Components.Component","Name":"LineSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerLineSettings","Documentation":"\n            <summary>\n            Defines the settings of line annotation. It used to customize the line annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LineSettings"}},{"Kind":"Components.Component","Name":"ArrowSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerArrowSettings","Documentation":"\n            <summary>\n            Defines the settings of arrow annotation. It used to customize the arrow annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ArrowSettings"}},{"Kind":"Components.Component","Name":"RectangleSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerRectangleSettings","Documentation":"\n            <summary>\n            Defines the settings of rectangle annotation. It used to customize the rectangle annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RectangleSettings"}},{"Kind":"Components.Component","Name":"CircleSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCircleSettings","Documentation":"\n            <summary>\n            Defines the settings of circle annotation. It used to customize circle annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CircleSettings"}},{"Kind":"Components.Component","Name":"PolygonSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerPolygonSettings","Documentation":"\n            <summary>\n            Defines the settings of polygon annotation. It used to customize the polygon annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PolygonSettings"}},{"Kind":"Components.Component","Name":"MeasurementSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerMeasurementSettings","Documentation":"\n            <summary>\n            Defines the settings of measurement annotation. It used to customize the measurement annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MeasurementSettings"}},{"Kind":"Components.Component","Name":"DistanceSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerDistanceSettings","Documentation":"\n            <summary>\n            Defines the settings of distance annotation. It used to customize distance annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DistanceSettings"}},{"Kind":"Components.Component","Name":"PerimeterSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerPerimeterSettings","Documentation":"\n            <summary>\n            Defines the settings of perimeter annotation. It used to customize the perimeter annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PerimeterSettings"}},{"Kind":"Components.Component","Name":"AreaSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAreaSettings","Documentation":"\n            <summary>\n            Defines the settings of area annotation. It used to customize the area annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AreaSettings"}},{"Kind":"Components.Component","Name":"RadiusSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerRadiusSettings","Documentation":"\n            <summary>\n            Defines the settings of radius annotation. It used to customize the radius annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RadiusSettings"}},{"Kind":"Components.Component","Name":"VolumeSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerVolumeSettings","Documentation":"\n            <summary>\n            Defines the settings of volumne annotation. It is used to customize the properties of the volume annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VolumeSettings"}},{"Kind":"Components.Component","Name":"StampSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStampSettings","Documentation":"\n            <summary>\n            Defines the settings of stamp annotation.It is used to customize the stamp annoations settings, stamp menu items to be visible in annotation toolbar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StampSettings"}},{"Kind":"Components.Component","Name":"CustomStampSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStampSettings","Documentation":"\n            <summary>\n            Defines the settings of customStamp annotation. It use to customize the custom annoation support for the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomStampSettings"}},{"Kind":"Components.Component","Name":"FreeTextSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerFreeTextSettings","Documentation":"\n            <summary>\n            Defines the settings of free text annotation. It used to customize the free text annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FreeTextSettings"}},{"Kind":"Components.Component","Name":"HandwrittenSignatureSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerHandwrittenSignatureSettings","Documentation":"\n            <summary>\n            Defines the settings of handwritten signature annotation. It used to customize the handwritten signature annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HandwrittenSignatureSettings"}},{"Kind":"Components.Component","Name":"InkAnnotationSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerInkAnnotationSettings","Documentation":"\n            <summary>\n            Defines the ink annotation settings for PDF Viewer.It used to customize the strokeColor, thickness, opacity of the ink annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InkAnnotationSettings"}},{"Kind":"Components.Component","Name":"StickyNotesSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStickyNotesSettings","Documentation":"\n            <summary>\n            Defines the settings of stickyNotes annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StickyNotesSettings"}},{"Kind":"Components.Component","Name":"EnableDesktopMode","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a boolean value to show or hide desktop toolbar in mobile devices. FALSE by default.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableDesktopMode"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.SfPdfViewer"}},{"HashCode":1453626614,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.SfPdfViewer","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.SfPdfViewer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the ID for the PDF Viewer parent DOM elemet div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            ChildContent used to define child elements for the root component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ServiceUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the URL for service calls.\n            </summary>\n            <remarks>\n            This ServiceUrl is applicable for web assembly project alone.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ServiceUrl"}},{"Kind":"Components.Component","Name":"EnableFormFieldsValidation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, validate form fields will be triggered. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableFormFieldsValidation"}},{"Kind":"Components.Component","Name":"PageCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets the total page count of the loaded PDF document.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageCount"}},{"Kind":"Components.Component","Name":"PageCountChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"\n            <summary>\n            Gets the event callback for PageCount.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageCountChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PageCountExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Int32>>","Documentation":"\n            <summary>\n            Gets the expression for PageCount.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageCountExpression"}},{"Kind":"Components.Component","Name":"IsDocumentEdited","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets the value to check whether the document has been edited or not. By default it is false. If the document edited, it returns true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsDocumentEdited"}},{"Kind":"Components.Component","Name":"CurrentPageNumber","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets the current page number of the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentPageNumber"}},{"Kind":"Components.Component","Name":"CurrentPageNumberChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"\n            <summary>\n            Gets the event callback for CurrentPageNumber.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentPageNumberChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CurrentPageNumberExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Int32>>","Documentation":"\n            <summary>\n            Gets the expression for CurrentPageNumber.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentPageNumberExpression"}},{"Kind":"Components.Component","Name":"DocumentPath","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the PDF document path for initial loading.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DocumentPath"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, then PDF Viewer will render in right to left direction. By default it will render in left to right direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"Locale","TypeName":"System.String","Documentation":"\n            <summary>\n            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Locale"}},{"Kind":"Components.Component","Name":"ZoomValue","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets the Zoom Percentage value of the PDF Viewer. It's range varies from 10 to 400.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZoomValue"}},{"Kind":"Components.Component","Name":"ZoomValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"\n            <summary>\n            Gets the event callback for ZoomValue.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZoomValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ZoomValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Int32>>","Documentation":"\n            <summary>\n            Gets the expression for ZoomValue.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZoomValueExpression"}},{"Kind":"Components.Component","Name":"ZoomMode","TypeName":"Syncfusion.Blazor.PdfViewer.ZoomMode","IsEnum":true,"Documentation":"\n            <summary>\n            Indicates whether the PDF page will be rendered in fit to page, fit to width or based on the zoom percentage value(default) in the PDF Viewer. By default it value is Default and it represent the page rendered based on the zoom percentage.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZoomMode"}},{"Kind":"Components.Component","Name":"DownloadFileName","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the name of the file to be downloaded.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DownloadFileName"}},{"Kind":"Components.Component","Name":"ExportAnnotationFileName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the file name of annotations to be exported.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExportAnnotationFileName"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the scrollable height of the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the scrollable width of the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"EnableToolbar","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then toolbar  of the PDF Viewer will not be visible. By default it is true and visible.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableToolbar"}},{"Kind":"Components.Component","Name":"EnableAnnotationToolbar","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the edit annotation option in the toolbar will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableAnnotationToolbar"}},{"Kind":"Components.Component","Name":"EnableNavigationToolbar","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then left side toolbar(bookmark, thumbnail navigation toolbar) will not be visible. By default it is true and visible.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableNavigationToolbar"}},{"Kind":"Components.Component","Name":"RetryCount","TypeName":"System.Double","Documentation":"\n            <summary>\n            Gets or sets the retry count for PDF Viewer service call. By default  retrycount is 1.\n            </summary>\n            <remarks>\n            This RetryCount is only applicable for Web Assembly projects alone.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"RetryCount"}},{"Kind":"Components.Component","Name":"EnableErrorDialog","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then error dialogue display in PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableErrorDialog"}},{"Kind":"Components.Component","Name":"EnableCommentPanel","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then text selection in the PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableCommentPanel"}},{"Kind":"Components.Component","Name":"IsCommentPanelOpen","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the comment panel is in expanded or collapsed state. If it set as true, then the thumbnail panel will be expanded or open state. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsCommentPanelOpen"}},{"Kind":"Components.Component","Name":"EnableThumbnailPanel","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, the thumbnail panel on the left side of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableThumbnailPanel"}},{"Kind":"Components.Component","Name":"IsThumbnailPanelOpen","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the thumbnail panel is in expanded or collapsed state. If it set as true, then the thumbnail panel will be expanded or open state . By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsThumbnailPanelOpen"}},{"Kind":"Components.Component","Name":"EnableDownload","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the download option in the toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableDownload"}},{"Kind":"Components.Component","Name":"EnablePrint","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the print option in the toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePrint"}},{"Kind":"Components.Component","Name":"EnablePrintRotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as FALSE, will suppress the page rotation of Landscape document on print action. By default it is TRUE.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePrintRotation"}},{"Kind":"Components.Component","Name":"PrintMode","TypeName":"Syncfusion.Blazor.PdfViewer.PrintMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the print mode in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PrintMode"}},{"Kind":"Components.Component","Name":"IsSignatureEditable","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, the signature included in the PDF Viewer will saved as ink annotation on download action in the PDF Viewer. Otherwise the signature will be flattened on downloading or saving. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsSignatureEditable"}},{"Kind":"Components.Component","Name":"EnableBookmarkPanel","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, the bookmark panel on the left side of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableBookmarkPanel"}},{"Kind":"Components.Component","Name":"EnableHyperlink","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then hyperlink in the PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableHyperlink"}},{"Kind":"Components.Component","Name":"EnableHandwrittenSignature","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            if it is set as false, then the handwritten signature tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableHandwrittenSignature"}},{"Kind":"Components.Component","Name":"EnableInkAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the ink annotation support in the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableInkAnnotation"}},{"Kind":"Components.Component","Name":"RestrictZoomRequest","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, then page image will be fetched only when the zoom percentage is 100. Otherwise, mutliple page image fetched for different zoom percentages on performing zoom operation. By default it is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RestrictZoomRequest"}},{"Kind":"Components.Component","Name":"HyperlinkOpenState","TypeName":"Syncfusion.Blazor.PdfViewer.LinkTarget","IsEnum":true,"Documentation":"\n            <summary>\n            Indicates whether the URL is opened in current tab, new tab, new window . By default it is current tab.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HyperlinkOpenState"}},{"Kind":"Components.Component","Name":"EnableNavigation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then page navigation of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableNavigation"}},{"Kind":"Components.Component","Name":"EnableAutoComplete","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false,  auto complete behavior of form fields will be disabled. Be default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableAutoComplete"}},{"Kind":"Components.Component","Name":"EnableMagnification","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then all the zoom operations in the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableMagnification"}},{"Kind":"Components.Component","Name":"EnableShapeLabel","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, label for shape and measure annotations can be added. It used to display the text content about the shape or measure annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableShapeLabel"}},{"Kind":"Components.Component","Name":"EnableImportAnnotationMeasurement","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disables the customization of measure values in PdfViewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableImportAnnotationMeasurement"}},{"Kind":"Components.Component","Name":"EnablePinchZoom","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then pinch zoom of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnablePinchZoom"}},{"Kind":"Components.Component","Name":"EnableZoomOptimization","TypeName":"System.Boolean","Documentation":"\n            <summary>\n             If it is set as false, then page image will be fetched for each zoom percentage values. Otherwise, page image will be fetched only when the zoom percentages are 100 %,200 %,300 %, and 400 %. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableZoomOptimization"}},{"Kind":"Components.Component","Name":"EnableTextSelection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then text selection in the PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTextSelection"}},{"Kind":"Components.Component","Name":"EnableTextSearch","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then text search support in the PDF Viewer will be disabled, By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTextSearch"}},{"Kind":"Components.Component","Name":"EnableAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the annotation support in the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableAnnotation"}},{"Kind":"Components.Component","Name":"EnableFormFields","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, form fields in the PDF document can't be interacted or edited. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableFormFields"}},{"Kind":"Components.Component","Name":"IsFormFieldDocument","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets the value to check whether the loaded document have the form fields or not. By default it is false. If the document contains any form field it returns true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsFormFieldDocument"}},{"Kind":"Components.Component","Name":"EnableFreeText","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the free text annotation tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableFreeText"}},{"Kind":"Components.Component","Name":"EnableTextMarkupAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the textmarkup tools (highlight, strikethrough, and underline) are disabled in annotation toolbar. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableTextMarkupAnnotation"}},{"Kind":"Components.Component","Name":"EnableShapeAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the shape annotation tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableShapeAnnotation"}},{"Kind":"Components.Component","Name":"EnableMeasureAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the measurement annotation tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableMeasureAnnotation"}},{"Kind":"Components.Component","Name":"EnableStampAnnotations","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the stamp annotation tool in the annotation toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableStampAnnotations"}},{"Kind":"Components.Component","Name":"EnableStickyNotesAnnotation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as false, then the sticky notes annotation tool in the toolbar of the PDF Viewer will be disabled. By default it is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableStickyNotesAnnotation"}},{"Kind":"Components.Component","Name":"InteractionMode","TypeName":"Syncfusion.Blazor.PdfViewer.InteractionMode","IsEnum":true,"Documentation":"\n            <summary>\n            Indicates whether the interaction is in selection(select tool) or pan mode. By default it it selection.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InteractionMode"}},{"Kind":"Components.Component","Name":"IsExtractText","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If it is set as true, the PDF Viewer will extract the text from the document asynchronously after the initial loading. Once the extraction process completed  then ExtractTextCompleted event will be triggered.\n            The extracted text can be accessed from event args of the ExtractTextCompleted event. By default it is false and text won't be extracted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsExtractText"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines single or multiple classes (separated by space) to be used for customization styles of viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"ToolbarSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerToolbarSettings","Documentation":"\n            <summary>\n            Defines the builtin toolbar and annotation toolbar option to be visible in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ToolbarSettings"}},{"Kind":"Components.Component","Name":"AjaxRequestSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAjaxRequestSettings","Documentation":"\n            <summary>\n            Customize the AJAX request header.\n            </summary>\n            <remarks>\n            AjaxRequestSettings is applicable for Web assembly blazor alone.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"AjaxRequestSettings"}},{"Kind":"Components.Component","Name":"ServerActionSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerServerActionSettings","Documentation":"\n            <summary>\n            Defines the settings of the PdfViewer service. It is used to map the server action method name for service calls.\n            </summary>\n            <remarks>\n            This ServerActionSettings is applicable for web assembly project alone.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ServerActionSettings"}},{"Kind":"Components.Component","Name":"TextSearchColorSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerTextSearchColorSettings","Documentation":"\n            <summary>\n            Configure the search text and highlight text color for the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextSearchColorSettings"}},{"Kind":"Components.Component","Name":"ContextMenuSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerContextMenuSettings","Documentation":"\n            <summary>\n            Defines the settings of context menu for the PDF Viewer. It used to customize the context menu options to visibles in the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContextMenuSettings"}},{"Kind":"Components.Component","Name":"TileRenderingSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerTileRenderingSettings","Documentation":"\n            <summary>\n            Define the tile rendering settings. Tile rendering will render the PDF pages into mutiple tiles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TileRenderingSettings"}},{"Kind":"Components.Component","Name":"ScrollSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerScrollSettings","Documentation":"\n            <summary>\n            Define the tile rendering settings. Tile rendering will render the PDF pages into mutiple tiles.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ScrollSettings"}},{"Kind":"Components.Component","Name":"AnnotationSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAnnotationSettings","Documentation":"\n            <summary>\n            Defines the annotation settings for PDF Viewer. It used to customize the author, max/min width and height of the annotations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AnnotationSettings"}},{"Kind":"Components.Component","Name":"HighlightSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerHighlightSettings","Documentation":"\n            <summary>\n            Defines the settings of highlight annotation. It used to customize the highlight annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HighlightSettings"}},{"Kind":"Components.Component","Name":"StrikethroughSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStrikethroughSettings","Documentation":"\n            <summary>\n            Defines the settings of strikethrough annotation. It used to customize the strikethrough annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StrikethroughSettings"}},{"Kind":"Components.Component","Name":"UnderlineSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerUnderlineSettings","Documentation":"\n            <summary>\n            Defines the settings of underline annotation. It is used to customize the properties of the underline annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"UnderlineSettings"}},{"Kind":"Components.Component","Name":"ShapeLabelSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerShapeLabelSettings","Documentation":"\n            <summary>\n            Provide option to customize the label text for shape and measure annotations. It is applicable only if set EnableShapeLabel is true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShapeLabelSettings"}},{"Kind":"Components.Component","Name":"LineSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerLineSettings","Documentation":"\n            <summary>\n            Defines the settings of line annotation. It used to customize the line annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LineSettings"}},{"Kind":"Components.Component","Name":"ArrowSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerArrowSettings","Documentation":"\n            <summary>\n            Defines the settings of arrow annotation. It used to customize the arrow annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ArrowSettings"}},{"Kind":"Components.Component","Name":"RectangleSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerRectangleSettings","Documentation":"\n            <summary>\n            Defines the settings of rectangle annotation. It used to customize the rectangle annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RectangleSettings"}},{"Kind":"Components.Component","Name":"CircleSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCircleSettings","Documentation":"\n            <summary>\n            Defines the settings of circle annotation. It used to customize circle annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CircleSettings"}},{"Kind":"Components.Component","Name":"PolygonSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerPolygonSettings","Documentation":"\n            <summary>\n            Defines the settings of polygon annotation. It used to customize the polygon annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PolygonSettings"}},{"Kind":"Components.Component","Name":"MeasurementSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerMeasurementSettings","Documentation":"\n            <summary>\n            Defines the settings of measurement annotation. It used to customize the measurement annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MeasurementSettings"}},{"Kind":"Components.Component","Name":"DistanceSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerDistanceSettings","Documentation":"\n            <summary>\n            Defines the settings of distance annotation. It used to customize distance annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DistanceSettings"}},{"Kind":"Components.Component","Name":"PerimeterSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerPerimeterSettings","Documentation":"\n            <summary>\n            Defines the settings of perimeter annotation. It used to customize the perimeter annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PerimeterSettings"}},{"Kind":"Components.Component","Name":"AreaSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerAreaSettings","Documentation":"\n            <summary>\n            Defines the settings of area annotation. It used to customize the area annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AreaSettings"}},{"Kind":"Components.Component","Name":"RadiusSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerRadiusSettings","Documentation":"\n            <summary>\n            Defines the settings of radius annotation. It used to customize the radius annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RadiusSettings"}},{"Kind":"Components.Component","Name":"VolumeSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerVolumeSettings","Documentation":"\n            <summary>\n            Defines the settings of volumne annotation. It is used to customize the properties of the volume annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VolumeSettings"}},{"Kind":"Components.Component","Name":"StampSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStampSettings","Documentation":"\n            <summary>\n            Defines the settings of stamp annotation.It is used to customize the stamp annoations settings, stamp menu items to be visible in annotation toolbar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StampSettings"}},{"Kind":"Components.Component","Name":"CustomStampSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerCustomStampSettings","Documentation":"\n            <summary>\n            Defines the settings of customStamp annotation. It use to customize the custom annoation support for the PDF Viewer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomStampSettings"}},{"Kind":"Components.Component","Name":"FreeTextSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerFreeTextSettings","Documentation":"\n            <summary>\n            Defines the settings of free text annotation. It used to customize the free text annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FreeTextSettings"}},{"Kind":"Components.Component","Name":"HandwrittenSignatureSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerHandwrittenSignatureSettings","Documentation":"\n            <summary>\n            Defines the settings of handwritten signature annotation. It used to customize the handwritten signature annotation properties.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HandwrittenSignatureSettings"}},{"Kind":"Components.Component","Name":"InkAnnotationSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerInkAnnotationSettings","Documentation":"\n            <summary>\n            Defines the ink annotation settings for PDF Viewer.It used to customize the strokeColor, thickness, opacity of the ink annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InkAnnotationSettings"}},{"Kind":"Components.Component","Name":"StickyNotesSettings","TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerStickyNotesSettings","Documentation":"\n            <summary>\n            Defines the settings of stickyNotes annotation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StickyNotesSettings"}},{"Kind":"Components.Component","Name":"EnableDesktopMode","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a boolean value to show or hide desktop toolbar in mobile devices. FALSE by default.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableDesktopMode"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.SfPdfViewer","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1093276969,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.SfPdfViewer.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","Documentation":"\n            <summary>\n            ChildContent used to define child elements for the root component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfPdfViewer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.SfPdfViewer.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2057379202,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.PdfViewer.SfPdfViewer.ChildContent","AssemblyName":"Syncfusion.Blazor.PdfViewer","Documentation":"\n            <summary>\n            ChildContent used to define child elements for the root component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.PdfViewer.SfPdfViewer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.PdfViewer.SfPdfViewer.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1135629192,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer._Imports","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer._Imports"}},{"HashCode":1959061520,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer._Imports","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer._Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer._Imports","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2090848361,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.AnnotationToolbar","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AnnotationToolbar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"PrimaryToolbar","TypeName":"Syncfusion.Blazor.PdfViewer.Internal.Toolbar","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"PrimaryToolbar"}},{"Kind":"Components.Component","Name":"AnnotationToolbarAction","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"AnnotationToolbarAction","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.AnnotationToolbar"}},{"HashCode":-1940899980,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.AnnotationToolbar","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.Internal.AnnotationToolbar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"PrimaryToolbar","TypeName":"Syncfusion.Blazor.PdfViewer.Internal.Toolbar","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"PrimaryToolbar"}},{"Kind":"Components.Component","Name":"AnnotationToolbarAction","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"AnnotationToolbarAction","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.AnnotationToolbar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-65561505,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.BookmarkView","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BookmarkView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Bookmarks","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.Bookmark>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"Bookmarks"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.BookmarkView"}},{"HashCode":839805590,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.BookmarkView","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.Internal.BookmarkView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Bookmarks","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.PdfViewer.Bookmark>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"Bookmarks"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.BookmarkView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1734919807,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.ContextMenu","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContextMenu"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.ContextMenu"}},{"HashCode":1560916088,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.ContextMenu","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.Internal.ContextMenu"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.ContextMenu","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":484604412,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.CorruptedDialog","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CorruptedDialog"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.CorruptedDialog"}},{"HashCode":-997174550,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.CorruptedDialog","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.Internal.CorruptedDialog"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.CorruptedDialog","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":245305677,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.MobileToolbar","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MobileToolbar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssProp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CssProp","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CssValue","TypeName":"System.String","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CssValue"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.MobileToolbar"}},{"HashCode":93524344,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.MobileToolbar","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.Internal.MobileToolbar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssProp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CssProp","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CssValue","TypeName":"System.String","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CssValue"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.MobileToolbar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-459227545,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.NavigationToolbar","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavigationToolbar"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.NavigationToolbar"}},{"HashCode":1137441134,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.NavigationToolbar","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.Internal.NavigationToolbar"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.NavigationToolbar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2143731924,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.NotificationDialog","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotificationDialog"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.NotificationDialog"}},{"HashCode":-1875225931,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.NotificationDialog","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.Internal.NotificationDialog"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.NotificationDialog","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1486769884,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.PasswordDialog","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PasswordDialog"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.PasswordDialog"}},{"HashCode":-425553906,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.PasswordDialog","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.Internal.PasswordDialog"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.PasswordDialog","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1028662528,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.PdfViewerSpinner","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerSpinner"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Metadata":{"Common.PropertyName":"ID"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.PdfViewerSpinner"}},{"HashCode":-675531983,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.PdfViewerSpinner","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.Internal.PdfViewerSpinner"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Metadata":{"Common.PropertyName":"ID"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.PdfViewerSpinner","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1563964746,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.PropertiesDialog","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PropertiesDialog"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.PropertiesDialog"}},{"HashCode":-1423752506,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.PropertiesDialog","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.Internal.PropertiesDialog"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.PropertiesDialog","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":213815681,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.ScaleRatioDialog","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ScaleRatioDialog"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.ScaleRatioDialog"}},{"HashCode":2059128853,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.ScaleRatioDialog","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.Internal.ScaleRatioDialog"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.ScaleRatioDialog","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1375075978,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.SearchTemplate","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SearchTemplate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssProp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CssProp","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CssValue","TypeName":"System.String","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CssValue"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.SearchTemplate"}},{"HashCode":-1143807112,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.SearchTemplate","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.Internal.SearchTemplate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssProp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CssProp","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CssValue","TypeName":"System.String","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CssValue"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.SearchTemplate","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2042005921,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.SignatureDialog","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SignatureDialog"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.SignatureDialog"}},{"HashCode":1850647189,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.SignatureDialog","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.Internal.SignatureDialog"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.SignatureDialog","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":580398103,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.Toolbar","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Toolbar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssProp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CssProp","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CssValue","TypeName":"System.String","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CssValue"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.Toolbar"}},{"HashCode":-2095670274,"Kind":"Components.Component","Name":"Syncfusion.Blazor.PdfViewer.Internal.Toolbar","AssemblyName":"Syncfusion.Blazor.PdfViewer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.Internal.Toolbar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssProp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CssProp","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CssValue","TypeName":"System.String","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"CssValue"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.PdfViewer.Internal.Toolbar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":995926337,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataManager","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"\n            <summary>\n            The DataManager is a data management component used for performing data operations in applications.\n            It acts as an abstraction for using local data source - IEnumerable and remote data source - web services returning JSON or oData.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataManager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HttpClientInstance","TypeName":"System.Net.Http.HttpClient","Documentation":"\n            <summary>\n            Specifies the HttpClient instance to be used  by DataManager.\n            </summary>\n            <remarks>Use HttpClientInstance property to inject named HttpClient into DataManager.</remarks>\n        ","Metadata":{"Common.PropertyName":"HttpClientInstance"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the endpoint URL. DataManager requests this URL when data is needed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Url"}},{"Kind":"Components.Component","Name":"AdaptorInstance","TypeName":"System.Type","Documentation":"\n            <summary>\n            Specifies the custom adaptor class type. DataManager uses this type value to instantiate custom adaptor class.\n            </summary>\n            <remarks>DataManager uses Activator.CreateInstance method to create custom adaptor instance.\n            Injecting services into custom adaptor class, is not supported while using this approach.\n            To inject and use services, provide custom adaptor as a Blazor component by extending DataAdaptor class.</remarks>\n        ","Metadata":{"Common.PropertyName":"AdaptorInstance"}},{"Kind":"Components.Component","Name":"Adaptor","TypeName":"Syncfusion.Blazor.Adaptors","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the data adaptor to be used by DataManager.\n            <list type=\"bullet\">\n            <item>\n            <term>BlazorAdaptor</term>\n            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>\n            </item>\n            <item>\n            <term>ODataAdaptor</term>\n            <description>\n            OData Adaptor provies ability to consume and manipulate data from OData services.\n            </description>\n            </item>\n            <item>\n            <term>ODataV4Adaptor</term>\n            <description>\n            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services\n            </description>\n            </item>\n            <item>\n            <term>WebApiAdaptor</term>\n            <description>\n            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.\n            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n            </description>\n            </item>\n            <item>\n            <term>UrlAdaptor</term>\n            <description>\n            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.\n            </description>\n            </item>\n            <item>\n            <term>RemoteSaveAdaptor</term>\n            <description>\n            Remote Save Adaptor is used for binding JSON data.\n            It interacts with remote services only for CRUD operations.\n            </description>\n            </item>\n            <item>\n            <term>CustomAdaptor</term>\n            <description>\n            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component\n            extended from DataAdaptor class.\n            </description>\n            </item>\n            <item>\n            <term>JsonAdaptor</term>\n            <description>\n            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.\n            </description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Adaptor"}},{"Kind":"Components.Component","Name":"DataAdaptor","TypeName":"Syncfusion.Blazor.Data.IAdaptor","Documentation":"\n            <summary>\n            Holds adaptor instance.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"DataAdaptor"}},{"Kind":"Components.Component","Name":"InsertUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the insert URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Insert method is called, request will be made to InsertUrl.\n            If InsertUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"InsertUrl"}},{"Kind":"Components.Component","Name":"RemoveUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the remove URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Remove method is called, request will be made to RemoveUrl.\n            If RemoveUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"RemoveUrl"}},{"Kind":"Components.Component","Name":"UpdateUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the update URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Update method is called, request will be made to UpdateUrl.\n            If UpdateUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"UpdateUrl"}},{"Kind":"Components.Component","Name":"CrudUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CRUD URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Insert, Remove or Update method is called, request will be made to CrudUrl.\n            If CrudUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"CrudUrl"}},{"Kind":"Components.Component","Name":"BatchUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the batch url.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When SaveChanges method is called, request will be made to BatchUrl.\n            If BatchUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"BatchUrl"}},{"Kind":"Components.Component","Name":"Json","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"\n            <summary>\n            Specifies the IEnumerable collection. This data could be queried and manipulated.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Json"}},{"Kind":"Components.Component","Name":"Headers","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","Documentation":"\n            <summary>\n            Specifies the key/value pair of headers.\n            </summary>\n            <remarks>\n            Use Headers to add any custom headers to the request made by DataManager.\n            Users can also send authentication bearer token using Headers property.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Headers"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the accept type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Accept"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the IEnumerale data.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"Data"}},{"Kind":"Components.Component","Name":"TimeTillExpiration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time limit to clear the cached data.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TimeTillExpiration"}},{"Kind":"Components.Component","Name":"CachingPageSize","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the caching page size.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CachingPageSize"}},{"Kind":"Components.Component","Name":"EnableCaching","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables data caching.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableCaching"}},{"Kind":"Components.Component","Name":"RequestType","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the request type for sending data fetching.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"RequestType"}},{"Kind":"Components.Component","Name":"Key","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the primary key value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Key"}},{"Kind":"Components.Component","Name":"CrossDomain","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When true, then indicates that the request is a cross-domain request.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CrossDomain"}},{"Kind":"Components.Component","Name":"Jsonp","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the jsonp request.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Jsonp"}},{"Kind":"Components.Component","Name":"DataType","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the data type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataType"}},{"Kind":"Components.Component","Name":"Offline","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables offline mode in datamanager.\n            </summary>\n            <remarks>\n            Applicable for remote data source. If offline is true then initial request will be made to fetch\n            data. Further actions will be handled at the in-memory data and no more request will be made to the service.\n            Cached data is stored in the JSON property.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Offline"}},{"Kind":"Components.Component","Name":"RequiresFormat","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Sepcifies requires format.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RequiresFormat"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Defines the child content.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataManager"}},{"HashCode":-690500929,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataManager","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"\n            <summary>\n            The DataManager is a data management component used for performing data operations in applications.\n            It acts as an abstraction for using local data source - IEnumerable and remote data source - web services returning JSON or oData.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DataManager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HttpClientInstance","TypeName":"System.Net.Http.HttpClient","Documentation":"\n            <summary>\n            Specifies the HttpClient instance to be used  by DataManager.\n            </summary>\n            <remarks>Use HttpClientInstance property to inject named HttpClient into DataManager.</remarks>\n        ","Metadata":{"Common.PropertyName":"HttpClientInstance"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the endpoint URL. DataManager requests this URL when data is needed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Url"}},{"Kind":"Components.Component","Name":"AdaptorInstance","TypeName":"System.Type","Documentation":"\n            <summary>\n            Specifies the custom adaptor class type. DataManager uses this type value to instantiate custom adaptor class.\n            </summary>\n            <remarks>DataManager uses Activator.CreateInstance method to create custom adaptor instance.\n            Injecting services into custom adaptor class, is not supported while using this approach.\n            To inject and use services, provide custom adaptor as a Blazor component by extending DataAdaptor class.</remarks>\n        ","Metadata":{"Common.PropertyName":"AdaptorInstance"}},{"Kind":"Components.Component","Name":"Adaptor","TypeName":"Syncfusion.Blazor.Adaptors","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the data adaptor to be used by DataManager.\n            <list type=\"bullet\">\n            <item>\n            <term>BlazorAdaptor</term>\n            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>\n            </item>\n            <item>\n            <term>ODataAdaptor</term>\n            <description>\n            OData Adaptor provies ability to consume and manipulate data from OData services.\n            </description>\n            </item>\n            <item>\n            <term>ODataV4Adaptor</term>\n            <description>\n            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services\n            </description>\n            </item>\n            <item>\n            <term>WebApiAdaptor</term>\n            <description>\n            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.\n            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n            </description>\n            </item>\n            <item>\n            <term>UrlAdaptor</term>\n            <description>\n            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.\n            </description>\n            </item>\n            <item>\n            <term>RemoteSaveAdaptor</term>\n            <description>\n            Remote Save Adaptor is used for binding JSON data.\n            It interacts with remote services only for CRUD operations.\n            </description>\n            </item>\n            <item>\n            <term>CustomAdaptor</term>\n            <description>\n            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component\n            extended from DataAdaptor class.\n            </description>\n            </item>\n            <item>\n            <term>JsonAdaptor</term>\n            <description>\n            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.\n            </description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Adaptor"}},{"Kind":"Components.Component","Name":"DataAdaptor","TypeName":"Syncfusion.Blazor.Data.IAdaptor","Documentation":"\n            <summary>\n            Holds adaptor instance.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"DataAdaptor"}},{"Kind":"Components.Component","Name":"InsertUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the insert URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Insert method is called, request will be made to InsertUrl.\n            If InsertUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"InsertUrl"}},{"Kind":"Components.Component","Name":"RemoveUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the remove URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Remove method is called, request will be made to RemoveUrl.\n            If RemoveUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"RemoveUrl"}},{"Kind":"Components.Component","Name":"UpdateUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the update URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Update method is called, request will be made to UpdateUrl.\n            If UpdateUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"UpdateUrl"}},{"Kind":"Components.Component","Name":"CrudUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CRUD URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Insert, Remove or Update method is called, request will be made to CrudUrl.\n            If CrudUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"CrudUrl"}},{"Kind":"Components.Component","Name":"BatchUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the batch url.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When SaveChanges method is called, request will be made to BatchUrl.\n            If BatchUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"BatchUrl"}},{"Kind":"Components.Component","Name":"Json","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"\n            <summary>\n            Specifies the IEnumerable collection. This data could be queried and manipulated.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Json"}},{"Kind":"Components.Component","Name":"Headers","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","Documentation":"\n            <summary>\n            Specifies the key/value pair of headers.\n            </summary>\n            <remarks>\n            Use Headers to add any custom headers to the request made by DataManager.\n            Users can also send authentication bearer token using Headers property.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Headers"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the accept type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Accept"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the IEnumerale data.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"Data"}},{"Kind":"Components.Component","Name":"TimeTillExpiration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time limit to clear the cached data.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TimeTillExpiration"}},{"Kind":"Components.Component","Name":"CachingPageSize","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the caching page size.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CachingPageSize"}},{"Kind":"Components.Component","Name":"EnableCaching","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables data caching.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableCaching"}},{"Kind":"Components.Component","Name":"RequestType","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the request type for sending data fetching.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"RequestType"}},{"Kind":"Components.Component","Name":"Key","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the primary key value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Key"}},{"Kind":"Components.Component","Name":"CrossDomain","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When true, then indicates that the request is a cross-domain request.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CrossDomain"}},{"Kind":"Components.Component","Name":"Jsonp","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the jsonp request.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Jsonp"}},{"Kind":"Components.Component","Name":"DataType","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the data type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataType"}},{"Kind":"Components.Component","Name":"Offline","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables offline mode in datamanager.\n            </summary>\n            <remarks>\n            Applicable for remote data source. If offline is true then initial request will be made to fetch\n            data. Further actions will be handled at the in-memory data and no more request will be made to the service.\n            Cached data is stored in the JSON property.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Offline"}},{"Kind":"Components.Component","Name":"RequiresFormat","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Sepcifies requires format.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RequiresFormat"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Defines the child content.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataManager","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1471269533,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DataManager.ChildContent","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"\n            <summary>\n            Defines the child content.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DataManager"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DataManager.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1484241928,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DataManager.ChildContent","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"\n            <summary>\n            Defines the child content.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.DataManager"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.DataManager.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2083964401,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Data.SfDataManager","AssemblyName":"Syncfusion.Blazor.Data","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfDataManager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HttpClientInstance","TypeName":"System.Net.Http.HttpClient","Documentation":"\n            <summary>\n            Specifies the HttpClient instance to be used  by DataManager.\n            </summary>\n            <remarks>Use HttpClientInstance property to inject named HttpClient into DataManager.</remarks>\n        ","Metadata":{"Common.PropertyName":"HttpClientInstance"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the endpoint URL. DataManager requests this URL when data is needed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Url"}},{"Kind":"Components.Component","Name":"AdaptorInstance","TypeName":"System.Type","Documentation":"\n            <summary>\n            Specifies the custom adaptor class type. DataManager uses this type value to instantiate custom adaptor class.\n            </summary>\n            <remarks>DataManager uses Activator.CreateInstance method to create custom adaptor instance.\n            Injecting services into custom adaptor class, is not supported while using this approach.\n            To inject and use services, provide custom adaptor as a Blazor component by extending DataAdaptor class.</remarks>\n        ","Metadata":{"Common.PropertyName":"AdaptorInstance"}},{"Kind":"Components.Component","Name":"Adaptor","TypeName":"Syncfusion.Blazor.Adaptors","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the data adaptor to be used by DataManager.\n            <list type=\"bullet\">\n            <item>\n            <term>BlazorAdaptor</term>\n            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>\n            </item>\n            <item>\n            <term>ODataAdaptor</term>\n            <description>\n            OData Adaptor provies ability to consume and manipulate data from OData services.\n            </description>\n            </item>\n            <item>\n            <term>ODataV4Adaptor</term>\n            <description>\n            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services\n            </description>\n            </item>\n            <item>\n            <term>WebApiAdaptor</term>\n            <description>\n            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.\n            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n            </description>\n            </item>\n            <item>\n            <term>UrlAdaptor</term>\n            <description>\n            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.\n            </description>\n            </item>\n            <item>\n            <term>RemoteSaveAdaptor</term>\n            <description>\n            Remote Save Adaptor is used for binding JSON data.\n            It interacts with remote services only for CRUD operations.\n            </description>\n            </item>\n            <item>\n            <term>CustomAdaptor</term>\n            <description>\n            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component\n            extended from DataAdaptor class.\n            </description>\n            </item>\n            <item>\n            <term>JsonAdaptor</term>\n            <description>\n            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.\n            </description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Adaptor"}},{"Kind":"Components.Component","Name":"DataAdaptor","TypeName":"Syncfusion.Blazor.Data.IAdaptor","Documentation":"\n            <summary>\n            Holds adaptor instance.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"DataAdaptor"}},{"Kind":"Components.Component","Name":"InsertUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the insert URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Insert method is called, request will be made to InsertUrl.\n            If InsertUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"InsertUrl"}},{"Kind":"Components.Component","Name":"RemoveUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the remove URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Remove method is called, request will be made to RemoveUrl.\n            If RemoveUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"RemoveUrl"}},{"Kind":"Components.Component","Name":"UpdateUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the update URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Update method is called, request will be made to UpdateUrl.\n            If UpdateUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"UpdateUrl"}},{"Kind":"Components.Component","Name":"CrudUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CRUD URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Insert, Remove or Update method is called, request will be made to CrudUrl.\n            If CrudUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"CrudUrl"}},{"Kind":"Components.Component","Name":"BatchUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the batch url.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When SaveChanges method is called, request will be made to BatchUrl.\n            If BatchUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"BatchUrl"}},{"Kind":"Components.Component","Name":"Json","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"\n            <summary>\n            Specifies the IEnumerable collection. This data could be queried and manipulated.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Json"}},{"Kind":"Components.Component","Name":"Headers","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","Documentation":"\n            <summary>\n            Specifies the key/value pair of headers.\n            </summary>\n            <remarks>\n            Use Headers to add any custom headers to the request made by DataManager.\n            Users can also send authentication bearer token using Headers property.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Headers"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the accept type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Accept"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the IEnumerale data.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"Data"}},{"Kind":"Components.Component","Name":"TimeTillExpiration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time limit to clear the cached data.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TimeTillExpiration"}},{"Kind":"Components.Component","Name":"CachingPageSize","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the caching page size.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CachingPageSize"}},{"Kind":"Components.Component","Name":"EnableCaching","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables data caching.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableCaching"}},{"Kind":"Components.Component","Name":"RequestType","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the request type for sending data fetching.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"RequestType"}},{"Kind":"Components.Component","Name":"Key","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the primary key value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Key"}},{"Kind":"Components.Component","Name":"CrossDomain","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When true, then indicates that the request is a cross-domain request.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CrossDomain"}},{"Kind":"Components.Component","Name":"Jsonp","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the jsonp request.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Jsonp"}},{"Kind":"Components.Component","Name":"DataType","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the data type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataType"}},{"Kind":"Components.Component","Name":"Offline","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables offline mode in datamanager.\n            </summary>\n            <remarks>\n            Applicable for remote data source. If offline is true then initial request will be made to fetch\n            data. Further actions will be handled at the in-memory data and no more request will be made to the service.\n            Cached data is stored in the JSON property.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Offline"}},{"Kind":"Components.Component","Name":"RequiresFormat","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Sepcifies requires format.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RequiresFormat"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Defines the child content.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Data.SfDataManager"}},{"HashCode":-166542936,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Data.SfDataManager","AssemblyName":"Syncfusion.Blazor.Data","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Data.SfDataManager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HttpClientInstance","TypeName":"System.Net.Http.HttpClient","Documentation":"\n            <summary>\n            Specifies the HttpClient instance to be used  by DataManager.\n            </summary>\n            <remarks>Use HttpClientInstance property to inject named HttpClient into DataManager.</remarks>\n        ","Metadata":{"Common.PropertyName":"HttpClientInstance"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the endpoint URL. DataManager requests this URL when data is needed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Url"}},{"Kind":"Components.Component","Name":"AdaptorInstance","TypeName":"System.Type","Documentation":"\n            <summary>\n            Specifies the custom adaptor class type. DataManager uses this type value to instantiate custom adaptor class.\n            </summary>\n            <remarks>DataManager uses Activator.CreateInstance method to create custom adaptor instance.\n            Injecting services into custom adaptor class, is not supported while using this approach.\n            To inject and use services, provide custom adaptor as a Blazor component by extending DataAdaptor class.</remarks>\n        ","Metadata":{"Common.PropertyName":"AdaptorInstance"}},{"Kind":"Components.Component","Name":"Adaptor","TypeName":"Syncfusion.Blazor.Adaptors","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the data adaptor to be used by DataManager.\n            <list type=\"bullet\">\n            <item>\n            <term>BlazorAdaptor</term>\n            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>\n            </item>\n            <item>\n            <term>ODataAdaptor</term>\n            <description>\n            OData Adaptor provies ability to consume and manipulate data from OData services.\n            </description>\n            </item>\n            <item>\n            <term>ODataV4Adaptor</term>\n            <description>\n            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services\n            </description>\n            </item>\n            <item>\n            <term>WebApiAdaptor</term>\n            <description>\n            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.\n            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n            </description>\n            </item>\n            <item>\n            <term>UrlAdaptor</term>\n            <description>\n            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.\n            </description>\n            </item>\n            <item>\n            <term>RemoteSaveAdaptor</term>\n            <description>\n            Remote Save Adaptor is used for binding JSON data.\n            It interacts with remote services only for CRUD operations.\n            </description>\n            </item>\n            <item>\n            <term>CustomAdaptor</term>\n            <description>\n            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component\n            extended from DataAdaptor class.\n            </description>\n            </item>\n            <item>\n            <term>JsonAdaptor</term>\n            <description>\n            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.\n            </description>\n            </item>\n            </list>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Adaptor"}},{"Kind":"Components.Component","Name":"DataAdaptor","TypeName":"Syncfusion.Blazor.Data.IAdaptor","Documentation":"\n            <summary>\n            Holds adaptor instance.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"DataAdaptor"}},{"Kind":"Components.Component","Name":"InsertUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the insert URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Insert method is called, request will be made to InsertUrl.\n            If InsertUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"InsertUrl"}},{"Kind":"Components.Component","Name":"RemoveUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the remove URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Remove method is called, request will be made to RemoveUrl.\n            If RemoveUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"RemoveUrl"}},{"Kind":"Components.Component","Name":"UpdateUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the update URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Update method is called, request will be made to UpdateUrl.\n            If UpdateUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"UpdateUrl"}},{"Kind":"Components.Component","Name":"CrudUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CRUD URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Insert, Remove or Update method is called, request will be made to CrudUrl.\n            If CrudUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"CrudUrl"}},{"Kind":"Components.Component","Name":"BatchUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the batch url.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When SaveChanges method is called, request will be made to BatchUrl.\n            If BatchUrl is not provided, Url is used as fallback.</remarks>\n        ","Metadata":{"Common.PropertyName":"BatchUrl"}},{"Kind":"Components.Component","Name":"Json","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"\n            <summary>\n            Specifies the IEnumerable collection. This data could be queried and manipulated.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Json"}},{"Kind":"Components.Component","Name":"Headers","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","Documentation":"\n            <summary>\n            Specifies the key/value pair of headers.\n            </summary>\n            <remarks>\n            Use Headers to add any custom headers to the request made by DataManager.\n            Users can also send authentication bearer token using Headers property.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Headers"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the accept type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Accept"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the IEnumerale data.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"Data"}},{"Kind":"Components.Component","Name":"TimeTillExpiration","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the time limit to clear the cached data.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TimeTillExpiration"}},{"Kind":"Components.Component","Name":"CachingPageSize","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Specifies the caching page size.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CachingPageSize"}},{"Kind":"Components.Component","Name":"EnableCaching","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables data caching.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableCaching"}},{"Kind":"Components.Component","Name":"RequestType","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the request type for sending data fetching.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"RequestType"}},{"Kind":"Components.Component","Name":"Key","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the primary key value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Key"}},{"Kind":"Components.Component","Name":"CrossDomain","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When true, then indicates that the request is a cross-domain request.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CrossDomain"}},{"Kind":"Components.Component","Name":"Jsonp","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the jsonp request.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Jsonp"}},{"Kind":"Components.Component","Name":"DataType","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the data type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataType"}},{"Kind":"Components.Component","Name":"Offline","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables offline mode in datamanager.\n            </summary>\n            <remarks>\n            Applicable for remote data source. If offline is true then initial request will be made to fetch\n            data. Further actions will be handled at the in-memory data and no more request will be made to the service.\n            Cached data is stored in the JSON property.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Offline"}},{"Kind":"Components.Component","Name":"RequiresFormat","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Sepcifies requires format.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RequiresFormat"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Defines the child content.\n            </summary>\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Data.SfDataManager","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-329131016,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Data.SfDataManager.ChildContent","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"\n            <summary>\n            Defines the child content.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfDataManager"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Data.SfDataManager.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":926201121,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Data.SfDataManager.ChildContent","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"\n            <summary>\n            Defines the child content.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Data.SfDataManager"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Data.SfDataManager.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":468452146,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Internal.JSInteropAdaptor","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"\n            <summary>\n            Custom handler of JSInterop to invoke the JavaScript methods with DotNetObjectReference.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"JSInteropAdaptor"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Internal.JSInteropAdaptor"}},{"HashCode":1789454602,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Internal.JSInteropAdaptor","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"\n            <summary>\n            Custom handler of JSInterop to invoke the JavaScript methods with DotNetObjectReference.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Internal.JSInteropAdaptor"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Internal.JSInteropAdaptor","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":606373012,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Core._Imports","AssemblyName":"Syncfusion.Blazor.Core","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Core._Imports"}},{"HashCode":887758561,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Core._Imports","AssemblyName":"Syncfusion.Blazor.Core","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Core._Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Core._Imports","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":382187827,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Internal.ResourceManager","AssemblyName":"Syncfusion.Blazor.Core","Documentation":"\n            <summary>\n            Resource manager component for loading init interop script in .NET Core 3.0 applications.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ResourceManager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LocaleKeys","TypeName":"System.Collections.Generic.List<System.String>","Documentation":"\n            <summary>\n            Add the component and its dependent component locale keys from the LocaleService/GetMappingLocale method.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LocaleKeys"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Internal.ResourceManager"}},{"HashCode":1673067543,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Internal.ResourceManager","AssemblyName":"Syncfusion.Blazor.Core","Documentation":"\n            <summary>\n            Resource manager component for loading init interop script in .NET Core 3.0 applications.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Internal.ResourceManager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LocaleKeys","TypeName":"System.Collections.Generic.List<System.String>","Documentation":"\n            <summary>\n            Add the component and its dependent component locale keys from the LocaleService/GetMappingLocale method.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LocaleKeys"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Internal.ResourceManager","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-852522823,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Internal.SyncfusionLicense","AssemblyName":"Syncfusion.Blazor.Core","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SyncfusionLicense"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Internal.SyncfusionLicense"}},{"HashCode":134366008,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Internal.SyncfusionLicense","AssemblyName":"Syncfusion.Blazor.Core","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Internal.SyncfusionLicense"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Internal.SyncfusionLicense","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-118747222,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Spinner.SpinnerEvents","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <summary>\n            Configure event handlers for the Spinner component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SpinnerEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Event triggers after the Spinner is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBeforeOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Spinner.SpinnerEventArgs>","Documentation":"\n            <summary>\n            Event triggers before the Spinner is opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnBeforeOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBeforeClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Spinner.SpinnerEventArgs>","Documentation":"\n            <summary>\n            Event triggers before the Spinner is closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnBeforeClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Event triggers after the Spinner is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Spinner.SpinnerEvents"}},{"HashCode":-1426350403,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Spinner.SpinnerEvents","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <summary>\n            Configure event handlers for the Spinner component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Spinner.SpinnerEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Event triggers after the Spinner is created.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBeforeOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Spinner.SpinnerEventArgs>","Documentation":"\n            <summary>\n            Event triggers before the Spinner is opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnBeforeOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBeforeClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Spinner.SpinnerEventArgs>","Documentation":"\n            <summary>\n            Event triggers before the Spinner is closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnBeforeClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Event triggers after the Spinner is destroyed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Destroyed","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Spinner.SpinnerEvents","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-865821345,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Spinner.SpinnerTemplates","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <summary>\n            Configure the template of the Spinner.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SpinnerTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Defines the template of the Spinner.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Template","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Spinner.SpinnerTemplates"}},{"HashCode":29062447,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Spinner.SpinnerTemplates","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <summary>\n            Configure the template of the Spinner.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Spinner.SpinnerTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Defines the template of the Spinner.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Template","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Spinner.SpinnerTemplates","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2127287794,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Spinner.SpinnerTemplates.Template","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <summary>\n            Defines the template of the Spinner.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"SpinnerTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Spinner.SpinnerTemplates.Template","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1051278160,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Spinner.SpinnerTemplates.Template","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <summary>\n            Defines the template of the Spinner.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"Syncfusion.Blazor.Spinner.SpinnerTemplates"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Spinner.SpinnerTemplates.Template","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-856209765,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Spinner.SfSpinner","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <summary>\n            Represents the spinner component that displays when spinner is shown.\n            </summary>\n            <exclude /> \n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfSpinner"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the label for the Spinner.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the Spinner.\n            One or more custom CSS classes can be added to a Spinner.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Specified content of the Spinner element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the value that represents whether the Spinner component is visible.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"VisibleChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback of the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VisibleChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the size of the Spinner.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the z-order for the Spinner.\n            By default the value is auto.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Spinner.SpinnerType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies a theme of the spinner.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Spinner.SfSpinner"}},{"HashCode":-1642865294,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Spinner.SfSpinner","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <summary>\n            Represents the spinner component that displays when spinner is shown.\n            </summary>\n            <exclude /> \n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Spinner.SfSpinner"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the label for the Spinner.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the CSS class name that can be appended with the root element of the Spinner.\n            One or more custom CSS classes can be added to a Spinner.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Specified content of the Spinner element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies the value that represents whether the Spinner component is visible.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"VisibleChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback of the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VisibleChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the size of the Spinner.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the z-order for the Spinner.\n            By default the value is auto.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Spinner.SpinnerType","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies a theme of the spinner.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Spinner.SfSpinner","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":260615393,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Spinner.SfSpinner.ChildContent","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <exclude />\n            <summary>\n            Specified content of the Spinner element.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfSpinner"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Spinner.SfSpinner.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1097541949,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Spinner.SfSpinner.ChildContent","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <exclude />\n            <summary>\n            Specified content of the Spinner element.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Spinner.SfSpinner"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.Spinner.SfSpinner.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1847436698,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Spinner.Internal.Bootstrap","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <summary>\n            Represents the Spinner's Bootstrap class.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Bootstrap"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Spinner.Internal.Bootstrap"}},{"HashCode":-2097238141,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Spinner.Internal.Bootstrap","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <summary>\n            Represents the Spinner's Bootstrap class.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Spinner.Internal.Bootstrap"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Spinner.Internal.Bootstrap","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":198206408,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Spinner.Internal.Bootstrap4","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <summary>\n            Represents the Spinner's Bootstrap 4 class.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Bootstrap4"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Spinner.Internal.Bootstrap4"}},{"HashCode":209160182,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Spinner.Internal.Bootstrap4","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <summary>\n            Represents the Spinner's Bootstrap 4 class.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Spinner.Internal.Bootstrap4"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Spinner.Internal.Bootstrap4","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-69168577,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Spinner.Internal.FabricHighContrast","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <summary>\n            Represents the Spinner's Fabric and High-Contrast class.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FabricHighContrast"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Spinner.Internal.FabricHighContrast"}},{"HashCode":1271440252,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Spinner.Internal.FabricHighContrast","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <summary>\n            Represents the Spinner's Fabric and High-Contrast class.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Spinner.Internal.FabricHighContrast"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Spinner.Internal.FabricHighContrast","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1308970225,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Spinner.Internal.Material","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <summary>\n            Represents the Spinner Material class.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Material"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Spinner.Internal.Material"}},{"HashCode":-1914870258,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Spinner.Internal.Material","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <summary>\n            Represents the Spinner Material class.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Spinner.Internal.Material"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Spinner.Internal.Material","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":230225016,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Spinner.Internal.SpinnerBase","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <summary>\n            Represents the common methods that are used in all the themes.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SpinnerBase"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Spinner.Internal.SpinnerBase"}},{"HashCode":549900215,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Spinner.Internal.SpinnerBase","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"\n            <summary>\n            Represents the common methods that are used in all the themes.\n            </summary>\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Spinner.Internal.SpinnerBase"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Spinner.Internal.SpinnerBase","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-189604221,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.ButtonGroupButton","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            ButtonGroupButton  creates a button element that triggers an event on its click action.\n            It can contain a text, an image, or both.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ButtonGroupButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the button element. The button types and\n            styles can be defined by using this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space for the button that is used to include an icon.\n            Button can also include font icon and sprite image.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the button is enabled or disabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the button is selected or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines name attribute for the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines value attribute for the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text content of the button element and it will support only string type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"IsToggle","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Makes the button as toggleable, when set to true. When you click it, the state changes from normal to active and viceversa.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsToggle"}},{"Kind":"Components.Component","Name":"IsPrimary","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows the appearance of the button to be enhanced and visually appealing when set to true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrimary"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.Buttons.IconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions the icon based on the text content in the button and its default value is Left.\n            The possible values are:\n            - Left: The icon will be positioned to the left of the text content.\n            - Right: The icon will be positioned to the right of the text content.\n            - Top: The icon will be positioned to the top of the text content.\n            - Bottom: The icon will be positioned to the bottom of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as id, native events etc., to the ButtonGroup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"SelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"SelectedChanged","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.ButtonGroupButton"}},{"HashCode":1581256854,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.ButtonGroupButton","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            ButtonGroupButton  creates a button element that triggers an event on its click action.\n            It can contain a text, an image, or both.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SplitButtons.ButtonGroupButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the button element. The button types and\n            styles can be defined by using this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space for the button that is used to include an icon.\n            Button can also include font icon and sprite image.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the button is enabled or disabled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the button is selected or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines name attribute for the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines value attribute for the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text content of the button element and it will support only string type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"IsToggle","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Makes the button as toggleable, when set to true. When you click it, the state changes from normal to active and viceversa.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsToggle"}},{"Kind":"Components.Component","Name":"IsPrimary","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows the appearance of the button to be enhanced and visually appealing when set to true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrimary"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.Buttons.IconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions the icon based on the text content in the button and its default value is Left.\n            The possible values are:\n            - Left: The icon will be positioned to the left of the text content.\n            - Right: The icon will be positioned to the right of the text content.\n            - Top: The icon will be positioned to the top of the text content.\n            - Bottom: The icon will be positioned to the bottom of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as id, native events etc., to the ButtonGroup element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"SelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"SelectedChanged","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.ButtonGroupButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1385338354,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.ButtonGroupButton.ChildContent","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ButtonGroupButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.ButtonGroupButton.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1038707939,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.ButtonGroupButton.ChildContent","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.SplitButtons.ButtonGroupButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.ButtonGroupButton.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-24130200,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.SfButtonGroup","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            A ButtonGroup is a container that groups a series of buttons on a single line. It has an optional radio button (single selection) and checkbox (multiple selection) behavior.\n            It may contain DropDownButton or SplitButton component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfButtonGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Sets content for buttongroup element including HTML and its customizations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the buttongroup container element. The ButtonGroup types and\n            size customizations can be achieved by using this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the ButtonGroup container element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"Syncfusion.Blazor.SplitButtons.SelectionMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the selection modes. The possible values are,\n             `Default`: Default selection in the ButtonGroup.\n             `Single`: Allows you to select a single button in the ButtonGroup.\n             `Multiple`: Allows you to select more than one button in the ButtonGroup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfButtonGroup"}},{"HashCode":1665252018,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.SfButtonGroup","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            A ButtonGroup is a container that groups a series of buttons on a single line. It has an optional radio button (single selection) and checkbox (multiple selection) behavior.\n            It may contain DropDownButton or SplitButton component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SplitButtons.SfButtonGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n            <summary>\n            Sets content for buttongroup element including HTML and its customizations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the buttongroup container element. The ButtonGroup types and\n            size customizations can be achieved by using this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the ButtonGroup container element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"Syncfusion.Blazor.SplitButtons.SelectionMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the selection modes. The possible values are,\n             `Default`: Default selection in the ButtonGroup.\n             `Single`: Allows you to select a single button in the ButtonGroup.\n             `Multiple`: Allows you to select more than one button in the ButtonGroup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfButtonGroup","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1723890691,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.SfButtonGroup.ChildContent","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <exclude />\n            <summary>\n            Sets content for buttongroup element including HTML and its customizations.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfButtonGroup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfButtonGroup.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-129756389,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.SfButtonGroup.ChildContent","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <exclude />\n            <summary>\n            Sets content for buttongroup element including HTML and its customizations.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.SplitButtons.SfButtonGroup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfButtonGroup.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1827768221,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.DropDownButtonEvents","AssemblyName":"Syncfusion.Blazor.SplitButtons","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DropDownButtonEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs>","Documentation":"\n            <summary>\n            Triggers before closing the DropDownButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnItemRender","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.MenuEventArgs>","Documentation":"\n            <summary>\n            Triggers while rendering each Popup item of DropDownButton.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnItemRender","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs>","Documentation":"\n            <summary>\n            Triggers before opening the DropDownButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.OpenCloseMenuEventArgs>","Documentation":"\n            <summary>\n            Triggers while closing the DropDownButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.OpenCloseMenuEventArgs>","Documentation":"\n            <summary>\n            Triggers while opening the DropDownButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.MenuEventArgs>","Documentation":"\n            <summary>\n            Triggers while selecting action item in DropDownButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSelected","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.DropDownButtonEvents"}},{"HashCode":1786605301,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.DropDownButtonEvents","AssemblyName":"Syncfusion.Blazor.SplitButtons","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SplitButtons.DropDownButtonEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs>","Documentation":"\n            <summary>\n            Triggers before closing the DropDownButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnItemRender","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.MenuEventArgs>","Documentation":"\n            <summary>\n            Triggers while rendering each Popup item of DropDownButton.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnItemRender","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs>","Documentation":"\n            <summary>\n            Triggers before opening the DropDownButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.OpenCloseMenuEventArgs>","Documentation":"\n            <summary>\n            Triggers while closing the DropDownButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.OpenCloseMenuEventArgs>","Documentation":"\n            <summary>\n            Triggers while opening the DropDownButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.MenuEventArgs>","Documentation":"\n            <summary>\n            Triggers while selecting action item in DropDownButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSelected","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.DropDownButtonEvents","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":948149389,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.SfDropDownButton","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            DropDownButton component is used to toggle contextual overlays for displaying list of action items.\n            It can contain both text and images.\n            </summary>\n            <summary>\n            DropDownButton component is used to toggle contextual overlays for displaying list of action items.\n            It can contain both text and images.\n            </summary>\n            <summary>\n            DropDownButton component is used to toggle contextual overlays for displaying list of action items.\n            It can contain both text and images.\n            </summary>\n            <summary>\n            DropDownButton component is used to toggle contextual overlays for displaying list of action items.\n            It can contain both text and images.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfDropDownButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sets content for button element including HTML and its customizations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text content of the button element and it will support only string type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the DropDownButton element. The\n            DropDownButton size and styles can be customized by using this.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space for the DropDownButton that is used to\n            include an icon. DropDownButton can also include font icon and sprite image.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.SplitButtons.SplitButtonIconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions the icon before/top of the text content in the DropDownButton. The possible values are:\n            - Left: The icon will be positioned to the left of the text content.\n            - Top: The icon will be positioned to the top of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.SplitButtons.DropDownMenuItem>","Documentation":"\n            <summary>\n            Specifies action items with its properties which will be rendered in DropDownButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the DropDownButton is `Disabled` or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"PopupContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            To specify the custom popup content instead of Items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the dropdown button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfDropDownButton"}},{"HashCode":-337365246,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.SfDropDownButton","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            DropDownButton component is used to toggle contextual overlays for displaying list of action items.\n            It can contain both text and images.\n            </summary>\n            <summary>\n            DropDownButton component is used to toggle contextual overlays for displaying list of action items.\n            It can contain both text and images.\n            </summary>\n            <summary>\n            DropDownButton component is used to toggle contextual overlays for displaying list of action items.\n            It can contain both text and images.\n            </summary>\n            <summary>\n            DropDownButton component is used to toggle contextual overlays for displaying list of action items.\n            It can contain both text and images.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SplitButtons.SfDropDownButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sets content for button element including HTML and its customizations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text content of the button element and it will support only string type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the DropDownButton element. The\n            DropDownButton size and styles can be customized by using this.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space for the DropDownButton that is used to\n            include an icon. DropDownButton can also include font icon and sprite image.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.SplitButtons.SplitButtonIconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions the icon before/top of the text content in the DropDownButton. The possible values are:\n            - Left: The icon will be positioned to the left of the text content.\n            - Top: The icon will be positioned to the top of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.SplitButtons.DropDownMenuItem>","Documentation":"\n            <summary>\n            Specifies action items with its properties which will be rendered in DropDownButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the DropDownButton is `Disabled` or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"PopupContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            To specify the custom popup content instead of Items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the dropdown button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfDropDownButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1404461336,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.SfDropDownButton.ChildContent","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            Sets content for button element including HTML and its customizations.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfDropDownButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfDropDownButton.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-505318425,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.SfDropDownButton.ChildContent","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            Sets content for button element including HTML and its customizations.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.SplitButtons.SfDropDownButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfDropDownButton.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-179913143,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.SfDropDownButton.PopupContent","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            To specify the custom popup content instead of Items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupContent","ParentTag":"SfDropDownButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfDropDownButton.PopupContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1394426578,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.SfDropDownButton.PopupContent","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            To specify the custom popup content instead of Items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupContent","ParentTag":"Syncfusion.Blazor.SplitButtons.SfDropDownButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfDropDownButton.PopupContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2716444,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.SfProgressButton","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            ProgressButton visualizes the progression of an operation to indicate the user that a process is happening in the background with visual representation.\n            </summary>\n            <summary>\n            ProgressButton visualizes the progression of an operation to indicate the user that a process is happening in the background with visual representation.\n            </summary>\n            <summary>\n            ProgressButton visualizes the progression of an operation to indicate the user that a process is happening in the background with visual representation.\n            </summary>\n            <summary>\n            ProgressButton visualizes the progression of an operation to indicate the user that a process is happening in the background with visual representation.\n            </summary>\n            <summary>\n            ProgressButton visualizes the progression of an operation to indicate the user that a process is happening in the background with visual representation.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfProgressButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Triggers when button element is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sets content for progress button element including HTML and its customizations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text content of the progress button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the root CSS class of the progress button that allows customization of component’s appearance.\n            The progress button types, styles, and size can be achieved by using this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables the progress button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the duration of progression in the progress button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"EnableProgress","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables the background filler UI in the progress button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableProgress"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables the Rtl support.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the progress button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space for the progress button that is used to include an icon.\n            Progress button can also include font icon and sprite image.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.Buttons.IconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions an icon in the progress button. The possible values are:\n             Left: The icon will be positioned to the left of the text content.\n             Right: The icon will be positioned to the right of the text content.\n             Top: The icon will be positioned at the top of the text content.\n             Bottom: The icon will be positioned at the bottom of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"IsPrimary","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows the appearance of the progress button to be enhanced and visually appealing when set to true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrimary"}},{"Kind":"Components.Component","Name":"IsToggle","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Makes the progress button toggle, when set to true. When you click it, the state changes from normal to active.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsToggle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfProgressButton"}},{"HashCode":-1157656990,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.SfProgressButton","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            ProgressButton visualizes the progression of an operation to indicate the user that a process is happening in the background with visual representation.\n            </summary>\n            <summary>\n            ProgressButton visualizes the progression of an operation to indicate the user that a process is happening in the background with visual representation.\n            </summary>\n            <summary>\n            ProgressButton visualizes the progression of an operation to indicate the user that a process is happening in the background with visual representation.\n            </summary>\n            <summary>\n            ProgressButton visualizes the progression of an operation to indicate the user that a process is happening in the background with visual representation.\n            </summary>\n            <summary>\n            ProgressButton visualizes the progression of an operation to indicate the user that a process is happening in the background with visual representation.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SplitButtons.SfProgressButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Triggers when button element is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sets content for progress button element including HTML and its customizations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text content of the progress button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the root CSS class of the progress button that allows customization of component’s appearance.\n            The progress button types, styles, and size can be achieved by using this property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables the progress button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the duration of progression in the progress button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"EnableProgress","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables the background filler UI in the progress button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableProgress"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables the Rtl support.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the progress button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space for the progress button that is used to include an icon.\n            Progress button can also include font icon and sprite image.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.Buttons.IconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions an icon in the progress button. The possible values are:\n             Left: The icon will be positioned to the left of the text content.\n             Right: The icon will be positioned to the right of the text content.\n             Top: The icon will be positioned at the top of the text content.\n             Bottom: The icon will be positioned at the bottom of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"IsPrimary","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows the appearance of the progress button to be enhanced and visually appealing when set to true.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPrimary"}},{"Kind":"Components.Component","Name":"IsToggle","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Makes the progress button toggle, when set to true. When you click it, the state changes from normal to active.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsToggle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfProgressButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-64804753,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.SfProgressButton.ChildContent","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            Sets content for progress button element including HTML and its customizations.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfProgressButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfProgressButton.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-804795023,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.SfProgressButton.ChildContent","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            Sets content for progress button element including HTML and its customizations.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.SplitButtons.SfProgressButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfProgressButton.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-680063532,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.ProgressButtonAnimationSettings","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            Specifies the animation settings for the progress button.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ProgressButtonAnimationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the duration taken to animate.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the animation timing function.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}},{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.SplitButtons.AnimationEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the effect of animation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.ProgressButtonAnimationSettings"}},{"HashCode":-2038282785,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.ProgressButtonAnimationSettings","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            Specifies the animation settings for the progress button.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SplitButtons.ProgressButtonAnimationSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"\n            <summary>\n            Specifies the duration taken to animate.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Easing","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the animation timing function.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Easing"}},{"Kind":"Components.Component","Name":"Effect","TypeName":"Syncfusion.Blazor.SplitButtons.AnimationEffect","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the effect of animation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Effect"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.ProgressButtonAnimationSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":279944881,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.ProgressButtonEvents","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            Used to configure the progress button events.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ProgressButtonEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnBegin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.ProgressEventArgs>","Documentation":"\n            <summary>\n            Triggers when the progress starts.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnBegin","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnEnd","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.ProgressEventArgs>","Documentation":"\n            <summary>\n            Triggers when the progress is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnEnd","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Exception>","Documentation":"\n            <summary>\n            Triggers when the progress is incomplete.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Progressing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.ProgressEventArgs>","Documentation":"\n            <summary>\n            Triggers in specified intervals.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Progressing","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.ProgressButtonEvents"}},{"HashCode":-372165057,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.ProgressButtonEvents","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            Used to configure the progress button events.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SplitButtons.ProgressButtonEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnBegin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.ProgressEventArgs>","Documentation":"\n            <summary>\n            Triggers when the progress starts.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnBegin","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnEnd","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.ProgressEventArgs>","Documentation":"\n            <summary>\n            Triggers when the progress is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnEnd","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFailure","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Exception>","Documentation":"\n            <summary>\n            Triggers when the progress is incomplete.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnFailure","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Progressing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.ProgressEventArgs>","Documentation":"\n            <summary>\n            Triggers in specified intervals.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Progressing","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.ProgressButtonEvents","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1387774638,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.ProgressButtonSpinSettings","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            Specifies the spin settings for the progress button.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ProgressButtonSpinSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.SplitButtons.SpinPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the position of a spinner in the progress button. The possible values are:\n             Left: The spinner will be positioned to the left of the text content.\n             Right: The spinner will be positioned to the right of the text content.\n             Top: The spinner will be positioned at the top of the text content.\n             Bottom: The spinner will be positioned at the bottom of the text content.\n             Center: The spinner will be positioned at the center of the progress button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"SpinTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the template content to be displayed in a spinner.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SpinTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the width of a spinner.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.ProgressButtonSpinSettings"}},{"HashCode":-395627838,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.ProgressButtonSpinSettings","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            Specifies the spin settings for the progress button.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SplitButtons.ProgressButtonSpinSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.SplitButtons.SpinPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies the position of a spinner in the progress button. The possible values are:\n             Left: The spinner will be positioned to the left of the text content.\n             Right: The spinner will be positioned to the right of the text content.\n             Top: The spinner will be positioned at the top of the text content.\n             Bottom: The spinner will be positioned at the bottom of the text content.\n             Center: The spinner will be positioned at the center of the progress button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"SpinTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Specifies the template content to be displayed in a spinner.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SpinTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the width of a spinner.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Width"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.ProgressButtonSpinSettings","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":927865093,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.ProgressButtonSpinSettings.SpinTemplate","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            Specifies the template content to be displayed in a spinner.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SpinTemplate","ParentTag":"ProgressButtonSpinSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.ProgressButtonSpinSettings.SpinTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1955391441,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.ProgressButtonSpinSettings.SpinTemplate","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            Specifies the template content to be displayed in a spinner.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SpinTemplate","ParentTag":"Syncfusion.Blazor.SplitButtons.ProgressButtonSpinSettings"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.ProgressButtonSpinSettings.SpinTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":504617231,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.SfSplitButton","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            SplitButton component has primary and secondary button. Primary button is used to select \n            default action and secondary button is used to toggle contextual overlays for displaying list of \n            action items. It can contain both text and images.\n            </summary>\n            <summary>\n            SplitButton component has primary and secondary button. Primary button is used to select \n            default action and secondary button is used to toggle contextual overlays for displaying list of \n            action items. It can contain both text and images.\n            </summary>\n            <summary>\n            SplitButton component has primary and secondary button. Primary button is used to select \n            default action and secondary button is used to toggle contextual overlays for displaying list of \n            action items. It can contain both text and images.\n            </summary>\n            <summary>\n            SplitButton component has primary and secondary button. Primary button is used to select \n            default action and secondary button is used to toggle contextual overlays for displaying list of \n            action items. It can contain both text and images.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfSplitButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sets content for primary button element including HTML and its customizations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text `Content` of the Button element and it will support only string type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the SplitButton element. The SplitButton\n            size and styles can be customized by using this.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the SplitButton is disabled or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space for the SplitButton that is used to include an\n            icon. SplitButton can also include font icon and sprite image.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.SplitButtons.SplitButtonIconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions the icon before/top of the text content in the SplitButton. The possible values are\n            - Left: The icon will be positioned to the left of the text content.\n            - Top: The icon will b  positioned to the top of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.SplitButtons.DropDownMenuItem>","Documentation":"\n            <summary>\n            Specifies action items with its properties which will be rendered as SplitButton secondary button popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"PopupContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Allows to specify the custom popup content instead of Items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the primary button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfSplitButton"}},{"HashCode":1747548585,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.SfSplitButton","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            SplitButton component has primary and secondary button. Primary button is used to select \n            default action and secondary button is used to toggle contextual overlays for displaying list of \n            action items. It can contain both text and images.\n            </summary>\n            <summary>\n            SplitButton component has primary and secondary button. Primary button is used to select \n            default action and secondary button is used to toggle contextual overlays for displaying list of \n            action items. It can contain both text and images.\n            </summary>\n            <summary>\n            SplitButton component has primary and secondary button. Primary button is used to select \n            default action and secondary button is used to toggle contextual overlays for displaying list of \n            action items. It can contain both text and images.\n            </summary>\n            <summary>\n            SplitButton component has primary and secondary button. Primary button is used to select \n            default action and secondary button is used to toggle contextual overlays for displaying list of \n            action items. It can contain both text and images.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SplitButtons.SfSplitButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sets content for primary button element including HTML and its customizations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines the text `Content` of the Button element and it will support only string type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space in the SplitButton element. The SplitButton\n            size and styles can be customized by using this.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies a value that indicates whether the SplitButton is disabled or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space for the SplitButton that is used to include an\n            icon. SplitButton can also include font icon and sprite image.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"IconPosition","TypeName":"Syncfusion.Blazor.SplitButtons.SplitButtonIconPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positions the icon before/top of the text content in the SplitButton. The possible values are\n            - Left: The icon will be positioned to the left of the text content.\n            - Top: The icon will b  positioned to the top of the text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPosition"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.SplitButtons.DropDownMenuItem>","Documentation":"\n            <summary>\n            Specifies action items with its properties which will be rendered as SplitButton secondary button popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"PopupContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Allows to specify the custom popup content instead of Items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PopupContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the primary button element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfSplitButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1095496880,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.SfSplitButton.ChildContent","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            Sets content for primary button element including HTML and its customizations.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfSplitButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfSplitButton.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-786352630,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.SfSplitButton.ChildContent","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            Sets content for primary button element including HTML and its customizations.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.SplitButtons.SfSplitButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfSplitButton.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1844897211,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.SfSplitButton.PopupContent","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            Allows to specify the custom popup content instead of Items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupContent","ParentTag":"SfSplitButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfSplitButton.PopupContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1028217199,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.SfSplitButton.PopupContent","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            Allows to specify the custom popup content instead of Items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupContent","ParentTag":"Syncfusion.Blazor.SplitButtons.SfSplitButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SfSplitButton.PopupContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":594150780,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.SplitButtonEvents","AssemblyName":"Syncfusion.Blazor.SplitButtons","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SplitButtonEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs>","Documentation":"\n            <summary>\n            Triggers before closing the SplitButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnItemRender","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.MenuEventArgs>","Documentation":"\n            <summary>\n            Triggers while rendering each Popup item of SplitButton.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnItemRender","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs>","Documentation":"\n            <summary>\n            Triggers before opening the SplitButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Clicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.ClickEventArgs>","Documentation":"\n            <summary>\n            Triggers when the primary button of SplitButton has been clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Clicked","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.OpenCloseMenuEventArgs>","Documentation":"\n            <summary>\n            Triggers while closing the SplitButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.OpenCloseMenuEventArgs>","Documentation":"\n            <summary>\n            Triggers while opening the SplitButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.MenuEventArgs>","Documentation":"\n            <summary>\n            Triggers while selecting action item of SplitButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSelected","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SplitButtonEvents"}},{"HashCode":-1790758756,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.SplitButtonEvents","AssemblyName":"Syncfusion.Blazor.SplitButtons","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SplitButtons.SplitButtonEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs>","Documentation":"\n            <summary>\n            Triggers before closing the SplitButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClose","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnItemRender","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.MenuEventArgs>","Documentation":"\n            <summary>\n            Triggers while rendering each Popup item of SplitButton.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnItemRender","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs>","Documentation":"\n            <summary>\n            Triggers before opening the SplitButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnOpen","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Clicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.ClickEventArgs>","Documentation":"\n            <summary>\n            Triggers when the primary button of SplitButton has been clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Clicked","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.OpenCloseMenuEventArgs>","Documentation":"\n            <summary>\n            Triggers while closing the SplitButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Closed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Created","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.OpenCloseMenuEventArgs>","Documentation":"\n            <summary>\n            Triggers while opening the SplitButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Opened","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.SplitButtons.MenuEventArgs>","Documentation":"\n            <summary>\n            Triggers while selecting action item of SplitButton popup.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSelected","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.SplitButtonEvents","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1741799018,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.DropDownMenuItem","AssemblyName":"Syncfusion.Blazor.SplitButtons","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DropDownMenuItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Set custom content for items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space for the item that is used to include an icon.\n            Action item can include font icon and sprite image.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Separator","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies separator between the items. Separator are horizontal lines used to group action items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Separator"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Used to enable or disable the action items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies text for item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies url for item that creates the anchor link to navigate to the url provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Url"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies unique id for item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional HTML attributes such as style, title etc., to the item\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.DropDownMenuItem"}},{"HashCode":1886108979,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.DropDownMenuItem","AssemblyName":"Syncfusion.Blazor.SplitButtons","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SplitButtons.DropDownMenuItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Set custom content for items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IconCss","TypeName":"System.String","Documentation":"\n            <summary>\n            Defines class/multiple classes separated by a space for the item that is used to include an icon.\n            Action item can include font icon and sprite image.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCss"}},{"Kind":"Components.Component","Name":"Separator","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Specifies separator between the items. Separator are horizontal lines used to group action items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Separator"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Used to enable or disable the action items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies text for item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies url for item that creates the anchor link to navigate to the url provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Url"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies unique id for item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            You can add the additional HTML attributes such as style, title etc., to the item\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.DropDownMenuItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-818719374,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.DropDownMenuItem.ChildContent","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            Set custom content for items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DropDownMenuItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.DropDownMenuItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-501411314,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.DropDownMenuItem.ChildContent","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <summary>\n            Set custom content for items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.SplitButtons.DropDownMenuItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.DropDownMenuItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":617337462,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.DropDownMenuItems","AssemblyName":"Syncfusion.Blazor.SplitButtons","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DropDownMenuItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.DropDownMenuItems"}},{"HashCode":-1475089062,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.DropDownMenuItems","AssemblyName":"Syncfusion.Blazor.SplitButtons","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SplitButtons.DropDownMenuItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <exclude />\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.DropDownMenuItems","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1040285199,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.DropDownMenuItems.ChildContent","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DropDownMenuItems"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.DropDownMenuItems.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1566986446,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.SplitButtons.DropDownMenuItems.ChildContent","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"\n            <exclude />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.SplitButtons.DropDownMenuItems"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Syncfusion.Blazor.SplitButtons.DropDownMenuItems.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1583472670,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons._Imports","AssemblyName":"Syncfusion.Blazor.SplitButtons","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons._Imports"}},{"HashCode":-675043969,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons._Imports","AssemblyName":"Syncfusion.Blazor.SplitButtons","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SplitButtons._Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons._Imports","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-47561262,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.Internal.DropDownMenu","AssemblyName":"Syncfusion.Blazor.SplitButtons","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DropDownMenu"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.Internal.DropDownMenu"}},{"HashCode":361678774,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SplitButtons.Internal.DropDownMenu","AssemblyName":"Syncfusion.Blazor.SplitButtons","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SplitButtons.Internal.DropDownMenu"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SplitButtons.Internal.DropDownMenu","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":469224975,"Kind":"Components.EventHandler","Name":"onfocus","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocus","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocus"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocus' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocus' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":636009819,"Kind":"Components.EventHandler","Name":"onblur","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onblur","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onblur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onblur"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onblur' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onblur' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":546575177,"Kind":"Components.EventHandler","Name":"onfocusin","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusin","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusin"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusin' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocusin' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-2114769399,"Kind":"Components.EventHandler","Name":"onfocusout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocusout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1550772779,"Kind":"Components.EventHandler","Name":"onmouseover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":612198687,"Kind":"Components.EventHandler","Name":"onmouseout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-2060463747,"Kind":"Components.EventHandler","Name":"onmousemove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousemove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousemove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousemove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousemove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousemove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1326584478,"Kind":"Components.EventHandler","Name":"onmousedown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousedown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousedown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousedown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousedown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousedown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-395655512,"Kind":"Components.EventHandler","Name":"onmouseup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1580936022,"Kind":"Components.EventHandler","Name":"onclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onclick' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onclick' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-543923158,"Kind":"Components.EventHandler","Name":"ondblclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondblclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondblclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondblclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondblclick' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondblclick' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":660330704,"Kind":"Components.EventHandler","Name":"onwheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":"Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwheel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onwheel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-834393148,"Kind":"Components.EventHandler","Name":"onmousewheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousewheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousewheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":"Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousewheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousewheel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousewheel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":320548796,"Kind":"Components.EventHandler","Name":"oncontextmenu","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncontextmenu","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncontextmenu","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncontextmenu"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncontextmenu' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncontextmenu' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":74517637,"Kind":"Components.EventHandler","Name":"ondrag","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrag","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrag","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrag"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrag' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondrag' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":879601327,"Kind":"Components.EventHandler","Name":"ondragend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-318285175,"Kind":"Components.EventHandler","Name":"ondragenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1419540319,"Kind":"Components.EventHandler","Name":"ondragleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":409020797,"Kind":"Components.EventHandler","Name":"ondragover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1324656409,"Kind":"Components.EventHandler","Name":"ondragstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1401153931,"Kind":"Components.EventHandler","Name":"ondrop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrop' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondrop' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1104389462,"Kind":"Components.EventHandler","Name":"onkeydown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeydown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeydown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeydown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeydown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeydown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":120046139,"Kind":"Components.EventHandler","Name":"onkeyup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeyup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeyup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeyup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeyup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeyup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":240557118,"Kind":"Components.EventHandler","Name":"onkeypress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeypress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeypress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeypress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeypress' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeypress' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-798535488,"Kind":"Components.EventHandler","Name":"onchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-148825719,"Kind":"Components.EventHandler","Name":"oninput","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninput","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninput"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninput' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oninput' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1657218375,"Kind":"Components.EventHandler","Name":"oninvalid","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninvalid","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninvalid","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninvalid"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninvalid' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oninvalid' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1575359467,"Kind":"Components.EventHandler","Name":"onreset","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreset","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreset","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreset"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreset' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onreset' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1832139381,"Kind":"Components.EventHandler","Name":"onselect","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselect","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselect"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselect' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselect' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":314395922,"Kind":"Components.EventHandler","Name":"onselectstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselectstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":466631769,"Kind":"Components.EventHandler","Name":"onselectionchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectionchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectionchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectionchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectionchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselectionchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-620654161,"Kind":"Components.EventHandler","Name":"onsubmit","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsubmit","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsubmit"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsubmit' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onsubmit' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":395294726,"Kind":"Components.EventHandler","Name":"onbeforecopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecopy' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforecopy' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-196963757,"Kind":"Components.EventHandler","Name":"onbeforecut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecut' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforecut' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":133350078,"Kind":"Components.EventHandler","Name":"onbeforepaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforepaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforepaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforepaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforepaste' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforepaste' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1632911159,"Kind":"Components.EventHandler","Name":"oncopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncopy' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncopy' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1992045051,"Kind":"Components.EventHandler","Name":"oncut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncut' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncut' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":434043723,"Kind":"Components.EventHandler","Name":"onpaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpaste' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpaste' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":772720459,"Kind":"Components.EventHandler","Name":"ontouchcancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchcancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchcancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchcancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchcancel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchcancel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1330823382,"Kind":"Components.EventHandler","Name":"ontouchend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":817317830,"Kind":"Components.EventHandler","Name":"ontouchmove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchmove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchmove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchmove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchmove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchmove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-438970647,"Kind":"Components.EventHandler","Name":"ontouchstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1779680239,"Kind":"Components.EventHandler","Name":"ontouchenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1488654964,"Kind":"Components.EventHandler","Name":"ontouchleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1871753312,"Kind":"Components.EventHandler","Name":"ongotpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ongotpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ongotpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ongotpointercapture' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ongotpointercapture' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":583309410,"Kind":"Components.EventHandler","Name":"onlostpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onlostpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onlostpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onlostpointercapture' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onlostpointercapture' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":751792818,"Kind":"Components.EventHandler","Name":"onpointercancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointercancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointercancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointercancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointercancel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointercancel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-699986234,"Kind":"Components.EventHandler","Name":"onpointerdown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerdown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerdown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerdown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerdown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerdown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":52762667,"Kind":"Components.EventHandler","Name":"onpointerenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-2132332790,"Kind":"Components.EventHandler","Name":"onpointerleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1915518260,"Kind":"Components.EventHandler","Name":"onpointermove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointermove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointermove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointermove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointermove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointermove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1632728403,"Kind":"Components.EventHandler","Name":"onpointerout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1007967319,"Kind":"Components.EventHandler","Name":"onpointerover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":326400237,"Kind":"Components.EventHandler","Name":"onpointerup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1538588348,"Kind":"Components.EventHandler","Name":"oncanplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplay' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncanplay' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":481427772,"Kind":"Components.EventHandler","Name":"oncanplaythrough","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplaythrough","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplaythrough"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplaythrough' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncanplaythrough' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1941393997,"Kind":"Components.EventHandler","Name":"oncuechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncuechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncuechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncuechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncuechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncuechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":145174147,"Kind":"Components.EventHandler","Name":"ondurationchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondurationchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondurationchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondurationchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondurationchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondurationchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1616493707,"Kind":"Components.EventHandler","Name":"onemptied","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onemptied","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onemptied","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onemptied"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onemptied' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onemptied' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":2049924970,"Kind":"Components.EventHandler","Name":"onpause","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpause","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpause","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpause"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpause' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpause' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-499411268,"Kind":"Components.EventHandler","Name":"onplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplay' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onplay' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-467955947,"Kind":"Components.EventHandler","Name":"onplaying","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplaying","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplaying","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplaying"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplaying' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onplaying' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-646455659,"Kind":"Components.EventHandler","Name":"onratechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onratechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onratechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onratechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onratechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onratechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1318909817,"Kind":"Components.EventHandler","Name":"onseeked","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeked","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeked"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeked' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onseeked' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-566190700,"Kind":"Components.EventHandler","Name":"onseeking","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeking","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeking","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeking"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeking' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onseeking' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1370031643,"Kind":"Components.EventHandler","Name":"onstalled","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstalled","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstalled","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstalled"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstalled' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onstalled' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1396958713,"Kind":"Components.EventHandler","Name":"onstop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstop' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onstop' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-584687426,"Kind":"Components.EventHandler","Name":"onsuspend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsuspend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsuspend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsuspend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsuspend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onsuspend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1507174455,"Kind":"Components.EventHandler","Name":"ontimeupdate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeupdate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeupdate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeupdate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeupdate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontimeupdate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1480061990,"Kind":"Components.EventHandler","Name":"onvolumechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onvolumechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onvolumechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onvolumechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onvolumechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onvolumechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":395230637,"Kind":"Components.EventHandler","Name":"onwaiting","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwaiting","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwaiting","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwaiting"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwaiting' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onwaiting' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":749652276,"Kind":"Components.EventHandler","Name":"onloadstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1279740321,"Kind":"Components.EventHandler","Name":"ontimeout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontimeout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":2011637847,"Kind":"Components.EventHandler","Name":"onabort","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onabort","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onabort","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onabort"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onabort' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onabort' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-921956754,"Kind":"Components.EventHandler","Name":"onload","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onload","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onload","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onload"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onload' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onload' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1440136766,"Kind":"Components.EventHandler","Name":"onloadend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":257822301,"Kind":"Components.EventHandler","Name":"onprogress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onprogress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onprogress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onprogress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onprogress' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onprogress' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1058047039,"Kind":"Components.EventHandler","Name":"onerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>","Documentation":"Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ErrorEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":104249782,"Kind":"Components.EventHandler","Name":"onactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-386211422,"Kind":"Components.EventHandler","Name":"onbeforeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":832686668,"Kind":"Components.EventHandler","Name":"onbeforedeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforedeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforedeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforedeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforedeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-279644017,"Kind":"Components.EventHandler","Name":"ondeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":891414409,"Kind":"Components.EventHandler","Name":"onended","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onended","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onended","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onended"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onended' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onended' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":2123884659,"Kind":"Components.EventHandler","Name":"onfullscreenchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfullscreenchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-463806918,"Kind":"Components.EventHandler","Name":"onfullscreenerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfullscreenerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-884469555,"Kind":"Components.EventHandler","Name":"onloadeddata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadeddata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadeddata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadeddata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadeddata' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadeddata' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":671319647,"Kind":"Components.EventHandler","Name":"onloadedmetadata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadedmetadata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadedmetadata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadedmetadata' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadedmetadata' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":74752683,"Kind":"Components.EventHandler","Name":"onpointerlockchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerlockchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1986906860,"Kind":"Components.EventHandler","Name":"onpointerlockerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerlockerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":738238011,"Kind":"Components.EventHandler","Name":"onreadystatechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreadystatechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreadystatechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreadystatechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreadystatechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onreadystatechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1984892155,"Kind":"Components.EventHandler","Name":"onscroll","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onscroll","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onscroll","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onscroll"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onscroll' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onscroll' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1259166588,"Kind":"Components.EventHandler","Name":"ontoggle","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontoggle","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontoggle:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontoggle:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontoggle","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontoggle"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontoggle' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontoggle' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1270112777,"Kind":"Components.Splat","Name":"Attributes","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Merges a collection of attributes into the current element or component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@attributes","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Splat","Name":"@attributes","TypeName":"System.Object","Documentation":"Merges a collection of attributes into the current element or component.","Metadata":{"Common.PropertyName":"Attributes","Common.DirectiveAttribute":"True"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Splat","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Attributes"}},{"HashCode":999350350,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@bind-","NameComparison":1,"Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-...","TypeName":"System.Collections.Generic.Dictionary<string, object>","IndexerNamePrefix":"@bind-","IndexerTypeName":"System.Object","Documentation":"Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the corresponding bind attribute. For example: <code>@bind-value:format=\"...\"</code> will apply a format string to the value specified in <code>@bind-value=\"...\"</code>. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-...' attribute.","Metadata":{"Common.PropertyName":"Event"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.Fallback":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Bind"}},{"HashCode":-1874581601,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":688756199,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":1525564843,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"checkbox","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_checked"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_checked"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-checked","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_checked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"checked","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"checkbox","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-2050403530,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"text","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"text","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":1758301023,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"number","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":2003827684,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"number","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-259225247,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-dd","Components.Bind.TypeAttribute":"date","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-570582221,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-dd","Components.Bind.TypeAttribute":"date","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":564364738,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Components.Bind.TypeAttribute":"datetime-local","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":1169474289,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Components.Bind.TypeAttribute":"datetime-local","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":871231720,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM","Components.Bind.TypeAttribute":"month","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-1515522350,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM","Components.Bind.TypeAttribute":"month","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-1647736512,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"HH:mm:ss","Components.Bind.TypeAttribute":"time","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":1296198824,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"HH:mm:ss","Components.Bind.TypeAttribute":"time","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-1488907878,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"select","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-596367609,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"textarea","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":1864122447,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox"}},{"HashCode":490191036,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":877686389,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"}},{"HashCode":899488481,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-543982663,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"}},{"HashCode":184745786,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2088536480,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>"}},{"HashCode":622693140,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-796020349,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"}},{"HashCode":646250911,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1614905710,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText"}},{"HashCode":789494904,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":282414888,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea"}},{"HashCode":-1742066353,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-820520594,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Inputs.SfColorPicker","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfColorPicker","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.Inputs.SfColorPicker"}},{"HashCode":2030670275,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Inputs.SfColorPicker","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SfColorPicker","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.Inputs.SfColorPicker","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1650819490,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Inputs.SfMaskedTextBox","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfMaskedTextBox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.Inputs.SfMaskedTextBox"}},{"HashCode":1081310225,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Inputs.SfMaskedTextBox","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SfMaskedTextBox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.Inputs.SfMaskedTextBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1819293944,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Inputs.SfNumericTextBox<TValue>","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfNumericTextBox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.Inputs.SfNumericTextBox<TValue>"}},{"HashCode":312920309,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Inputs.SfNumericTextBox<TValue>","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SfNumericTextBox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.Inputs.SfNumericTextBox<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":875258527,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Inputs.NumericTextBoxEvents<TValue>","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NumericTextBoxEvents","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.Inputs.NumericTextBoxEvents<TValue>"}},{"HashCode":-1313672227,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Inputs.NumericTextBoxEvents<TValue>","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.NumericTextBoxEvents","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.Inputs.NumericTextBoxEvents<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":823422581,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Inputs.SfSlider<TValue>","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfSlider","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.Inputs.SfSlider<TValue>"}},{"HashCode":762206337,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Inputs.SfSlider<TValue>","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SfSlider","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.Inputs.SfSlider<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1171690516,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Inputs.SfTextBox","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfTextBox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.Inputs.SfTextBox"}},{"HashCode":-72562644,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Inputs.SfTextBox","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.SfTextBox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.Inputs.SfTextBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":957966243,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Inputs.Internal.SfInputBase","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfInputBase","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.Inputs.Internal.SfInputBase"}},{"HashCode":-2036903555,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Inputs.Internal.SfInputBase","AssemblyName":"Syncfusion.Blazor.Inputs","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Inputs.Internal.SfInputBase","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.Inputs.Internal.SfInputBase","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1896023762,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Popups.SfDialog","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"Binds the provided expression to the 'Visible' property and a change event delegate to the 'VisibleChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfDialog","Attributes":[{"Name":"@bind-Visible","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Visible","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Visible' property and a change event delegate to the 'VisibleChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Visible"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Visible","Components.Bind.ChangeAttribute":"VisibleChanged","Common.TypeName":"Syncfusion.Blazor.Popups.SfDialog"}},{"HashCode":-645260013,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Popups.SfDialog","AssemblyName":"Syncfusion.Blazor.Popups","Documentation":"Binds the provided expression to the 'Visible' property and a change event delegate to the 'VisibleChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Popups.SfDialog","Attributes":[{"Name":"@bind-Visible","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Visible","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Visible' property and a change event delegate to the 'VisibleChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Visible"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Visible","Components.Bind.ChangeAttribute":"VisibleChanged","Common.TypeName":"Syncfusion.Blazor.Popups.SfDialog","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1949383712,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor<TValue>","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfInPlaceEditor","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor<TValue>"}},{"HashCode":1776577259,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor<TValue>","AssemblyName":"Syncfusion.Blazor.InPlaceEditor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":20050400,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"Binds the provided expression to the 'Index' property and a change event delegate to the 'IndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfAutoComplete","Attributes":[{"Name":"@bind-Index","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Index","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32?>","Documentation":"Binds the provided expression to the 'Index' property and a change event delegate to the 'IndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Index"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Index","Components.Bind.ChangeAttribute":"IndexChanged","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>"}},{"HashCode":-246002343,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfAutoComplete","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>"}},{"HashCode":-1479561296,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"Binds the provided expression to the 'Index' property and a change event delegate to the 'IndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.SfAutoComplete","Attributes":[{"Name":"@bind-Index","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Index","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32?>","Documentation":"Binds the provided expression to the 'Index' property and a change event delegate to the 'IndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Index"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Index","Components.Bind.ChangeAttribute":"IndexChanged","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1476623554,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.SfAutoComplete","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfAutoComplete<TValue, TItem>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":391654118,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"Binds the provided expression to the 'Index' property and a change event delegate to the 'IndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfComboBox","Attributes":[{"Name":"@bind-Index","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Index","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32?>","Documentation":"Binds the provided expression to the 'Index' property and a change event delegate to the 'IndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Index"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Index","Components.Bind.ChangeAttribute":"IndexChanged","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>"}},{"HashCode":-1758745245,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfComboBox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>"}},{"HashCode":-840165089,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"Binds the provided expression to the 'Index' property and a change event delegate to the 'IndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.SfComboBox","Attributes":[{"Name":"@bind-Index","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Index","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32?>","Documentation":"Binds the provided expression to the 'Index' property and a change event delegate to the 'IndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Index"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Index","Components.Bind.ChangeAttribute":"IndexChanged","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1542007644,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.SfComboBox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfComboBox<TValue, TItem>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1282104181,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"Binds the provided expression to the 'Index' property and a change event delegate to the 'IndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfDropDownList","Attributes":[{"Name":"@bind-Index","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Index","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32?>","Documentation":"Binds the provided expression to the 'Index' property and a change event delegate to the 'IndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Index"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Index","Components.Bind.ChangeAttribute":"IndexChanged","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>"}},{"HashCode":-1649944248,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfDropDownList","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>"}},{"HashCode":-970434217,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"Binds the provided expression to the 'Index' property and a change event delegate to the 'IndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.SfDropDownList","Attributes":[{"Name":"@bind-Index","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Index","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32?>","Documentation":"Binds the provided expression to the 'Index' property and a change event delegate to the 'IndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Index"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Index","Components.Bind.ChangeAttribute":"IndexChanged","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1887739869,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.SfDropDownList","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfDropDownList<TValue, TItem>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":632623059,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfListBox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>"}},{"HashCode":-230826262,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.SfListBox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfListBox<TValue, TItem>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":510705577,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfMultiSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>"}},{"HashCode":-1485997673,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>","AssemblyName":"Syncfusion.Blazor.DropDowns","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DropDowns.SfMultiSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Syncfusion.Blazor.DropDowns.SfMultiSelect<TValue, TItem>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-296305465,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Navigations.AccordionItem","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccordionItem","Attributes":[{"Name":"@bind-Expanded","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Expanded"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Expanded","Components.Bind.ChangeAttribute":"ExpandedChanged","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionItem"}},{"HashCode":1220375404,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Navigations.AccordionItem","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.AccordionItem","Attributes":[{"Name":"@bind-Expanded","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Expanded"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Expanded","Components.Bind.ChangeAttribute":"ExpandedChanged","Common.TypeName":"Syncfusion.Blazor.Navigations.AccordionItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":318768078,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Navigations.SfAccordion","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"Binds the provided expression to the 'ExpandedIndices' property and a change event delegate to the 'ExpandedIndicesChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfAccordion","Attributes":[{"Name":"@bind-ExpandedIndices","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ExpandedIndices","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32[]>","Documentation":"Binds the provided expression to the 'ExpandedIndices' property and a change event delegate to the 'ExpandedIndicesChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ExpandedIndices"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ExpandedIndices","Components.Bind.ChangeAttribute":"ExpandedIndicesChanged","Common.TypeName":"Syncfusion.Blazor.Navigations.SfAccordion"}},{"HashCode":-1756484926,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Navigations.SfAccordion","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"Binds the provided expression to the 'ExpandedIndices' property and a change event delegate to the 'ExpandedIndicesChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.SfAccordion","Attributes":[{"Name":"@bind-ExpandedIndices","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ExpandedIndices","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32[]>","Documentation":"Binds the provided expression to the 'ExpandedIndices' property and a change event delegate to the 'ExpandedIndicesChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ExpandedIndices"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ExpandedIndices","Components.Bind.ChangeAttribute":"ExpandedIndicesChanged","Common.TypeName":"Syncfusion.Blazor.Navigations.SfAccordion","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2039802855,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Navigations.SfBreadcrumb","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"Binds the provided expression to the 'ActiveItem' property and a change event delegate to the 'ActiveItemChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfBreadcrumb","Attributes":[{"Name":"@bind-ActiveItem","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActiveItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'ActiveItem' property and a change event delegate to the 'ActiveItemChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ActiveItem"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ActiveItem","Components.Bind.ChangeAttribute":"ActiveItemChanged","Common.TypeName":"Syncfusion.Blazor.Navigations.SfBreadcrumb"}},{"HashCode":-620353332,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Navigations.SfBreadcrumb","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"Binds the provided expression to the 'ActiveItem' property and a change event delegate to the 'ActiveItemChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.SfBreadcrumb","Attributes":[{"Name":"@bind-ActiveItem","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActiveItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'ActiveItem' property and a change event delegate to the 'ActiveItemChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ActiveItem"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ActiveItem","Components.Bind.ChangeAttribute":"ActiveItemChanged","Common.TypeName":"Syncfusion.Blazor.Navigations.SfBreadcrumb","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-150731109,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Navigations.SfSidebar","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfSidebar","Attributes":[{"Name":"@bind-IsOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsOpen","Components.Bind.ChangeAttribute":"IsOpenChanged","Common.TypeName":"Syncfusion.Blazor.Navigations.SfSidebar"}},{"HashCode":-1352765887,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Navigations.SfSidebar","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.SfSidebar","Attributes":[{"Name":"@bind-IsOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsOpen","Components.Bind.ChangeAttribute":"IsOpenChanged","Common.TypeName":"Syncfusion.Blazor.Navigations.SfSidebar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-223672501,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Navigations.SfTab","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfTab","Attributes":[{"Name":"@bind-SelectedItem","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedItem"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedItem","Components.Bind.ChangeAttribute":"SelectedItemChanged","Common.TypeName":"Syncfusion.Blazor.Navigations.SfTab"}},{"HashCode":771278086,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Navigations.SfTab","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.SfTab","Attributes":[{"Name":"@bind-SelectedItem","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedItem"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedItem","Components.Bind.ChangeAttribute":"SelectedItemChanged","Common.TypeName":"Syncfusion.Blazor.Navigations.SfTab","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1927831382,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"Binds the provided expression to the 'CheckedNodes' property and a change event delegate to the 'CheckedNodesChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfTreeView","Attributes":[{"Name":"@bind-CheckedNodes","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-CheckedNodes","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Documentation":"Binds the provided expression to the 'CheckedNodes' property and a change event delegate to the 'CheckedNodesChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"CheckedNodes"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"CheckedNodes","Components.Bind.ChangeAttribute":"CheckedNodesChanged","Common.TypeName":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>"}},{"HashCode":287511084,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"Binds the provided expression to the 'ExpandedNodes' property and a change event delegate to the 'ExpandedNodesChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfTreeView","Attributes":[{"Name":"@bind-ExpandedNodes","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ExpandedNodes","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Documentation":"Binds the provided expression to the 'ExpandedNodes' property and a change event delegate to the 'ExpandedNodesChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ExpandedNodes"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ExpandedNodes","Components.Bind.ChangeAttribute":"ExpandedNodesChanged","Common.TypeName":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>"}},{"HashCode":-315043930,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"Binds the provided expression to the 'SelectedNodes' property and a change event delegate to the 'SelectedNodesChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfTreeView","Attributes":[{"Name":"@bind-SelectedNodes","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedNodes","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Documentation":"Binds the provided expression to the 'SelectedNodes' property and a change event delegate to the 'SelectedNodesChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedNodes"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedNodes","Components.Bind.ChangeAttribute":"SelectedNodesChanged","Common.TypeName":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>"}},{"HashCode":68022096,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"Binds the provided expression to the 'CheckedNodes' property and a change event delegate to the 'CheckedNodesChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.SfTreeView","Attributes":[{"Name":"@bind-CheckedNodes","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-CheckedNodes","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Documentation":"Binds the provided expression to the 'CheckedNodes' property and a change event delegate to the 'CheckedNodesChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"CheckedNodes"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"CheckedNodes","Components.Bind.ChangeAttribute":"CheckedNodesChanged","Common.TypeName":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":875364941,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"Binds the provided expression to the 'ExpandedNodes' property and a change event delegate to the 'ExpandedNodesChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.SfTreeView","Attributes":[{"Name":"@bind-ExpandedNodes","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ExpandedNodes","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Documentation":"Binds the provided expression to the 'ExpandedNodes' property and a change event delegate to the 'ExpandedNodesChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ExpandedNodes"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ExpandedNodes","Components.Bind.ChangeAttribute":"ExpandedNodesChanged","Common.TypeName":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-938606446,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"Binds the provided expression to the 'SelectedNodes' property and a change event delegate to the 'SelectedNodesChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.SfTreeView","Attributes":[{"Name":"@bind-SelectedNodes","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedNodes","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Documentation":"Binds the provided expression to the 'SelectedNodes' property and a change event delegate to the 'SelectedNodesChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedNodes"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedNodes","Components.Bind.ChangeAttribute":"SelectedNodesChanged","Common.TypeName":"Syncfusion.Blazor.Navigations.SfTreeView<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1964885,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Navigations.TreeViewFieldsSettings<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"Binds the provided expression to the 'DataSource' property and a change event delegate to the 'DataSourceChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewFieldsSettings","Attributes":[{"Name":"@bind-DataSource","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-DataSource","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<TValue>>","Documentation":"Binds the provided expression to the 'DataSource' property and a change event delegate to the 'DataSourceChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"DataSource"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"DataSource","Components.Bind.ChangeAttribute":"DataSourceChanged","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewFieldsSettings<TValue>"}},{"HashCode":2075289180,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Navigations.TreeViewFieldsSettings<TValue>","AssemblyName":"Syncfusion.Blazor.Navigations","Documentation":"Binds the provided expression to the 'DataSource' property and a change event delegate to the 'DataSourceChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Navigations.TreeViewFieldsSettings","Attributes":[{"Name":"@bind-DataSource","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-DataSource","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<TValue>>","Documentation":"Binds the provided expression to the 'DataSource' property and a change event delegate to the 'DataSourceChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"DataSource"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"DataSource","Components.Bind.ChangeAttribute":"DataSourceChanged","Common.TypeName":"Syncfusion.Blazor.Navigations.TreeViewFieldsSettings<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1756782586,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"Binds the provided expression to the 'Indeterminate' property and a change event delegate to the 'IndeterminateChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfCheckBox","Attributes":[{"Name":"@bind-Indeterminate","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Indeterminate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Indeterminate' property and a change event delegate to the 'IndeterminateChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Indeterminate"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Indeterminate","Components.Bind.ChangeAttribute":"IndeterminateChanged","Common.TypeName":"Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>"}},{"HashCode":1072923475,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfCheckBox","Attributes":[{"Name":"@bind-Checked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Checked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TChecked>","Documentation":"Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Checked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Checked","Components.Bind.ChangeAttribute":"CheckedChanged","Components.Bind.ExpressionAttribute":"CheckedExpression","Common.TypeName":"Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>"}},{"HashCode":559819551,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"Binds the provided expression to the 'Indeterminate' property and a change event delegate to the 'IndeterminateChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Buttons.SfCheckBox","Attributes":[{"Name":"@bind-Indeterminate","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Indeterminate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Indeterminate' property and a change event delegate to the 'IndeterminateChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Indeterminate"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Indeterminate","Components.Bind.ChangeAttribute":"IndeterminateChanged","Common.TypeName":"Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1398760137,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Buttons.SfCheckBox","Attributes":[{"Name":"@bind-Checked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Checked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TChecked>","Documentation":"Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Checked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Checked","Components.Bind.ChangeAttribute":"CheckedChanged","Components.Bind.ExpressionAttribute":"CheckedExpression","Common.TypeName":"Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":776025600,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Buttons.SfChip","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfChip","Attributes":[{"Name":"@bind-SelectedChips","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedChips","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Documentation":"Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedChips"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedChips","Components.Bind.ChangeAttribute":"SelectedChipsChanged","Common.TypeName":"Syncfusion.Blazor.Buttons.SfChip"}},{"HashCode":-94634487,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Buttons.SfChip","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Buttons.SfChip","Attributes":[{"Name":"@bind-SelectedChips","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedChips","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String[]>","Documentation":"Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedChips"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedChips","Components.Bind.ChangeAttribute":"SelectedChipsChanged","Common.TypeName":"Syncfusion.Blazor.Buttons.SfChip","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-876337493,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfRadioButton","Attributes":[{"Name":"@bind-Checked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Checked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TChecked>","Documentation":"Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Checked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Checked","Components.Bind.ChangeAttribute":"CheckedChanged","Components.Bind.ExpressionAttribute":"CheckedExpression","Common.TypeName":"Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>"}},{"HashCode":360060867,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Buttons.SfRadioButton","Attributes":[{"Name":"@bind-Checked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Checked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TChecked>","Documentation":"Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Checked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Checked","Components.Bind.ChangeAttribute":"CheckedChanged","Components.Bind.ExpressionAttribute":"CheckedExpression","Common.TypeName":"Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1675440890,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Buttons.SfSwitch<TChecked>","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfSwitch","Attributes":[{"Name":"@bind-Checked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Checked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TChecked>","Documentation":"Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Checked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Checked","Components.Bind.ChangeAttribute":"CheckedChanged","Components.Bind.ExpressionAttribute":"CheckedExpression","Common.TypeName":"Syncfusion.Blazor.Buttons.SfSwitch<TChecked>"}},{"HashCode":-310925140,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Buttons.SfSwitch<TChecked>","AssemblyName":"Syncfusion.Blazor.Buttons","Documentation":"Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Buttons.SfSwitch","Attributes":[{"Name":"@bind-Checked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Checked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TChecked>","Documentation":"Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Checked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Checked","Components.Bind.ChangeAttribute":"CheckedChanged","Components.Bind.ExpressionAttribute":"CheckedExpression","Common.TypeName":"Syncfusion.Blazor.Buttons.SfSwitch<TChecked>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-738978177,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerBase","AssemblyName":"Syncfusion.Blazor.PdfViewer","Documentation":"Binds the provided expression to the 'PageCount' property and a change event delegate to the 'PageCountChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerBase","Attributes":[{"Name":"@bind-PageCount","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-PageCount","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'PageCount' property and a change event delegate to the 'PageCountChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"PageCount"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"PageCount","Components.Bind.ChangeAttribute":"PageCountChanged","Components.Bind.ExpressionAttribute":"PageCountExpression","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerBase"}},{"HashCode":783886789,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerBase","AssemblyName":"Syncfusion.Blazor.PdfViewer","Documentation":"Binds the provided expression to the 'CurrentPageNumber' property and a change event delegate to the 'CurrentPageNumberChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerBase","Attributes":[{"Name":"@bind-CurrentPageNumber","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-CurrentPageNumber","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'CurrentPageNumber' property and a change event delegate to the 'CurrentPageNumberChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"CurrentPageNumber"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"CurrentPageNumber","Components.Bind.ChangeAttribute":"CurrentPageNumberChanged","Components.Bind.ExpressionAttribute":"CurrentPageNumberExpression","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerBase"}},{"HashCode":-902889398,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerBase","AssemblyName":"Syncfusion.Blazor.PdfViewer","Documentation":"Binds the provided expression to the 'ZoomValue' property and a change event delegate to the 'ZoomValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PdfViewerBase","Attributes":[{"Name":"@bind-ZoomValue","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ZoomValue","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'ZoomValue' property and a change event delegate to the 'ZoomValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ZoomValue"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ZoomValue","Components.Bind.ChangeAttribute":"ZoomValueChanged","Components.Bind.ExpressionAttribute":"ZoomValueExpression","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerBase"}},{"HashCode":1871062607,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerBase","AssemblyName":"Syncfusion.Blazor.PdfViewer","Documentation":"Binds the provided expression to the 'PageCount' property and a change event delegate to the 'PageCountChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerBase","Attributes":[{"Name":"@bind-PageCount","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-PageCount","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'PageCount' property and a change event delegate to the 'PageCountChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"PageCount"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"PageCount","Components.Bind.ChangeAttribute":"PageCountChanged","Components.Bind.ExpressionAttribute":"PageCountExpression","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerBase","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-851233862,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerBase","AssemblyName":"Syncfusion.Blazor.PdfViewer","Documentation":"Binds the provided expression to the 'CurrentPageNumber' property and a change event delegate to the 'CurrentPageNumberChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerBase","Attributes":[{"Name":"@bind-CurrentPageNumber","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-CurrentPageNumber","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'CurrentPageNumber' property and a change event delegate to the 'CurrentPageNumberChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"CurrentPageNumber"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"CurrentPageNumber","Components.Bind.ChangeAttribute":"CurrentPageNumberChanged","Components.Bind.ExpressionAttribute":"CurrentPageNumberExpression","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerBase","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1495140890,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.PdfViewer.PdfViewerBase","AssemblyName":"Syncfusion.Blazor.PdfViewer","Documentation":"Binds the provided expression to the 'ZoomValue' property and a change event delegate to the 'ZoomValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.PdfViewerBase","Attributes":[{"Name":"@bind-ZoomValue","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ZoomValue","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'ZoomValue' property and a change event delegate to the 'ZoomValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ZoomValue"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ZoomValue","Components.Bind.ChangeAttribute":"ZoomValueChanged","Components.Bind.ExpressionAttribute":"ZoomValueExpression","Common.TypeName":"Syncfusion.Blazor.PdfViewer.PdfViewerBase","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":705226521,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.PdfViewer.SfPdfViewer","AssemblyName":"Syncfusion.Blazor.PdfViewer","Documentation":"Binds the provided expression to the 'PageCount' property and a change event delegate to the 'PageCountChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfPdfViewer","Attributes":[{"Name":"@bind-PageCount","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-PageCount","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'PageCount' property and a change event delegate to the 'PageCountChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"PageCount"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"PageCount","Components.Bind.ChangeAttribute":"PageCountChanged","Components.Bind.ExpressionAttribute":"PageCountExpression","Common.TypeName":"Syncfusion.Blazor.PdfViewer.SfPdfViewer"}},{"HashCode":-2116606942,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.PdfViewer.SfPdfViewer","AssemblyName":"Syncfusion.Blazor.PdfViewer","Documentation":"Binds the provided expression to the 'CurrentPageNumber' property and a change event delegate to the 'CurrentPageNumberChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfPdfViewer","Attributes":[{"Name":"@bind-CurrentPageNumber","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-CurrentPageNumber","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'CurrentPageNumber' property and a change event delegate to the 'CurrentPageNumberChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"CurrentPageNumber"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"CurrentPageNumber","Components.Bind.ChangeAttribute":"CurrentPageNumberChanged","Components.Bind.ExpressionAttribute":"CurrentPageNumberExpression","Common.TypeName":"Syncfusion.Blazor.PdfViewer.SfPdfViewer"}},{"HashCode":-1619094921,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.PdfViewer.SfPdfViewer","AssemblyName":"Syncfusion.Blazor.PdfViewer","Documentation":"Binds the provided expression to the 'ZoomValue' property and a change event delegate to the 'ZoomValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfPdfViewer","Attributes":[{"Name":"@bind-ZoomValue","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ZoomValue","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'ZoomValue' property and a change event delegate to the 'ZoomValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ZoomValue"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ZoomValue","Components.Bind.ChangeAttribute":"ZoomValueChanged","Components.Bind.ExpressionAttribute":"ZoomValueExpression","Common.TypeName":"Syncfusion.Blazor.PdfViewer.SfPdfViewer"}},{"HashCode":173017901,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.PdfViewer.SfPdfViewer","AssemblyName":"Syncfusion.Blazor.PdfViewer","Documentation":"Binds the provided expression to the 'PageCount' property and a change event delegate to the 'PageCountChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.SfPdfViewer","Attributes":[{"Name":"@bind-PageCount","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-PageCount","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'PageCount' property and a change event delegate to the 'PageCountChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"PageCount"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"PageCount","Components.Bind.ChangeAttribute":"PageCountChanged","Components.Bind.ExpressionAttribute":"PageCountExpression","Common.TypeName":"Syncfusion.Blazor.PdfViewer.SfPdfViewer","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":228495303,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.PdfViewer.SfPdfViewer","AssemblyName":"Syncfusion.Blazor.PdfViewer","Documentation":"Binds the provided expression to the 'CurrentPageNumber' property and a change event delegate to the 'CurrentPageNumberChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.SfPdfViewer","Attributes":[{"Name":"@bind-CurrentPageNumber","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-CurrentPageNumber","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'CurrentPageNumber' property and a change event delegate to the 'CurrentPageNumberChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"CurrentPageNumber"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"CurrentPageNumber","Components.Bind.ChangeAttribute":"CurrentPageNumberChanged","Components.Bind.ExpressionAttribute":"CurrentPageNumberExpression","Common.TypeName":"Syncfusion.Blazor.PdfViewer.SfPdfViewer","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-526509219,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.PdfViewer.SfPdfViewer","AssemblyName":"Syncfusion.Blazor.PdfViewer","Documentation":"Binds the provided expression to the 'ZoomValue' property and a change event delegate to the 'ZoomValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.PdfViewer.SfPdfViewer","Attributes":[{"Name":"@bind-ZoomValue","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ZoomValue","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'ZoomValue' property and a change event delegate to the 'ZoomValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ZoomValue"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ZoomValue","Components.Bind.ChangeAttribute":"ZoomValueChanged","Components.Bind.ExpressionAttribute":"ZoomValueExpression","Common.TypeName":"Syncfusion.Blazor.PdfViewer.SfPdfViewer","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1436662692,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Spinner.SfSpinner","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"Binds the provided expression to the 'Visible' property and a change event delegate to the 'VisibleChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfSpinner","Attributes":[{"Name":"@bind-Visible","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Visible","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Visible' property and a change event delegate to the 'VisibleChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Visible"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Visible","Components.Bind.ChangeAttribute":"VisibleChanged","Common.TypeName":"Syncfusion.Blazor.Spinner.SfSpinner"}},{"HashCode":1149847587,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Spinner.SfSpinner","AssemblyName":"Syncfusion.Blazor.Spinner","Documentation":"Binds the provided expression to the 'Visible' property and a change event delegate to the 'VisibleChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Spinner.SfSpinner","Attributes":[{"Name":"@bind-Visible","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Visible","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Visible' property and a change event delegate to the 'VisibleChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Visible"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Visible","Components.Bind.ChangeAttribute":"VisibleChanged","Common.TypeName":"Syncfusion.Blazor.Spinner.SfSpinner","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":270576108,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.SplitButtons.ButtonGroupButton","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ButtonGroupButton","Attributes":[{"Name":"@bind-Selected","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Selected"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Selected","Components.Bind.ChangeAttribute":"SelectedChanged","Common.TypeName":"Syncfusion.Blazor.SplitButtons.ButtonGroupButton"}},{"HashCode":-1747178657,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.SplitButtons.ButtonGroupButton","AssemblyName":"Syncfusion.Blazor.SplitButtons","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SplitButtons.ButtonGroupButton","Attributes":[{"Name":"@bind-Selected","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Selected"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Selected","Components.Bind.ChangeAttribute":"SelectedChanged","Common.TypeName":"Syncfusion.Blazor.SplitButtons.ButtonGroupButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":93715084,"Kind":"Components.Ref","Name":"Ref","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Populates the specified field or property with a reference to the element or component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ref","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Ref","Name":"@ref","TypeName":"System.Object","Documentation":"Populates the specified field or property with a reference to the element or component.","Metadata":{"Common.PropertyName":"Ref","Common.DirectiveAttribute":"True"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Ref","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Ref"}},{"HashCode":-115576540,"Kind":"Components.Key","Name":"Key","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@key","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Key","Name":"@key","TypeName":"System.Object","Documentation":"Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.","Metadata":{"Common.PropertyName":"Key","Common.DirectiveAttribute":"True"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Key","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Key"}}],"CSharpLanguageVersion":1000},"RootNamespace":"PDFViewerSample.Client","Documents":[{"FilePath":"F:\\Code\\Blazor-Getting-Started-Examples\\PDFViewer\\BlazorWASMApp\\PDFViewerSample\\Client\\_Imports.razor","TargetPath":"_Imports.razor","FileKind":"componentImport"},{"FilePath":"F:\\Code\\Blazor-Getting-Started-Examples\\PDFViewer\\BlazorWASMApp\\PDFViewerSample\\Client\\Shared\\NavMenu.razor","TargetPath":"Shared\\NavMenu.razor","FileKind":"component"},{"FilePath":"F:\\Code\\Blazor-Getting-Started-Examples\\PDFViewer\\BlazorWASMApp\\PDFViewerSample\\Client\\App.razor","TargetPath":"App.razor","FileKind":"component"},{"FilePath":"F:\\Code\\Blazor-Getting-Started-Examples\\PDFViewer\\BlazorWASMApp\\PDFViewerSample\\Client\\Pages\\Counter.razor","TargetPath":"Pages\\Counter.razor","FileKind":"component"},{"FilePath":"F:\\Code\\Blazor-Getting-Started-Examples\\PDFViewer\\BlazorWASMApp\\PDFViewerSample\\Client\\Pages\\FetchData.razor","TargetPath":"Pages\\FetchData.razor","FileKind":"component"},{"FilePath":"F:\\Code\\Blazor-Getting-Started-Examples\\PDFViewer\\BlazorWASMApp\\PDFViewerSample\\Client\\Shared\\MainLayout.razor","TargetPath":"Shared\\MainLayout.razor","FileKind":"component"},{"FilePath":"F:\\Code\\Blazor-Getting-Started-Examples\\PDFViewer\\BlazorWASMApp\\PDFViewerSample\\Client\\Shared\\SurveyPrompt.razor","TargetPath":"Shared\\SurveyPrompt.razor","FileKind":"component"},{"FilePath":"F:\\Code\\Blazor-Getting-Started-Examples\\PDFViewer\\BlazorWASMApp\\PDFViewerSample\\Client\\Pages\\Index.razor","TargetPath":"Pages\\Index.razor","FileKind":"component"}],"SerializationFormat":"0.3"}